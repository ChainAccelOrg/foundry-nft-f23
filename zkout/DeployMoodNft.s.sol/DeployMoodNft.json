{"abi":null,"bytecode":{"object":""},"assembly":"\t.text\n\t.file\t\"DeployMoodNft.s.sol:DeployMoodNft\"\n\t.globl\t__entry\n__entry:\n.func_begin0:\n\tnop\tstack+=[4]\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r4\n\tand\t@CPI0_0[0], r4, r3\n\tptr.add\tr1, r3, stack[@ptr_return_data]\n\tptr.add\tr1, r0, stack[@ptr_calldata]\n\tand\t@CPI0_0[0], r4, stack[@calldatasize]\n\tadd\t128, r0, r4\n\tst.1\t64, r4\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB0_1\n\tsub.s!\t4, r3, r2\n\tjump.lt\t@.BB0_2\n\tld\tr1, r2\n\tshr.s\t224, r2, r2\n\tsub.s!\t@CPI0_5[0], r2, r4\n\tjump.gt\t@.BB0_8\n\tsub.s!\t@CPI0_8[0], r2, r4\n\tjump.eq\t@.BB0_10\n\tsub.s!\t@CPI0_9[0], r2, r1\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t13, r0, r1\n\tsload\tr1, r1\n\tst.1\t128, r1\n\tadd\t@CPI0_11[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_1:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t12, r0, r1\n\tsload\tr1, r2\n\tand\t@CPI0_1[0], r2, r2\n\tor\t@CPI0_2[0], r2, r2\n\tsstore\tr1, r2\n\tadd\t@CPI0_3[0], r0, r1\n\tadd\t13, r0, r2\n\tsstore\tr2, r1\n\tadd\t32, r0, r1\n\tst.2\t256, r1\n\tst.2\t288, r0\n\tadd\t@CPI0_4[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_8:\n\tsub.s!\t@CPI0_6[0], r2, r1\n\tjump.eq\t@.BB0_26\n\tsub.s!\t@CPI0_7[0], r2, r1\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t12, r0, r1\n\tsload\tr1, r1\n\tand!\t@CPI0_10[0], r1, r1\n\tadd\t0, r0, r1\n\tadd.ne\t1, r0, r1\n\tst.1\t128, r1\n\tadd\t@CPI0_11[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_10:\n\tcontext.get_context_u128\tr2\n\tsub.s!\t36, r3, r4\n\tjump.lt\t@.BB0_2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tptr.add.s\t4, r1, r2\n\tld\tr2, r4\n\tsub.s!\t@CPI0_17[0], r4, r2\n\tjump.gt\t@.BB0_2\n\tadd\t35, r4, r2\n\tsub!\tr2, r3, r2\n\tjump.ge\t@.BB0_2\n\tadd\t4, r4, r5\n\tptr.add\tr1, r5, r2\n\tld\tr2, r2\n\tsub.s!\t@CPI0_32[0], r2, r6\n\tjump.ge\t@.BB0_15\n\tadd\t31, r2, r6\n\tsub.s\t32, r0, r7\n\tand\tr6, r7, r6\n\tadd\t63, r6, r6\n\tand\tr6, r7, r6\n\tsub.s!\t@CPI0_33[0], r6, r7\n\tjump.gt\t@.BB0_15\n\tadd\t128, r6, r6\n\tst.1\t64, r6\n\tst.1\t128, r2\n\tadd\tr4, r2, r4\n\tadd\t36, r4, r4\n\tsub!\tr4, r3, r3\n\tjump.gt\t@.BB0_2\n\tadd\t32, r5, r3\n\tptr.add\tr1, r3, r1\n\tand\t31, r2, r3\n\tshr.s!\t5, r2, r4\n\tjump.eq\t@.BB0_102\n\tadd\tr0, r0, r5\n.BB0_20:\n\tshl.s\t5, r5, r6\n\tptr.add\tr1, r6, r7\n\tld\tr7, r7\n\tadd\t160, r6, r6\n\tst.1\tr6, r7\n\tadd\t1, r5, r5\n\tsub!\tr5, r4, r6\n\tjump.lt\t@.BB0_20\n.BB0_102:\n\tsub!\tr3, r0, r5\n\tjump.eq\t@.BB0_22\n\tshl.s\t5, r4, r4\n\tptr.add\tr1, r4, r1\n\tshl.s\t3, r3, r3\n\tadd\t160, r4, r4\n\tld.1\tr4, r5\n\tshl\tr5, r3, r5\n\tshr\tr5, r3, r5\n\tld\tr1, r1\n\tsub\t256, r3, r3\n\tshr\tr1, r3, r1\n\tshl\tr1, r3, r1\n\tor\tr1, r5, r1\n\tst.1\tr4, r1\n.BB0_22:\n\tadd\t160, r2, r1\n\tst.1\tr1, r0\n\tadd\t128, r0, r1\n\tnear_call\tr0, @fun_svgToImageURI, @DEFAULT_UNWIND\n\tadd\t32, r0, r2\n\tld.1\t64, r3\n\tadd\tr3, r0, stack-[4]\n\tst.1.inc\tr3, r2, r2\n\tnear_call\tr0, @abi_encode_string, @DEFAULT_UNWIND\n\tadd\tstack-[4], r0, r4\n\tsub\tr1, r4, r1\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd.ge\tr2, r0, r4\n\tshl.s\t64, r4, r2\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_26:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t@CPI0_12[0], r0, r1\n\tst.1\t128, r1\n\tadd\t32, r0, r1\n\tadd\tr1, r0, stack-[4]\n\tst.1\t132, r1\n\tadd\t27, r0, r1\n\tst.1\t164, r1\n\tadd\t@CPI0_13[0], r0, r1\n\tst.1\t196, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_14[0], r1, r1\n\tadd\t@CPI0_15[0], r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t31, r3, r4\n\tand\t@CPI0_0[0], r3, stack[@returndatasize]\n\tand\t@CPI0_0[0], r3, r3\n\tshr.s\t5, r3, r5\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_28\n\tsub!\tr5, r0, r2\n\tjump.eq\t@.BB0_108\n\tadd\tr0, r0, r2\n.BB0_35:\n\tshl.s\t5, r2, r6\n\tptr.add\tr1, r6, r7\n\tld\tr7, r7\n\tadd\t128, r6, r6\n\tst.1\tr6, r7\n\tadd\t1, r2, r2\n\tsub!\tr2, r5, r6\n\tjump.lt\t@.BB0_35\n.BB0_108:\n\tsub!\tr4, r0, r2\n\tjump.eq\t@.BB0_37\n\tshl.s\t5, r5, r2\n\tptr.add\tr1, r2, r1\n\tshl.s\t3, r4, r4\n\tadd\t128, r2, r2\n\tld.1\tr2, r5\n\tshl\tr5, r4, r5\n\tshr\tr5, r4, r5\n\tld\tr1, r1\n\tsub\t256, r4, r4\n\tshr\tr1, r4, r1\n\tshl\tr1, r4, r1\n\tor\tr1, r5, r1\n\tst.1\tr2, r1\n.BB0_37:\n\tadd\t31, r3, r1\n\tand\t@CPI0_16[0], r1, r1\n\tadd\t128, r1, r8\n\tst.1\t64, r8\n\tsub.s!\t32, r3, r2\n\tjump.lt\t@.BB0_2\n\tld.1\t128, r4\n\tsub.s!\t@CPI0_17[0], r4, r2\n\tjump.gt\t@.BB0_2\n\tadd\t128, r3, r3\n\tadd\t159, r4, r2\n\tsub!\tr2, r3, r2\n\tjump.ge\t@.BB0_2\n\tadd\t128, r4, r2\n\tld.1\tr2, r2\n\tsub.s!\t@CPI0_17[0], r2, r5\n\tjump.gt\t@.BB0_15\n\tadd\t31, r2, r5\n\tsub.s\t32, r0, r7\n\tand\tr5, r7, r5\n\tadd\t63, r5, r5\n\tand\tr5, r7, r5\n\tadd\tr5, r8, r5\n\tsub.s!\t@CPI0_17[0], r5, r6\n\tjump.le\t@.BB0_42\n.BB0_15:\n\tadd\t@CPI0_34[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI0_35[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_28:\n\tld.1\t64, r2\n\tsub!\tr5, r0, r6\n\tjump.eq\t@.BB0_109\n\tadd\tr0, r0, r6\n.BB0_30:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_30\n.BB0_109:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_32\n.BB0_31:\n\tshl.s\t5, r5, r5\n\tptr.add\tr1, r5, r1\n\tadd\tr2, r5, r5\n\tshl.s\t3, r4, r4\n\tld.1\tr5, r6\n\tshl\tr6, r4, r6\n\tshr\tr6, r4, r6\n\tld\tr1, r1\n\tsub\t256, r4, r4\n\tshr\tr1, r4, r1\n\tshl\tr1, r4, r1\n\tor\tr1, r6, r1\n\tst.1\tr5, r1\n.BB0_32:\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r4\n\tadd.ge\tr1, r0, r2\n\tshl.s\t64, r2, r1\n\tshl.s\t96, r3, r2\n\tor\tr1, r2, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_42:\n\tst.1\t64, r5\n\tst.1\tr8, r2\n\tadd\t160, r4, r4\n\tadd\tr2, r4, r5\n\tsub!\tr5, r3, r3\n\tjump.le\t@.BB0_43\n.BB0_2:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_43:\n\tadd\tr8, r0, stack-[2]\n\tadd\tr7, r0, stack-[3]\n\tadd\t160, r1, r1\n\tsub!\tr2, r0, r3\n\tjump.eq\t@.BB0_46\n\tadd\tr0, r0, r3\n.BB0_45:\n\tadd\tr3, r1, r5\n\tadd\tr3, r4, r6\n\tld.1\tr6, r6\n\tst.1\tr5, r6\n\tadd\t32, r3, r3\n\tsub!\tr3, r2, r5\n\tjump.lt\t@.BB0_45\n.BB0_46:\n\tadd\tr2, r1, r1\n\tst.1\tr1, r0\n\tld.1\t64, r4\n\tadd\t68, r4, r1\n\tadd\t@CPI0_18[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t36, r4, r1\n\tadd\t29, r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI0_12[0], r0, r1\n\tst.1\tr4, r1\n\tadd\t4, r4, r1\n\tadd\tstack-[4], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd\tr4, r0, stack-[4]\n\tadd.lt\tr4, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI0_19[0], r1, r1\n\tadd\t@CPI0_15[0], r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t31, r3, r4\n\tand\t@CPI0_0[0], r3, stack[@returndatasize]\n\tand\t@CPI0_0[0], r3, r3\n\tshr.s\t5, r3, r5\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_47\n\tsub!\tr5, r0, r2\n\tadd\tstack-[3], r0, r8\n\tadd\tstack-[4], r0, r9\n\tjump.eq\t@.BB0_106\n\tadd\tr0, r0, r2\n.BB0_56:\n\tshl.s\t5, r2, r6\n\tadd\tr9, r6, r7\n\tptr.add\tr1, r6, r6\n\tld\tr6, r6\n\tst.1\tr7, r6\n\tadd\t1, r2, r2\n\tsub!\tr2, r5, r6\n\tjump.lt\t@.BB0_56\n.BB0_106:\n\tsub!\tr4, r0, r2\n\tjump.eq\t@.BB0_58\n\tshl.s\t5, r5, r2\n\tptr.add\tr1, r2, r1\n\tadd\tr9, r2, r2\n\tshl.s\t3, r4, r4\n\tld.1\tr2, r5\n\tshl\tr5, r4, r5\n\tshr\tr5, r4, r5\n\tld\tr1, r1\n\tsub\t256, r4, r4\n\tshr\tr1, r4, r1\n\tshl\tr1, r4, r1\n\tor\tr1, r5, r1\n\tst.1\tr2, r1\n.BB0_58:\n\tadd\t31, r3, r1\n\tand\t@CPI0_16[0], r1, r1\n\tadd\tr1, r9, r4\n\tsub!\tr4, r1, r1\n\tadd\t0, r0, r1\n\tadd.lt\t1, r0, r1\n\tsub.s!\t@CPI0_17[0], r4, r2\n\tjump.gt\t@.BB0_15\n\tand!\t1, r1, r1\n\tjump.ne\t@.BB0_15\n\tadd\tr4, r0, stack-[1]\n\tst.1\t64, r4\n\tsub.s!\t32, r3, r1\n\tjump.lt\t@.BB0_2\n\tld.1\tr9, r1\n\tsub.s!\t@CPI0_17[0], r1, r2\n\tjump.gt\t@.BB0_2\n\tadd\tr3, r9, r3\n\tadd\tr1, r9, r1\n\tadd\t31, r1, r2\n\tadd\t@CPI0_20[0], r0, r4\n\tsub!\tr2, r3, r5\n\tadd\tr0, r0, r5\n\tadd.ge\tr4, r0, r5\n\tand\t@CPI0_20[0], r2, r2\n\tand\t@CPI0_20[0], r3, r6\n\tsub!\tr2, r6, r7\n\tadd.ge\tr0, r0, r4\n\txor\tr2, r6, r2\n\tsub.s!\t@CPI0_20[0], r2, r2\n\tadd.ne\tr5, r0, r4\n\tsub!\tr4, r0, r2\n\tjump.ne\t@.BB0_2\n\tld.1.inc\tr1, r1, r2\n\tsub.s!\t@CPI0_17[0], r1, r4\n\tadd\tstack-[1], r0, r6\n\tjump.gt\t@.BB0_15\n\tadd\t31, r1, r4\n\tand\tr4, r8, r4\n\tadd\t63, r4, r4\n\tand\tr4, r8, r4\n\tadd\tr4, r6, r4\n\tsub.s!\t@CPI0_17[0], r4, r5\n\tjump.gt\t@.BB0_15\n\tst.1\t64, r4\n\tst.1.inc\tr6, r1, r4\n\tadd\tr1, r2, r5\n\tsub!\tr5, r3, r3\n\tjump.gt\t@.BB0_2\n\tsub!\tr1, r0, r3\n\tjump.eq\t@.BB0_51\n\tadd\tr0, r0, r3\n.BB0_68:\n\tadd\tr3, r4, r5\n\tadd\tr3, r2, r6\n\tld.1\tr6, r6\n\tst.1\tr5, r6\n\tadd\t32, r3, r3\n\tsub!\tr3, r1, r5\n\tjump.lt\t@.BB0_68\n.BB0_51:\n\tadd\tr1, r4, r1\n\tst.1\tr1, r0\n\tadd\t@CPI0_21[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI0_15[0], r0, r1\n\tst.2\t4, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_22[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_52\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB0_2\n\tld.1\t64, r4\n\tadd\t@CPI0_23[0], r0, r1\n\tst.1\tr4, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd\tr4, r0, stack-[4]\n\tadd.lt\tr4, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI0_24[0], r1, r1\n\tadd\t@CPI0_15[0], r0, r2\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, stack[@returndatasize]\n\tand\t@CPI0_0[0], r3, r3\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_70\n\tadd\tstack-[4], r0, r1\n\tsub.s!\t@CPI0_17[0], r1, r1\n\tadd\tstack-[2], r0, r1\n\tjump.gt\t@.BB0_15\n\tadd\tstack-[4], r0, r3\n\tst.1\t64, r3\n\tnear_call\tr0, @fun_svgToImageURI, @DEFAULT_UNWIND\n\tadd\tr1, r0, stack-[4]\n\tadd\tstack-[1], r0, r1\n\tnear_call\tr0, @fun_svgToImageURI, @DEFAULT_UNWIND\n\tld.1\t64, r2\n\tsub.s!\t@CPI0_25[0], r2, r3\n\tjump.gt\t@.BB0_15\n\tadd\t132, r2, r3\n\tadd\t36, r2, r4\n\tadd\t@CPI0_26[0], r0, r5\n\tst.1\tr4, r5\n\tadd\t64, r0, r4\n\tst.1\tr3, r4\n\tadd\t196, r2, r5\n\tadd\tstack-[4], r0, r4\n\tld.1\tr4, r4\n\tst.1\tr5, r4\n\tadd\t228, r2, r5\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_79\n\tadd\tstack-[4], r0, r6\n\tadd\t32, r6, r6\n\tadd\tr0, r0, r7\n.BB0_78:\n\tadd\tr7, r5, r8\n\tadd\tr6, r7, r9\n\tld.1\tr9, r9\n\tst.1\tr8, r9\n\tadd\t32, r7, r7\n\tsub!\tr7, r4, r8\n\tjump.lt\t@.BB0_78\n.BB0_79:\n\tadd\tr4, r5, r6\n\tst.1\tr6, r0\n\tadd\t31, r4, r4\n\tand\tstack-[3], r4, r4\n\tadd\tr4, r5, r5\n\tsub\tr5, r3, r3\n\tadd\t164, r2, r4\n\tst.1\tr4, r3\n\tld.1\tr1, r4\n\tst.1.inc\tr5, r4, r3\n\tsub!\tr4, r0, r5\n\tjump.eq\t@.BB0_83\n\tadd\t32, r1, r1\n\tadd\tr0, r0, r5\n.BB0_81:\n\tadd\tr5, r3, r6\n\tadd\tr1, r5, r7\n\tld.1\tr7, r7\n\tst.1\tr6, r7\n\tadd\t32, r5, r5\n\tsub!\tr5, r4, r6\n\tjump.lt\t@.BB0_81\n.BB0_83:\n\tadd\tr4, r3, r1\n\tst.1\tr1, r0\n\tadd\t68, r2, r1\n\tcontext.gas_left\tr5\n\tadd\t96, r0, r6\n\tst.1\tr1, r6\n\tadd\t31, r4, r1\n\tand\tstack-[3], r1, r1\n\tsub\tr3, r2, r3\n\tadd\tr1, r3, r1\n\tsub.s\t132, r1, r3\n\tadd\t100, r2, r4\n\tst.1\tr4, r3\n\tadd\t@CPI0_27[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t4, r2, r3\n\tst.1\tr3, r0\n\tadd\t@CPI0_0[0], r0, r3\n\tsub.s!\t@CPI0_0[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tshl.s\t96, r1, r1\n\tsub.s!\t@CPI0_0[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t64, r2, r2\n\tor\tr1, r2, r1\n\tsub.s!\t@CPI0_0[0], r5, r2\n\tadd.ge\tr3, r0, r5\n\tshl.s\t192, r5, r2\n\tor\tr2, r1, r1\n\tor\t@CPI0_28[0], r1, r1\n\tadd\t32774, r0, r2\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_82\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[4]\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_86\n\tptr.add\tstack[@ptr_return_data], r0, r1\n\tadd\tstack[@returndatasize], r0, r2\n\tjump\t@.BB0_88\n.BB0_47:\n\tld.1\t64, r2\n\tsub!\tr5, r0, r6\n\tjump.eq\t@.BB0_107\n\tadd\tr0, r0, r6\n.BB0_49:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_49\n.BB0_107:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_32\n\tjump\t@.BB0_31\n.BB0_70:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_105\n\tadd\tr0, r0, r6\n.BB0_72:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_72\n.BB0_105:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_32\n\tjump\t@.BB0_31\n.BB0_82:\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tadd\tr1, r0, r2\n\tshr.s\t96, r2, r2\n\tand\t@CPI0_0[0], r2, stack[@returndatasize]\n\tand\t@CPI0_0[0], r2, r2\n.BB0_88:\n\tld.1\t64, r3\n\tand\t31, r2, r4\n\tshr.s!\t5, r2, r5\n\tjump.eq\t@.BB0_104\n\tadd\tr0, r0, r6\n.BB0_90:\n\tshl.s\t5, r6, r7\n\tadd\tr3, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_90\n.BB0_104:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_92\n\tshl.s\t5, r5, r5\n\tptr.add\tr1, r5, r1\n\tadd\tr3, r5, r5\n\tshl.s\t3, r4, r4\n\tld.1\tr5, r6\n\tshl\tr6, r4, r6\n\tshr\tr6, r4, r6\n\tld\tr1, r1\n\tsub\t256, r4, r4\n\tshr\tr1, r4, r1\n\tshl\tr1, r4, r1\n\tor\tr1, r6, r1\n\tst.1\tr5, r1\n.BB0_92:\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r3, r4\n\tadd.ge\tr1, r0, r3\n\tsub.s!\t@CPI0_0[0], r2, r4\n\tadd.ge\tr1, r0, r2\n\tshl.s\t96, r2, r1\n\tshl.s\t64, r3, r2\n\tor\tr2, r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_86:\n\tadd\t@CPI0_21[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI0_15[0], r0, r1\n\tst.2\t4, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_22[0], r1, r1\n\tadd\t32770, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_52\n\tld\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB0_2\n\tld.1\t64, r4\n\tadd\t@CPI0_29[0], r0, r1\n\tst.1\tr4, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd\tr4, r0, stack-[3]\n\tadd.lt\tr4, r0, r1\n\tshl.s\t64, r1, stack-[2]\n\tshl.s\t192, r2, r1\n\tor\tstack-[2], r1, r1\n\tor\t@CPI0_24[0], r1, r1\n\tadd\t@CPI0_15[0], r0, r2\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, stack[@returndatasize]\n\tand\t@CPI0_0[0], r3, r3\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_94\n\tadd\tstack-[3], r0, r1\n\tsub.s!\t@CPI0_17[0], r1, r1\n\tjump.gt\t@.BB0_15\n\tadd\tstack-[3], r0, r2\n\tst.1\t64, r2\n\tadd\tstack-[4], r0, r1\n\tand\t@CPI0_30[0], r1, r1\n\tst.1\tr2, r1\n\tadd\tstack-[2], r0, r1\n\tor\t@CPI0_31[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_52:\n\trevert\n.BB0_94:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_103\n\tadd\tr0, r0, r6\n.BB0_96:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_96\n.BB0_103:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_32\n\tjump\t@.BB0_31\n.func_end0:\n\nabi_encode_string:\n.func_begin1:\n\tld.1.inc\tr1, r3, r4\n\tst.1.inc\tr2, r3, r1\n\tsub!\tr3, r0, r2\n\tjump.eq\t@.BB1_3\n\tadd\tr0, r0, r2\n.BB1_2:\n\tadd\tr2, r1, r5\n\tadd\tr4, r2, r6\n\tld.1\tr6, r6\n\tst.1\tr5, r6\n\tadd\t32, r2, r2\n\tsub!\tr2, r3, r5\n\tjump.lt\t@.BB1_2\n.BB1_3:\n\tadd\tr3, r1, r2\n\tst.1\tr2, r0\n\tadd\t31, r3, r2\n\tsub.s\t32, r0, r3\n\tand\tr2, r3, r2\n\tadd\tr1, r2, r1\n\tret\n.func_end1:\n\nfun_svgToImageURI:\n.func_begin2:\n\tnop\tstack+=[1]\n\tld.1\t64, r4\n\tsub.s!\t@CPI2_0[0], r4, r2\n\tjump.ge\t@.BB2_1\n\tadd\t64, r4, r2\n\tst.1\t64, r2\n\tadd\t26, r0, r2\n\tst.1.inc\tr4, r2, r2\n\tadd\t@CPI2_1[0], r0, r3\n\tst.1\tr2, r3\n\tld.1\t64, r5\n\tadd\t32, r5, r3\n\tld.1.inc\tr1, r1, r6\n\tsub!\tr1, r0, r7\n\tjump.eq\t@.BB2_6\n\tadd\tr0, r0, r7\n.BB2_5:\n\tadd\tr7, r3, r8\n\tadd\tr6, r7, r9\n\tld.1\tr9, r9\n\tst.1\tr8, r9\n\tadd\t32, r7, r7\n\tsub!\tr7, r1, r8\n\tjump.lt\t@.BB2_5\n.BB2_6:\n\tadd\tr1, r3, r3\n\tst.1\tr3, r0\n\tst.1\tr5, r1\n\tadd\t63, r1, r1\n\tsub.s\t32, r0, r3\n\tand\tr1, r3, r1\n\tadd\tr1, r5, r7\n\tsub!\tr7, r1, r1\n\tadd\t0, r0, r1\n\tadd.lt\t1, r0, r1\n\tsub.s!\t@CPI2_2[0], r7, r6\n\tjump.gt\t@.BB2_1\n\tand!\t1, r1, r1\n\tjump.ne\t@.BB2_1\n\tst.1\t64, r7\n\tld.1\tr5, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB2_9\n\tsub.s!\t@CPI2_3[0], r7, r1\n\tjump.gt\t@.BB2_1\n\tadd\t96, r7, r1\n\tst.1\t64, r1\n\tadd\t64, r7, r1\n\tadd\t@CPI2_4[0], r0, r6\n\tst.1\tr1, r6\n\tadd\t32, r7, r1\n\tadd\t@CPI2_5[0], r0, r6\n\tst.1\tr1, r6\n\tadd\t64, r0, r1\n\tst.1\tr7, r1\n\tld.1\tr5, r1\n\tsub.s\t2, r0, r6\n\tsub!\tr1, r6, r6\n\tjump.ge\t@.BB2_13\n\tsub.s!\t@CPI2_6[0], r1, r6\n\tjump.gt\t@.BB2_13\n\tadd\t2, r1, r1\n\tdiv.s\t3, r1, r1, r6\n\tshl.s\t2, r1, r6\n\tsub.s!\t@CPI2_2[0], r6, r1\n\tjump.gt\t@.BB2_1\n\tadd\t31, r6, r1\n\tand\tr1, r3, r9\n\tadd\t63, r9, r1\n\tand\tr1, r3, r8\n\tld.1\t64, r1\n\tadd\tr1, r8, r8\n\tsub!\tr8, r1, r10\n\tadd\t0, r0, r10\n\tadd.lt\t1, r0, r10\n\tsub.s!\t@CPI2_2[0], r8, r11\n\tjump.gt\t@.BB2_1\n\tand!\t1, r10, r10\n\tjump.ne\t@.BB2_1\n\tst.1\t64, r8\n\tst.1.inc\tr1, r6, r6\n\tand\t31, r9, r8\n\tshr.s!\t5, r9, r9\n\tjump.eq\t@.BB2_40\n\tadd\tstack[@calldatasize], r0, r10\n\tptr.add\tstack[@ptr_calldata], r10, r10\n\tadd\tr0, r0, r11\n.BB2_20:\n\tshl.s\t5, r11, r12\n\tadd\tr6, r12, r13\n\tptr.add\tr10, r12, r12\n\tld\tr12, r12\n\tst.1\tr13, r12\n\tadd\t1, r11, r11\n\tsub!\tr11, r9, r12\n\tjump.lt\t@.BB2_20\n.BB2_40:\n\tsub!\tr8, r0, r8\n\tjump.eq\t@.BB2_22\n.BB2_22:\n\tld.1\tr5, r8\n\tadd\tr8, r5, r11\n\tadd\t32, r11, r9\n\tld.1\tr9, r8\n\tadd\tr8, r0, stack-[1]\n\tst.1\tr9, r0\n\tsub!\tr11, r5, r8\n\tadd\tr6, r0, r8\n\tjump.le\t@.BB2_25\n\tadd\t1, r7, r7\n\tadd\tr5, r0, r12\n\tadd\tr6, r0, r8\n.BB2_24:\n\tadd\t3, r12, r12\n\tld.1\tr12, r13\n\tshr.s\t18, r13, r14\n\tand\t63, r14, r14\n\tadd\tr14, r7, r14\n\tld.1\tr14, r14\n\tshl.s\t248, r14, r14\n\tld.1\tr8, r15\n\tand\t@CPI2_7[0], r15, r15\n\tor\tr15, r14, r14\n\tst.1\tr8, r14\n\tshr.s\t12, r13, r14\n\tand\t63, r14, r14\n\tadd\tr14, r7, r14\n\tld.1\tr14, r14\n\tshl.s\t248, r14, r14\n\tadd\t1, r8, r15\n\tld.1\tr15, r10\n\tand\t@CPI2_7[0], r10, r10\n\tor\tr10, r14, r10\n\tst.1\tr15, r10\n\tshr.s\t6, r13, r10\n\tand\t63, r10, r10\n\tadd\tr10, r7, r10\n\tld.1\tr10, r10\n\tshl.s\t248, r10, r10\n\tadd\t2, r8, r14\n\tld.1\tr14, r15\n\tand\t@CPI2_7[0], r15, r15\n\tor\tr15, r10, r10\n\tst.1\tr14, r10\n\tand\t63, r13, r10\n\tadd\tr10, r7, r10\n\tld.1\tr10, r10\n\tshl.s\t248, r10, r10\n\tadd\t3, r8, r13\n\tld.1\tr13, r14\n\tand\t@CPI2_7[0], r14, r14\n\tor\tr14, r10, r10\n\tst.1\tr13, r10\n\tadd\t4, r8, r8\n\tsub!\tr12, r11, r10\n\tjump.lt\t@.BB2_24\n.BB2_25:\n\tadd\tstack-[1], r0, r7\n\tst.1\tr9, r7\n\tld.1\tr5, r5\n\tdiv.s\t3, r5, r7, r5\n\tsub.s!\t2, r5, r7\n\tjump.eq\t@.BB2_28\n\tsub.s!\t1, r5, r5\n\tjump.ne\t@.BB2_30\n\tsub.s\t1, r8, r5\n\tld.1\tr5, r7\n\tand\t@CPI2_7[0], r7, r7\n\tor\t@CPI2_8[0], r7, r7\n\tst.1\tr5, r7\n\tsub.s\t2, r8, r5\n\tjump\t@.BB2_29\n.BB2_9:\n\tsub.s!\t@CPI2_11[0], r7, r1\n\tjump.gt\t@.BB2_1\n\tadd\t32, r7, r6\n\tst.1\t64, r6\n\tst.1\tr7, r0\n\tjump\t@.BB2_31\n.BB2_28:\n\tsub.s\t1, r8, r5\n.BB2_29:\n\tld.1\tr5, r7\n\tand\t@CPI2_7[0], r7, r7\n\tor\t@CPI2_8[0], r7, r7\n\tst.1\tr5, r7\n.BB2_30:\n\tadd\tr1, r0, r7\n.BB2_31:\n\tld.1\t64, r1\n\tadd\t32, r1, r5\n\tld.1\tr4, r4\n\tsub!\tr4, r0, r8\n\tjump.eq\t@.BB2_34\n\tadd\tr0, r0, r8\n.BB2_33:\n\tadd\tr8, r5, r9\n\tadd\tr8, r2, r10\n\tld.1\tr10, r10\n\tst.1\tr9, r10\n\tadd\t32, r8, r8\n\tsub!\tr8, r4, r9\n\tjump.lt\t@.BB2_33\n.BB2_34:\n\tadd\tr4, r5, r2\n\tst.1\tr2, r0\n\tld.1\tr7, r5\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB2_37\n\tadd\tr0, r0, r7\n.BB2_36:\n\tadd\tr7, r2, r8\n\tadd\tr6, r7, r9\n\tld.1\tr9, r9\n\tst.1\tr8, r9\n\tadd\t32, r7, r7\n\tsub!\tr7, r5, r8\n\tjump.lt\t@.BB2_36\n.BB2_37:\n\tadd\tr5, r2, r2\n\tst.1\tr2, r0\n\tadd\tr4, r5, r2\n\tst.1\tr1, r2\n\tadd\t63, r2, r2\n\tand\tr2, r3, r3\n\tadd\tr3, r1, r2\n\tsub!\tr2, r3, r3\n\tadd\t0, r0, r3\n\tadd.lt\t1, r0, r3\n\tsub.s!\t@CPI2_2[0], r2, r4\n\tjump.gt\t@.BB2_1\n\tand!\t1, r3, r3\n\tjump.ne\t@.BB2_1\n\tst.1\t64, r2\n\tret\n.BB2_1:\n\tadd\t@CPI2_9[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI2_10[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB2_13:\n\tadd\t@CPI2_9[0], r0, r1\n\tst.1\t0, r1\n\tadd\t17, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI2_10[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end2:\n\n__cxa_throw:\n.func_begin3:\n\trevert\n.func_end3:\n\n__farcall:\n.func_begin4:\n.tmp0:\n\tfar_call\tr1, r2, @.BB4_2\n.tmp1:\n\tadd\t1, r0, r2\n\tret\n.BB4_2:\n.tmp2:\n\tadd\tr0, r0, r2\n\tret\n.func_end4:\n\n__staticcall:\n.func_begin5:\n.tmp3:\n\tfar_call.static\tr1, r2, @.BB5_2\n.tmp4:\n\tadd\t1, r0, r2\n\tret\n.BB5_2:\n.tmp5:\n\tadd\tr0, r0, r2\n\tret\n.func_end5:\n\n\t.data\n\t.p2align\t5, 0x0\ncalldatasize:\n\t.cell 0\n\n\t.p2align\t5, 0x0\nreturndatasize:\n\t.cell 0\n\n\t.p2align\t5, 0x0\nptr_calldata:\n.cell\t0\n\n\t.p2align\t5, 0x0\nptr_return_data:\n.cell\t0\n\n\t.note.GNU-stack\n\t.rodata\nCPI0_0:\n\t.cell 4294967295\nCPI0_1:\n\t.cell -16711936\nCPI0_2:\n\t.cell 65537\nCPI0_3:\n\t.cell -37977571911845989512430043814285979273712922650878732108812190966532310630528\nCPI0_4:\n\t.cell 53919893334301279589334030174039261352344891250716429051063678533632\nCPI0_5:\n\t.cell 3225444901\nCPI0_6:\n\t.cell 3225444902\nCPI0_7:\n\t.cell 4174167879\nCPI0_8:\n\t.cell 819491270\nCPI0_9:\n\t.cell 2433605214\nCPI0_10:\n\t.cell 16711680\nCPI0_11:\n\t.cell 2535301202817642044428229017600\nCPI0_12:\n\t.cell 43863269468009334158894487264628454438510617549146491680844421517880510644224\nCPI0_13:\n\t.cell 20890160479133264715253042688781036268371659841716905238019809794524297822208\nCPI0_14:\n\t.cell 7922816253787617000789217640448\nCPI0_15:\n\t.cell 645326474426547203313410069153905908525362434349\nCPI0_16:\n\t.cell 8589934560\nCPI0_17:\nCPI2_2:\n\t.cell 18446744073709551615\nCPI0_18:\n\t.cell 20890160479133264715253042688781036268371659841713500960798069995137476329472\nCPI0_19:\n\t.cell 7922816251426433759354395033600\nCPI0_20:\n\t.cell -57896044618658097711785492504343953926634992332820282019728792003956564819968\nCPI0_21:\n\t.cell 10867283408178898638301172343726954674910073630256871736220740970449699113859\nCPI0_22:\n\t.cell 904625751086426111047927909714404454142933105326819602152923490636624035840\nCPI0_23:\n\t.cell 57763817484313164028313283939489504447484577087939811246371138302511295758336\nCPI0_24:\n\t.cell 316912650057057350374175801344\nCPI0_25:\n\t.cell 18446744073709551483\nCPI0_26:\n\t.cell 452336497026554893208680615297868296071066673909435728346752970179365410372\nCPI0_27:\n\t.cell -45094662312588414058508742492242807367897819822786606328124609013070528553987\nCPI0_28:\n\t.cell 904625697166532776746648320380374280103671755200316906558262375061821325312\nCPI0_29:\n\t.cell 53787885087763336501906314510680303380505312860176240795757540877198344323072\nCPI0_30:\n\t.cell 1461501637330902918203684832716283019655932542975\nCPI0_31:\n\t.cell 2535301200456458802993406410752\nCPI0_32:\n\t.cell 18446744073709551616\nCPI0_33:\n\t.cell 18446744073709551487\nCPI0_34:\nCPI2_9:\n\t.cell 35408467139433450592217433187231851964531694900788300625387963629091585785856\nCPI0_35:\nCPI2_10:\n\t.cell 2852213850513516153367582212096\nCPI2_0:\n\t.cell 18446744073709551552\nCPI2_1:\n\t.cell 45403472247452679715380333723490197484701147157392123876654046390928399138816\nCPI2_3:\n\t.cell 18446744073709551519\nCPI2_4:\n\t.cell 46772703051247169380938338980979570744698030253382542352207729274823063972655\nCPI2_5:\n\t.cell 29517411321764755945268937293410392319504856067937839131380990587402149193062\nCPI2_6:\n\t.cell -28948022309329048855892746252171976963317496166410141009864396001978282409987\nCPI2_7:\n\t.cell 452312848583266388373324160190187140051835877600158453279131187530910662655\nCPI2_8:\n\t.cell 27591083763579249690772773771601415543161988533609665650027002439385550422016\nCPI2_11:\n\t.cell 18446744073709551583\n","methodIdentifiers":{"DEFAULT_ANVIL_PRIVATE_KEY()":"910dde5e","IS_SCRIPT()":"f8ccbf47","run()":"c0406226","svgToImageURI(string)":"30d871c6"},"metadata":{"optimizer_settings":{"is_debug_logging_enabled":false,"is_fallback_to_size_enabled":false,"is_system_request_memoization_disabled":false,"is_verify_each_enabled":false,"jump_table_density_threshold":null,"level_back_end":"Aggressive","level_middle_end":"Aggressive","level_middle_end_size":"Zero"},"solc_metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"DEFAULT_ANVIL_PRIVATE_KEY\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"IS_SCRIPT\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"run\",\"outputs\":[{\"internalType\":\"contract MoodNft\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"svg\",\"type\":\"string\"}],\"name\":\"svgToImageURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"script/DeployMoodNft.s.sol\":\"DeployMoodNft\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul:fDnTOc\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":ds-test/=lib/openzeppelin-contracts/lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":foundry-devops/=lib/foundry-devops/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\"]},\"sources\":{\"lib/forge-std/src/Base.sol\":{\"keccak256\":\"0x4ff1a785311017d1eedb1b4737956fa383067ad34eb439abfec1d989754dde1c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f553622969b9fdb930246704a4c10dfaee6b1a4468c142fa7eb9dc292a438224\",\"dweb:/ipfs/QmcxqHnqdQsMVtgsfH9VNLmZ3g7GhgNagfq7yvNCDcCHFK\"]},\"lib/forge-std/src/Script.sol\":{\"keccak256\":\"0x2315be74cc2826f9da401bea3da46a10ad6a6efdf73176d79160b453286d0ed2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://af0d4dc826911d6cb4d6272ed5cbdb6950e1476141cca328e178b808d848789c\",\"dweb:/ipfs/QmV2ytjUEkV84VtdMs1nZqQTBoVE987cHboQMpiha5yo3e\"]},\"lib/forge-std/src/StdChains.sol\":{\"keccak256\":\"0x2ba8ee7e4a68efd4cd75331b229874f4d4dc0a1010599afad88fc2cae5cb5d4a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://77ce1968d402b0414fec0a344b59c275d0706d4df5ac6293d605dd2202016345\",\"dweb:/ipfs/QmSVy4N4F15NzEuSpmvwRj1nTfAwaJpng7CywUBWLnWC4w\"]},\"lib/forge-std/src/StdCheats.sol\":{\"keccak256\":\"0xb72f3519e0bf7d31df5d68557525f4fc55d861c3fb3b0f7793144ef7c94cbeb7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f3456d0f78e6f61203fa7871ba2df0d35925f10db3baee14be623ce2a35b84e2\",\"dweb:/ipfs/QmWE6QQSBvJifHMraisBTrf1x4WCwrDoTPLX8UKajTiApc\"]},\"lib/forge-std/src/StdJson.sol\":{\"keccak256\":\"0x62bed173cb126f6d5006706cf249bac8a2d51bfa18f773f314784ff18adc622d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5acc33dddbf2492e37dc32e89cd56ce917272d303a6874805f3a5768a6bfbf54\",\"dweb:/ipfs/QmTsgFhcpUf16gAVazUXU3WspgX8nHke2hzVCvoqS25WEp\"]},\"lib/forge-std/src/StdMath.sol\":{\"keccak256\":\"0xd90ad4fd8aeaeb8929964e686e769fdedd5eded3fc3815df194a0ab9f91a3fb2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7919b70f636c7b805223992f28ad1ad0145d6c1385b5931a3589aface5fe6c92\",\"dweb:/ipfs/QmY7FRaULwoGgFteF8GawjQJRfasNgpWnU2aiMsFrYpuTC\"]},\"lib/forge-std/src/StdStorage.sol\":{\"keccak256\":\"0x651d84d948832f0ef45686417aa68ffb871378fa788a4123dbf37844903c66f3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ff20f5ac9de3dc3ba86b1bf1f2723174e82ce3499ad67cb0ccfa7d28baeee678\",\"dweb:/ipfs/QmRZkUFKz7AmF7yk6o317sk822HHhGVPXZQgX8G4LfYfft\"]},\"lib/forge-std/src/StdStyle.sol\":{\"keccak256\":\"0x43e2a8a9b9c2574dabe74f11adf6f782df218f463540e3b5b563609fe108597d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://51363ca97404cf4128e1141428949768c31929e75e014b02c85e887fbbb4f1b8\",\"dweb:/ipfs/QmVhtbQc2fU4rRmbcfBtz34mAgG4BAZBsbna1Ca4SkoPsK\"]},\"lib/forge-std/src/StdUtils.sol\":{\"keccak256\":\"0x4a5853bb9688c4e1c65626036cddd8ea2af84ef1046b704ddc3782d84a892410\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://09c1024e6aac9657312fcfcf5c3dee62c22edf9f74a1065e6924c4ec710ecafa\",\"dweb:/ipfs/QmRNURoTUkd6DiZnf8yY8o3stJpVQBifopdSpQgP9RhvRr\"]},\"lib/forge-std/src/Vm.sol\":{\"keccak256\":\"0xf92ea94fe38f8370a8dc5f591ebfb4958869e18d877469ce422162cc88c8b063\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://620b5d4b2ff24d66120ce9dbb72fbde7276f2e8b3bb93f626874183aee01e307\",\"dweb:/ipfs/Qmcyc8co7vCiJ7gUd3jj5Hc1rRPihjt3WSKs5ut6eiU1Ze\"]},\"lib/forge-std/src/console.sol\":{\"keccak256\":\"0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70\",\"dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec\"]},\"lib/forge-std/src/console2.sol\":{\"keccak256\":\"0x954646445d1014c3cd85c7918f5e7adeeca5ee44b68c00bafa237e597a4e35ea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://516fa3be52da4763147175bfba4be0aa011fadbb0c1afb01f97265bd4cee7973\",\"dweb:/ipfs/QmdixAyMJefx7qePChgdxcBH5MxhmN7vsqPuPLx3CgrVmF\"]},\"lib/forge-std/src/interfaces/IERC165.sol\":{\"keccak256\":\"0x414b2861b1acbf816ccb7346d3f16cf6c1e002e9e5e40d2f1f26fa5ddc2ea600\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://698352fb240868ea8f1d1fe389993035eeab930f10d06934f80ccfb2b6ccbfbc\",\"dweb:/ipfs/QmT6WLHAgXxFhh12kWym895oTzXid1326iZiwT3pyfggoT\"]},\"lib/forge-std/src/interfaces/IERC20.sol\":{\"keccak256\":\"0x4cab887298790f908c27de107e4e2907ca5413aee482ef776f8d2f353c5ef947\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb715e0c4a2bdbe432bb624501506041f06e878e0b72675aebba30ad2c2b72e7\",\"dweb:/ipfs/QmWhhLSvkxS2NrukJJHqFY8gDVE5r9rD4PfHvR24pwdKv9\"]},\"lib/forge-std/src/interfaces/IERC721.sol\":{\"keccak256\":\"0xf069262a264fdb69f8f37a10d2df7374649e9ba73f8414c9c8a3b51184625f15\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://924a41ca82a68ffbd503a5faf2f76d13e9938f10501a71094716f12bb64b4b7f\",\"dweb:/ipfs/QmdWnqfKc5ZGhmxNPTde4zrFchnv9Yk9MpCMb2rdhXE5gm\"]},\"lib/forge-std/src/interfaces/IMulticall3.sol\":{\"keccak256\":\"0x7aac1389150499a922d1f9ef5749c908cef127cb2075b92fa17e9cb611263d0a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d95ebb7c7c463e08ebc12dab639945752fb2480acfc6e86da32f72732a7fd0c0\",\"dweb:/ipfs/QmNXK8P8oPWwajsQHvAHw3JPyQidPLCGQN3hWu1Lk6PBL2\"]},\"lib/forge-std/src/mocks/MockERC20.sol\":{\"keccak256\":\"0xadbdfc6639edec00ba94bb1133a0fd8de31ccafe45c2ef5df9b3ca61b60b559b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc766f01bccf669abac8cc7b2096cc1352a66471ca3772ae61b1801dedc4ed4f\",\"dweb:/ipfs/QmNigaPj1LYkP7Z5xr4ijkUxr2K66fDGeoifG3WoM9ruyw\"]},\"lib/forge-std/src/mocks/MockERC721.sol\":{\"keccak256\":\"0x3293dcbb7acd28df553c954e4e39e288bf10aab7ecda8d50ef21b4f4a91a28d9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9eb374daf6df34f4392f8926f1fddbce9f22c423066aeaefdfbe77395f77967b\",\"dweb:/ipfs/QmWR81zBJRX2uyRjveGzikYPj6ZwKppWsU49YEQXTLWUsN\"]},\"lib/forge-std/src/safeconsole.sol\":{\"keccak256\":\"0xbaf41fdc6c54297e7cd8250e48b0f20eaac918e342a1028cef3f9a52ac086381\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a500ad81dea226f9910e6b50f99a9ff930105e393a692cbfb2185e4cdb4424ae\",\"dweb:/ipfs/QmVbUQpXNMmMWRiy4FvBNczzq46BMGfUoBikvSHNiCxVTq\"]},\"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x13dd061770956c8489b80cfc89d9cdfc8ea2783d953691ea037a380731d52784\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed37f0f86e7fe31659e48c3a2a5920a92dd7f13c85cf8991fb79fe5f01e08efd\",\"dweb:/ipfs/QmUtm9bQGvjr9hHGwkPWrbgFmVqzaJcxjkaYDex2oGsonS\"]},\"lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x7f7a26306c79a65fb8b3b6c757cd74660c532cd8a02e165488e30027dd34ca49\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d01e0b2b837ee2f628545e54d8715b49c7ef2befd08356c2e7f6c50dde8a1c22\",\"dweb:/ipfs/QmWBAn6y2D1xgftci97Z3qR9tQnkvwQpYwFwkTvDMvqU4i\"]},\"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02\",\"dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE\"]},\"lib/openzeppelin-contracts/contracts/utils/Base64.sol\":{\"keccak256\":\"0x09000342b85b1a06fa1f5b71bdeef7c449cd25799aac14fa9053d8abd18219aa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a7cdab282a9165b685fa86da3bd331c8e319e5a5c64e16599134e738934a77d4\",\"dweb:/ipfs/QmSLcE5FmDqVQbFDB6MzUzuFi4UhJVUQ1A2rT4aJGhpERT\"]},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"lib/openzeppelin-contracts/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]},\"script/DeployMoodNft.s.sol\":{\"keccak256\":\"0x11e6c474c5dbf12cd8108c70a743f22a589a80752cac6a405ad2cacb0a73e600\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dcd5415fcef84678e6881cf59ae82f7c571c6cd25ebee80befedf6b1ea059d32\",\"dweb:/ipfs/QmSypVCCRhPMuXhSdYhZ3i4SZDN2Qz3ywUby9jGSVwzXKc\"]},\"src/MoodNft.sol\":{\"keccak256\":\"0x1b82a0f981056d0cb971f5c005e133122aac1288feee317c7f31254bdd3cbdeb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7580bab4d5ad0cc78113cb4e60539431e5e88beaba9d13ab5d36a4e631aeca37\",\"dweb:/ipfs/QmXkyDKjTBviugucV5Piz1Ja4qXMvUsG9ppq6y5zYhPerF\"]}},\"version\":1}","solc_version":"0.8.20","solc_zkvm_edition":null,"zk_version":"1.4.1"},"storageLayout":{"storage":[],"types":{}},"userdoc":{},"devdoc":{},"irOptimized":"/// @use-src 0:\"lib/forge-std/src/Base.sol\", 1:\"lib/forge-std/src/Script.sol\", 3:\"lib/forge-std/src/StdChains.sol\", 4:\"lib/forge-std/src/StdCheats.sol\", 12:\"lib/forge-std/src/StdUtils.sol\", 41:\"script/DeployMoodNft.s.sol\"\nobject \"DeployMoodNft_50569\" {\n    code {\n        {\n            /// @src 41:259:1525  \"contract DeployMoodNft is Script {...\"\n            let _1 := memoryguard(0x80)\n            mstore(64, _1)\n            if callvalue() { revert(0, 0) }\n            sstore(/** @src 3:3166:3170  \"true\" */ 0x0c, /** @src 41:259:1525  \"contract DeployMoodNft is Script {...\" */ or(and(sload(/** @src 3:3166:3170  \"true\" */ 0x0c), /** @src 41:259:1525  \"contract DeployMoodNft is Script {...\" */ not(16711935)), 65537))\n            sstore(/** @src 41:341:407  \"0xac0974bec39a17e36ba4a6b4d238ff944bacb478cbed5efcae784d7bf4f2ff80\" */ 0x0d, 0xac0974bec39a17e36ba4a6b4d238ff944bacb478cbed5efcae784d7bf4f2ff80)\n            /// @src 41:259:1525  \"contract DeployMoodNft is Script {...\"\n            let _2 := datasize(\"DeployMoodNft_50569_deployed\")\n            codecopy(_1, dataoffset(\"DeployMoodNft_50569_deployed\"), _2)\n            return(_1, _2)\n        }\n    }\n    /// @use-src 0:\"lib/forge-std/src/Base.sol\", 1:\"lib/forge-std/src/Script.sol\", 34:\"lib/openzeppelin-contracts/contracts/utils/Base64.sol\", 41:\"script/DeployMoodNft.s.sol\"\n    object \"DeployMoodNft_50569_deployed\" {\n        code {\n            {\n                /// @src 41:259:1525  \"contract DeployMoodNft is Script {...\"\n                let _1 := 64\n                mstore(_1, memoryguard(0x80))\n                let _2 := 4\n                if iszero(lt(calldatasize(), _2))\n                {\n                    let _3 := 0\n                    switch shr(224, calldataload(_3))\n                    case 0x30d871c6 {\n                        if callvalue() { revert(_3, _3) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(_3, _3) }\n                        let offset := calldataload(_2)\n                        if gt(offset, 0xffffffffffffffff) { revert(_3, _3) }\n                        if iszero(slt(add(offset, 35), calldatasize())) { revert(_3, _3) }\n                        let _4 := calldataload(add(_2, offset))\n                        let _5 := array_allocation_size_string(_4)\n                        let memPtr := mload(_1)\n                        finalize_allocation(memPtr, _5)\n                        mstore(memPtr, _4)\n                        if gt(add(add(offset, _4), 36), calldatasize()) { revert(_3, _3) }\n                        calldatacopy(add(memPtr, 32), add(offset, 36), _4)\n                        mstore(add(add(memPtr, _4), 32), _3)\n                        let ret := fun_svgToImageURI(memPtr)\n                        let memPos := mload(_1)\n                        mstore(memPos, 32)\n                        return(memPos, sub(abi_encode_string(ret, add(memPos, 32)), memPos))\n                    }\n                    case 0x910dde5e {\n                        if callvalue() { revert(_3, _3) }\n                        if slt(add(calldatasize(), not(3)), _3) { revert(_3, _3) }\n                        let _6 := sload(/** @src 41:298:407  \"uint256 public DEFAULT_ANVIL_PRIVATE_KEY = 0xac0974bec39a17e36ba4a6b4d238ff944bacb478cbed5efcae784d7bf4f2ff80\" */ 13)\n                        /// @src 41:259:1525  \"contract DeployMoodNft is Script {...\"\n                        let memPos_1 := mload(_1)\n                        mstore(memPos_1, _6)\n                        return(memPos_1, 32)\n                    }\n                    case 0xc0406226 {\n                        if callvalue() { revert(_3, _3) }\n                        if slt(add(calldatasize(), not(3)), _3) { revert(_3, _3) }\n                        /// @src 41:489:531  \"vm.readFile(\\\"./images/dynamicNft/sad.svg\\\")\"\n                        let _7 := /** @src 41:259:1525  \"contract DeployMoodNft is Script {...\" */ mload(_1)\n                        /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                        let _8 := shl(224, 0x60f9bb11)\n                        /// @src 41:489:531  \"vm.readFile(\\\"./images/dynamicNft/sad.svg\\\")\"\n                        mstore(_7, /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ _8)\n                        mstore(/** @src 41:489:531  \"vm.readFile(\\\"./images/dynamicNft/sad.svg\\\")\" */ add(_7, /** @src 41:259:1525  \"contract DeployMoodNft is Script {...\" */ _2), /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ 32)\n                        /// @src 41:259:1525  \"contract DeployMoodNft is Script {...\"\n                        mstore(/** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ add(/** @src 41:489:531  \"vm.readFile(\\\"./images/dynamicNft/sad.svg\\\")\" */ _7, /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ 36), 27)\n                        mstore(/** @src 41:259:1525  \"contract DeployMoodNft is Script {...\" */ add(/** @src 41:489:531  \"vm.readFile(\\\"./images/dynamicNft/sad.svg\\\")\" */ _7, /** @src 41:259:1525  \"contract DeployMoodNft is Script {...\" */ 68), /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ \"./images/dynamicNft/sad.svg\")\n                        /// @src 41:259:1525  \"contract DeployMoodNft is Script {...\"\n                        let _9 := 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d\n                        /// @src 41:489:531  \"vm.readFile(\\\"./images/dynamicNft/sad.svg\\\")\"\n                        let _10 := staticcall(gas(), /** @src 41:259:1525  \"contract DeployMoodNft is Script {...\" */ _9, /** @src 41:489:531  \"vm.readFile(\\\"./images/dynamicNft/sad.svg\\\")\" */ _7, /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ 100, /** @src 41:489:531  \"vm.readFile(\\\"./images/dynamicNft/sad.svg\\\")\" */ _7, /** @src 41:259:1525  \"contract DeployMoodNft is Script {...\" */ _3)\n                        /// @src 41:489:531  \"vm.readFile(\\\"./images/dynamicNft/sad.svg\\\")\"\n                        if iszero(_10)\n                        {\n                            /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                            let pos := /** @src 41:259:1525  \"contract DeployMoodNft is Script {...\" */ mload(_1)\n                            /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                            returndatacopy(pos, /** @src 41:259:1525  \"contract DeployMoodNft is Script {...\" */ _3, /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ returndatasize())\n                            revert(pos, returndatasize())\n                        }\n                        /// @src 41:489:531  \"vm.readFile(\\\"./images/dynamicNft/sad.svg\\\")\"\n                        let expr_mpos := /** @src 41:259:1525  \"contract DeployMoodNft is Script {...\" */ _3\n                        /// @src 41:489:531  \"vm.readFile(\\\"./images/dynamicNft/sad.svg\\\")\"\n                        if _10\n                        {\n                            let _11 := returndatasize()\n                            returndatacopy(_7, /** @src 41:259:1525  \"contract DeployMoodNft is Script {...\" */ _3, /** @src 41:489:531  \"vm.readFile(\\\"./images/dynamicNft/sad.svg\\\")\" */ _11)\n                            finalize_allocation(_7, _11)\n                            expr_mpos := abi_decode_string_fromMemory(_7, add(_7, _11))\n                        }\n                        /// @src 41:566:610  \"vm.readFile(\\\"./images/dynamicNft/happy.svg\\\")\"\n                        let _12 := /** @src 41:259:1525  \"contract DeployMoodNft is Script {...\" */ mload(_1)\n                        /// @src 41:566:610  \"vm.readFile(\\\"./images/dynamicNft/happy.svg\\\")\"\n                        mstore(_12, /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ _8)\n                        mstore(/** @src 41:566:610  \"vm.readFile(\\\"./images/dynamicNft/happy.svg\\\")\" */ add(_12, /** @src 41:259:1525  \"contract DeployMoodNft is Script {...\" */ _2), /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ 32)\n                        /// @src 41:259:1525  \"contract DeployMoodNft is Script {...\"\n                        mstore(/** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ add(/** @src 41:566:610  \"vm.readFile(\\\"./images/dynamicNft/happy.svg\\\")\" */ _12, /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ 36), 29)\n                        mstore(/** @src 41:259:1525  \"contract DeployMoodNft is Script {...\" */ add(/** @src 41:566:610  \"vm.readFile(\\\"./images/dynamicNft/happy.svg\\\")\" */ _12, /** @src 41:259:1525  \"contract DeployMoodNft is Script {...\" */ 68), /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ \"./images/dynamicNft/happy.svg\")\n                        /// @src 41:566:610  \"vm.readFile(\\\"./images/dynamicNft/happy.svg\\\")\"\n                        let _13 := staticcall(gas(), /** @src 41:259:1525  \"contract DeployMoodNft is Script {...\" */ _9, /** @src 41:566:610  \"vm.readFile(\\\"./images/dynamicNft/happy.svg\\\")\" */ _12, /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ 100, /** @src 41:566:610  \"vm.readFile(\\\"./images/dynamicNft/happy.svg\\\")\" */ _12, /** @src 41:259:1525  \"contract DeployMoodNft is Script {...\" */ _3)\n                        /// @src 41:566:610  \"vm.readFile(\\\"./images/dynamicNft/happy.svg\\\")\"\n                        if iszero(_13)\n                        {\n                            /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                            let pos_1 := /** @src 41:259:1525  \"contract DeployMoodNft is Script {...\" */ mload(_1)\n                            /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                            returndatacopy(pos_1, /** @src 41:259:1525  \"contract DeployMoodNft is Script {...\" */ _3, /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ returndatasize())\n                            revert(pos_1, returndatasize())\n                        }\n                        /// @src 41:566:610  \"vm.readFile(\\\"./images/dynamicNft/happy.svg\\\")\"\n                        let expr_mpos_1 := /** @src 41:259:1525  \"contract DeployMoodNft is Script {...\" */ _3\n                        /// @src 41:566:610  \"vm.readFile(\\\"./images/dynamicNft/happy.svg\\\")\"\n                        if _13\n                        {\n                            let _14 := returndatasize()\n                            returndatacopy(_12, /** @src 41:259:1525  \"contract DeployMoodNft is Script {...\" */ _3, /** @src 41:566:610  \"vm.readFile(\\\"./images/dynamicNft/happy.svg\\\")\" */ _14)\n                            finalize_allocation(_12, _14)\n                            expr_mpos_1 := abi_decode_string_fromMemory(_12, add(_12, _14))\n                        }\n                        /// @src 41:621:640  \"vm.startBroadcast()\"\n                        if iszero(extcodesize(/** @src 41:259:1525  \"contract DeployMoodNft is Script {...\" */ _9))\n                        /// @src 41:621:640  \"vm.startBroadcast()\"\n                        {\n                            /// @src 41:259:1525  \"contract DeployMoodNft is Script {...\"\n                            revert(_3, _3)\n                        }\n                        /// @src 41:621:640  \"vm.startBroadcast()\"\n                        let _15 := /** @src 41:259:1525  \"contract DeployMoodNft is Script {...\" */ mload(_1)\n                        /// @src 41:621:640  \"vm.startBroadcast()\"\n                        mstore(_15, /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ shl(224, 0x7fb5297f))\n                        /// @src 41:621:640  \"vm.startBroadcast()\"\n                        let _16 := call(gas(), /** @src 41:259:1525  \"contract DeployMoodNft is Script {...\" */ _9, _3, /** @src 41:621:640  \"vm.startBroadcast()\" */ _15, /** @src 41:259:1525  \"contract DeployMoodNft is Script {...\" */ _2, /** @src 41:621:640  \"vm.startBroadcast()\" */ _15, /** @src 41:259:1525  \"contract DeployMoodNft is Script {...\" */ _3)\n                        /// @src 41:621:640  \"vm.startBroadcast()\"\n                        if iszero(_16)\n                        {\n                            /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                            let pos_2 := /** @src 41:259:1525  \"contract DeployMoodNft is Script {...\" */ mload(_1)\n                            /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                            returndatacopy(pos_2, /** @src 41:259:1525  \"contract DeployMoodNft is Script {...\" */ _3, /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ returndatasize())\n                            revert(pos_2, returndatasize())\n                        }\n                        /// @src 41:621:640  \"vm.startBroadcast()\"\n                        if _16\n                        {\n                            finalize_allocation_2511(_15)\n                            /// @src 41:259:1525  \"contract DeployMoodNft is Script {...\"\n                            _3 := _3\n                        }\n                        /// @src 41:680:701  \"svgToImageURI(sadSvg)\"\n                        let expr_mpos_2 := fun_svgToImageURI(expr_mpos)\n                        /// @src 41:703:726  \"svgToImageURI(happySvg)\"\n                        let expr_mpos_3 := fun_svgToImageURI(expr_mpos_1)\n                        /// @src 41:668:727  \"new MoodNft(svgToImageURI(sadSvg), svgToImageURI(happySvg))\"\n                        let _17 := /** @src 41:259:1525  \"contract DeployMoodNft is Script {...\" */ mload(_1)\n                        /// @src 41:668:727  \"new MoodNft(svgToImageURI(sadSvg), svgToImageURI(happySvg))\"\n                        let _18 := datasize(\"MoodNft_51029\")\n                        let _19 := add(_17, _18)\n                        if or(gt(_19, 0xffffffffffffffff), lt(_19, _17))\n                        {\n                            /// @src 41:259:1525  \"contract DeployMoodNft is Script {...\"\n                            mstore(_3, shl(224, 0x4e487b71))\n                            mstore(_2, 0x41)\n                            revert(_3, /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ 36)\n                        }\n                        /// @src 41:668:727  \"new MoodNft(svgToImageURI(sadSvg), svgToImageURI(happySvg))\"\n                        datacopy(_17, dataoffset(\"MoodNft_51029\"), _18)\n                        /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                        mstore(_19, /** @src 41:259:1525  \"contract DeployMoodNft is Script {...\" */ _1)\n                        /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                        let tail := abi_encode_string(expr_mpos_2, add(_19, /** @src 41:259:1525  \"contract DeployMoodNft is Script {...\" */ _1))\n                        /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                        mstore(add(_19, 32), sub(tail, _19))\n                        /// @src 41:668:727  \"new MoodNft(svgToImageURI(sadSvg), svgToImageURI(happySvg))\"\n                        let expr_address := create(/** @src 41:259:1525  \"contract DeployMoodNft is Script {...\" */ _3, /** @src 41:668:727  \"new MoodNft(svgToImageURI(sadSvg), svgToImageURI(happySvg))\" */ _17, sub(/** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ abi_encode_string(expr_mpos_3, tail), /** @src 41:668:727  \"new MoodNft(svgToImageURI(sadSvg), svgToImageURI(happySvg))\" */ _17))\n                        if iszero(expr_address)\n                        {\n                            /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                            let pos_3 := /** @src 41:259:1525  \"contract DeployMoodNft is Script {...\" */ mload(_1)\n                            /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                            returndatacopy(pos_3, /** @src 41:259:1525  \"contract DeployMoodNft is Script {...\" */ _3, /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ returndatasize())\n                            revert(pos_3, returndatasize())\n                        }\n                        /// @src 41:737:755  \"vm.stopBroadcast()\"\n                        if iszero(extcodesize(/** @src 41:259:1525  \"contract DeployMoodNft is Script {...\" */ _9))\n                        /// @src 41:737:755  \"vm.stopBroadcast()\"\n                        {\n                            /// @src 41:259:1525  \"contract DeployMoodNft is Script {...\"\n                            revert(_3, _3)\n                        }\n                        /// @src 41:737:755  \"vm.stopBroadcast()\"\n                        let _20 := /** @src 41:259:1525  \"contract DeployMoodNft is Script {...\" */ mload(_1)\n                        /// @src 41:737:755  \"vm.stopBroadcast()\"\n                        mstore(_20, /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ shl(225, 0x3b756e9b))\n                        /// @src 41:737:755  \"vm.stopBroadcast()\"\n                        let _21 := call(gas(), /** @src 41:259:1525  \"contract DeployMoodNft is Script {...\" */ _9, _3, /** @src 41:737:755  \"vm.stopBroadcast()\" */ _20, /** @src 41:259:1525  \"contract DeployMoodNft is Script {...\" */ _2, /** @src 41:737:755  \"vm.stopBroadcast()\" */ _20, /** @src 41:259:1525  \"contract DeployMoodNft is Script {...\" */ _3)\n                        /// @src 41:737:755  \"vm.stopBroadcast()\"\n                        if iszero(_21)\n                        {\n                            /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                            let pos_4 := /** @src 41:259:1525  \"contract DeployMoodNft is Script {...\" */ mload(_1)\n                            /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                            returndatacopy(pos_4, /** @src 41:259:1525  \"contract DeployMoodNft is Script {...\" */ _3, /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ returndatasize())\n                            revert(pos_4, returndatasize())\n                        }\n                        /// @src 41:737:755  \"vm.stopBroadcast()\"\n                        if _21\n                        {\n                            finalize_allocation_2511(_20)\n                            /// @src 41:259:1525  \"contract DeployMoodNft is Script {...\"\n                            if _3 { revert(_3, _3) }\n                        }\n                        let memPos_2 := mload(_1)\n                        mstore(memPos_2, and(expr_address, sub(shl(160, 1), 1)))\n                        return(memPos_2, /** @src 0:1590:1604  \"Vm(VM_ADDRESS)\" */ 32)\n                    }\n                    case /** @src 41:259:1525  \"contract DeployMoodNft is Script {...\" */ 0xf8ccbf47 {\n                        if callvalue() { revert(_3, _3) }\n                        if slt(add(calldatasize(), not(3)), _3) { revert(_3, _3) }\n                        let value := and(shr(16, sload(/** @src 1:800:828  \"bool public IS_SCRIPT = true\" */ 12)), /** @src 41:259:1525  \"contract DeployMoodNft is Script {...\" */ 0xff)\n                        let memPos_3 := mload(_1)\n                        mstore(memPos_3, iszero(iszero(value)))\n                        return(memPos_3, 32)\n                    }\n                }\n                revert(0, 0)\n            }\n            function finalize_allocation_2511(memPtr)\n            {\n                if gt(memPtr, 0xffffffffffffffff)\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x41)\n                    revert(0, 0x24)\n                }\n                mstore(64, memPtr)\n            }\n            function finalize_allocation(memPtr, size)\n            {\n                let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr))\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x41)\n                    revert(0, 0x24)\n                }\n                mstore(64, newFreePtr)\n            }\n            function array_allocation_size_string(length) -> size\n            {\n                if gt(length, 0xffffffffffffffff)\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x41)\n                    revert(0, 0x24)\n                }\n                size := add(and(add(length, 31), not(31)), 0x20)\n            }\n            function copy_memory_to_memory_with_cleanup(src, dst, length)\n            {\n                let i := 0\n                for { } lt(i, length) { i := add(i, 32) }\n                {\n                    mstore(add(dst, i), mload(add(src, i)))\n                }\n                mstore(add(dst, length), 0)\n            }\n            function abi_encode_string(value, pos) -> end\n            {\n                let length := mload(value)\n                mstore(pos, length)\n                copy_memory_to_memory_with_cleanup(add(value, 0x20), add(pos, 0x20), length)\n                end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n            }\n            /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n            function abi_decode_string_fromMemory(headStart, dataEnd) -> value0\n            {\n                if slt(sub(dataEnd, headStart), 32)\n                {\n                    /// @src 41:259:1525  \"contract DeployMoodNft is Script {...\"\n                    revert(0, 0)\n                }\n                /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                let offset := mload(headStart)\n                if gt(offset, 0xffffffffffffffff)\n                {\n                    /// @src 41:259:1525  \"contract DeployMoodNft is Script {...\"\n                    revert(0, 0)\n                }\n                /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                let _1 := add(headStart, offset)\n                if iszero(slt(add(_1, 0x1f), dataEnd))\n                {\n                    /// @src 41:259:1525  \"contract DeployMoodNft is Script {...\"\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                let _2 := mload(_1)\n                let _3 := array_allocation_size_string(_2)\n                /// @src 41:259:1525  \"contract DeployMoodNft is Script {...\"\n                let memPtr := mload(64)\n                finalize_allocation(memPtr, _3)\n                /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                mstore(memPtr, _2)\n                if gt(add(add(_1, _2), 32), dataEnd)\n                {\n                    /// @src 41:259:1525  \"contract DeployMoodNft is Script {...\"\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 0:1590:1604  \"Vm(VM_ADDRESS)\"\n                copy_memory_to_memory_with_cleanup(add(_1, 32), add(memPtr, 32), _2)\n                value0 := memPtr\n            }\n            /// @ast-id 50568 @src 41:869:1523  \"function svgToImageURI(string memory svg) public pure returns (string memory) {...\"\n            function fun_svgToImageURI(var_svg_mpos) -> var__mpos\n            {\n                /// @src 41:259:1525  \"contract DeployMoodNft is Script {...\"\n                let memPtr := mload(64)\n                let newFreePtr := add(memPtr, 64)\n                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr))\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x41)\n                    revert(0, 0x24)\n                }\n                mstore(64, newFreePtr)\n                mstore(memPtr, 26)\n                let _1 := 32\n                let _2 := add(memPtr, _1)\n                mstore(_2, \"data:image/svg+xml;base64,\")\n                /// @src 41:1314:1335  \"abi.encodePacked(svg)\"\n                let expr_50553_mpos := /** @src 41:259:1525  \"contract DeployMoodNft is Script {...\" */ mload(64)\n                let length := mload(var_svg_mpos)\n                copy_memory_to_memory_with_cleanup(add(var_svg_mpos, _1), /** @src 41:1314:1335  \"abi.encodePacked(svg)\" */ add(expr_50553_mpos, /** @src 41:259:1525  \"contract DeployMoodNft is Script {...\" */ _1), length)\n                /// @src 41:1314:1335  \"abi.encodePacked(svg)\"\n                let _3 := sub(/** @src 41:259:1525  \"contract DeployMoodNft is Script {...\" */ add(/** @src 41:1314:1335  \"abi.encodePacked(svg)\" */ expr_50553_mpos, /** @src 41:259:1525  \"contract DeployMoodNft is Script {...\" */ length), /** @src 41:1314:1335  \"abi.encodePacked(svg)\" */ expr_50553_mpos)\n                mstore(expr_50553_mpos, _3)\n                finalize_allocation(expr_50553_mpos, add(_3, /** @src 41:259:1525  \"contract DeployMoodNft is Script {...\" */ _1))\n                /// @src 41:1274:1448  \"Base64.encode(...\"\n                let expr_mpos := fun_encode(/** @src 41:1307:1336  \"string(abi.encodePacked(svg))\" */ expr_50553_mpos)\n                /// @src 41:1472:1515  \"abi.encodePacked(baseURI, svgBase64Encoded)\"\n                let expr_50564_mpos := /** @src 41:259:1525  \"contract DeployMoodNft is Script {...\" */ mload(64)\n                let length_1 := mload(memPtr)\n                copy_memory_to_memory_with_cleanup(_2, /** @src 41:1472:1515  \"abi.encodePacked(baseURI, svgBase64Encoded)\" */ add(expr_50564_mpos, /** @src 41:259:1525  \"contract DeployMoodNft is Script {...\" */ _1), length_1)\n                let _4 := add(/** @src 41:1472:1515  \"abi.encodePacked(baseURI, svgBase64Encoded)\" */ expr_50564_mpos, /** @src 41:259:1525  \"contract DeployMoodNft is Script {...\" */ length_1)\n                let length_2 := mload(expr_mpos)\n                copy_memory_to_memory_with_cleanup(add(expr_mpos, _1), add(_4, _1), length_2)\n                /// @src 41:1472:1515  \"abi.encodePacked(baseURI, svgBase64Encoded)\"\n                let _5 := sub(/** @src 41:259:1525  \"contract DeployMoodNft is Script {...\" */ add(_4, length_2), /** @src 41:1472:1515  \"abi.encodePacked(baseURI, svgBase64Encoded)\" */ expr_50564_mpos)\n                mstore(expr_50564_mpos, _5)\n                finalize_allocation(expr_50564_mpos, add(_5, /** @src 41:259:1525  \"contract DeployMoodNft is Script {...\" */ _1))\n                /// @src 41:1458:1516  \"return string(abi.encodePacked(baseURI, svgBase64Encoded))\"\n                var__mpos := expr_50564_mpos\n            }\n            /// @ast-id 48988 @src 34:476:3858  \"function encode(bytes memory data) internal pure returns (string memory) {...\"\n            function fun_encode(var_data_mpos) -> var_mpos\n            {\n                /// @src 34:762:793  \"if (data.length == 0) return \\\"\\\"\"\n                if /** @src 34:766:782  \"data.length == 0\" */ iszero(/** @src 41:259:1525  \"contract DeployMoodNft is Script {...\" */ mload(/** @src 34:766:777  \"data.length\" */ var_data_mpos))\n                /// @src 34:762:793  \"if (data.length == 0) return \\\"\\\"\"\n                {\n                    /// @src 41:259:1525  \"contract DeployMoodNft is Script {...\"\n                    let memPtr := mload(64)\n                    let newFreePtr := add(memPtr, 0x20)\n                    if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr))\n                    {\n                        mstore(0, shl(224, 0x4e487b71))\n                        mstore(4, 0x41)\n                        revert(0, 0x24)\n                    }\n                    mstore(64, newFreePtr)\n                    mstore(memPtr, /** @src 34:781:782  \"0\" */ 0x00)\n                    /// @src 34:784:793  \"return \\\"\\\"\"\n                    var_mpos := memPtr\n                    leave\n                }\n                /// @src 41:259:1525  \"contract DeployMoodNft is Script {...\"\n                let memPtr_1 := mload(64)\n                let newFreePtr_1 := add(memPtr_1, 96)\n                if or(gt(newFreePtr_1, 0xffffffffffffffff), lt(newFreePtr_1, memPtr_1))\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x41)\n                    revert(0, 0x24)\n                }\n                mstore(64, newFreePtr_1)\n                mstore(memPtr_1, 64)\n                mstore(add(memPtr_1, 32), \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdef\")\n                mstore(add(memPtr_1, 64), \"ghijklmnopqrstuvwxyz0123456789+/\")\n                /// @src 34:1314:1325  \"data.length\"\n                let expr := /** @src 41:259:1525  \"contract DeployMoodNft is Script {...\" */ mload(/** @src 34:1314:1325  \"data.length\" */ var_data_mpos)\n                /// @src 34:1328:1329  \"2\"\n                let _1 := 0x02\n                /// @src 34:316:382  \"\\\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\\\"\"\n                let sum := add(expr, /** @src 34:1328:1329  \"2\" */ _1)\n                /// @src 34:316:382  \"\\\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\\\"\"\n                if gt(expr, sum)\n                {\n                    mstore(/** @src 34:781:782  \"0\" */ 0x00, /** @src 41:259:1525  \"contract DeployMoodNft is Script {...\" */ shl(224, 0x4e487b71))\n                    /// @src 34:316:382  \"\\\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\\\"\"\n                    mstore(4, 0x11)\n                    revert(/** @src 34:781:782  \"0\" */ 0x00, /** @src 34:316:382  \"\\\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\\\"\" */ 0x24)\n                }\n                /// @src 34:1333:1334  \"3\"\n                let _2 := 0x03\n                /// @src 34:316:382  \"\\\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\\\"\"\n                let r := div(sum, /** @src 34:1333:1334  \"3\" */ _2)\n                /// @src 34:316:382  \"\\\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\\\"\"\n                let product := shl(/** @src 34:1328:1329  \"2\" */ _1, /** @src 34:316:382  \"\\\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\\\"\" */ r)\n                if iszero(eq(r, and(r, sub(shl(254, /** @src 41:259:1525  \"contract DeployMoodNft is Script {...\" */ 1), 1))))\n                /// @src 34:316:382  \"\\\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\\\"\"\n                {\n                    mstore(/** @src 34:781:782  \"0\" */ 0x00, /** @src 41:259:1525  \"contract DeployMoodNft is Script {...\" */ shl(224, 0x4e487b71))\n                    /// @src 34:316:382  \"\\\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\\\"\"\n                    mstore(/** @src 34:1308:1309  \"4\" */ 0x04, /** @src 34:316:382  \"\\\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\\\"\" */ 0x11)\n                    revert(/** @src 34:781:782  \"0\" */ 0x00, /** @src 34:316:382  \"\\\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\\\"\" */ 0x24)\n                }\n                /// @src 41:259:1525  \"contract DeployMoodNft is Script {...\"\n                let _3 := array_allocation_size_string(product)\n                let memPtr_2 := mload(64)\n                finalize_allocation(memPtr_2, _3)\n                mstore(memPtr_2, product)\n                /// @src 34:316:382  \"\\\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\\\"\"\n                let dataSize := array_allocation_size_string(product)\n                let dataStart := add(memPtr_2, /** @src 41:259:1525  \"contract DeployMoodNft is Script {...\" */ 32)\n                /// @src 34:316:382  \"\\\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\\\"\"\n                calldatacopy(dataStart, calldatasize(), add(dataSize, /** @src 41:259:1525  \"contract DeployMoodNft is Script {...\" */ not(31)))\n                /// @src 34:1390:3828  \"assembly {...\"\n                let usr$resultPtr := dataStart\n                let usr$dataPtr := var_data_mpos\n                let usr$endPtr := add(var_data_mpos, mload(var_data_mpos))\n                let usr$afterPtr := add(usr$endPtr, /** @src 41:259:1525  \"contract DeployMoodNft is Script {...\" */ 32)\n                /// @src 34:1390:3828  \"assembly {...\"\n                let usr$afterCache := mload(usr$afterPtr)\n                mstore(usr$afterPtr, /** @src 34:781:782  \"0\" */ 0x00)\n                /// @src 34:1390:3828  \"assembly {...\"\n                for { } lt(usr$dataPtr, usr$endPtr) { }\n                {\n                    usr$dataPtr := add(usr$dataPtr, /** @src 34:1333:1334  \"3\" */ _2)\n                    /// @src 34:1390:3828  \"assembly {...\"\n                    let usr$input := mload(usr$dataPtr)\n                    let _4 := 1\n                    let _5 := 0x3F\n                    mstore8(usr$resultPtr, mload(add(add(memPtr_1, and(shr(18, usr$input), _5)), _4)))\n                    mstore8(add(usr$resultPtr, _4), mload(add(add(memPtr_1, and(shr(12, usr$input), _5)), _4)))\n                    mstore8(add(usr$resultPtr, /** @src 34:1328:1329  \"2\" */ _1), /** @src 34:1390:3828  \"assembly {...\" */ mload(add(add(memPtr_1, and(shr(6, usr$input), _5)), _4)))\n                    mstore8(add(usr$resultPtr, /** @src 34:1333:1334  \"3\" */ _2), /** @src 34:1390:3828  \"assembly {...\" */ mload(add(add(memPtr_1, and(usr$input, _5)), _4)))\n                    usr$resultPtr := add(usr$resultPtr, /** @src 34:1308:1309  \"4\" */ 0x04)\n                }\n                /// @src 34:1390:3828  \"assembly {...\"\n                mstore(usr$afterPtr, usr$afterCache)\n                switch mod(mload(var_data_mpos), /** @src 34:1333:1334  \"3\" */ _2)\n                case /** @src 34:1390:3828  \"assembly {...\" */ 1 {\n                    mstore8(add(usr$resultPtr, not(0)), 0x3d)\n                    mstore8(add(usr$resultPtr, not(/** @src 41:259:1525  \"contract DeployMoodNft is Script {...\" */ 1)), /** @src 34:1390:3828  \"assembly {...\" */ 0x3d)\n                }\n                case 2 {\n                    mstore8(add(usr$resultPtr, not(0)), 0x3d)\n                }\n                /// @src 34:3838:3851  \"return result\"\n                var_mpos := memPtr_2\n            }\n        }\n        /// @use-src 28:\"lib/openzeppelin-contracts/contracts/access/Ownable.sol\", 29:\"lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol\", 30:\"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\", 31:\"lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol\", 33:\"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol\", 35:\"lib/openzeppelin-contracts/contracts/utils/Context.sol\", 37:\"lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol\", 38:\"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol\", 44:\"src/MoodNft.sol\"\n        object \"MoodNft_51029\" {\n            code {\n                {\n                    /// @src 44:606:3453  \"contract MoodNft is ERC721, Ownable {...\"\n                    mstore(64, memoryguard(0x80))\n                    if callvalue() { revert(0, 0) }\n                    let programSize := datasize(\"MoodNft_51029\")\n                    let argSize := sub(codesize(), programSize)\n                    let memoryDataOffset := allocate_memory(argSize)\n                    codecopy(memoryDataOffset, programSize, argSize)\n                    let _1 := add(memoryDataOffset, argSize)\n                    if slt(sub(_1, memoryDataOffset), 64)\n                    {\n                        revert(/** @src -1:-1:-1 */ 0, 0)\n                    }\n                    /// @src 44:606:3453  \"contract MoodNft is ERC721, Ownable {...\"\n                    let offset := mload(memoryDataOffset)\n                    let _2 := sub(shl(64, 1), 1)\n                    if gt(offset, _2)\n                    {\n                        revert(/** @src -1:-1:-1 */ 0, 0)\n                    }\n                    /// @src 44:606:3453  \"contract MoodNft is ERC721, Ownable {...\"\n                    let value0 := abi_decode_string_fromMemory(add(memoryDataOffset, offset), _1)\n                    let _3 := 32\n                    let offset_1 := mload(add(memoryDataOffset, _3))\n                    if gt(offset_1, _2)\n                    {\n                        revert(/** @src -1:-1:-1 */ 0, 0)\n                    }\n                    /// @src 44:606:3453  \"contract MoodNft is ERC721, Ownable {...\"\n                    let value1 := abi_decode_string_fromMemory(add(memoryDataOffset, offset_1), _1)\n                    let memPtr := allocate_memory_6113()\n                    let _4 := 8\n                    mstore(memPtr, _4)\n                    mstore(add(memPtr, _3), \"Mood NFT\")\n                    let memPtr_1 := allocate_memory_6113()\n                    mstore(memPtr_1, 2)\n                    mstore(add(memPtr_1, _3), \"MN\")\n                    let newLen := mload(memPtr)\n                    if gt(newLen, _2)\n                    {\n                        mstore(/** @src -1:-1:-1 */ 0, /** @src 44:606:3453  \"contract MoodNft is ERC721, Ownable {...\" */ shl(224, 0x4e487b71))\n                        mstore(4, 0x41)\n                        revert(/** @src -1:-1:-1 */ 0, /** @src 44:606:3453  \"contract MoodNft is ERC721, Ownable {...\" */ 0x24)\n                    }\n                    /// @src -1:-1:-1\n                    let _5 := 0\n                    /// @src 44:606:3453  \"contract MoodNft is ERC721, Ownable {...\"\n                    let _6 := sload(/** @src -1:-1:-1 */ _5)\n                    /// @src 44:606:3453  \"contract MoodNft is ERC721, Ownable {...\"\n                    let length := /** @src -1:-1:-1 */ _5\n                    /// @src 44:606:3453  \"contract MoodNft is ERC721, Ownable {...\"\n                    let _7 := 1\n                    length := shr(_7, _6)\n                    let outOfPlaceEncoding := and(_6, _7)\n                    if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n                    if eq(outOfPlaceEncoding, lt(length, _3))\n                    {\n                        mstore(/** @src -1:-1:-1 */ _5, /** @src 44:606:3453  \"contract MoodNft is ERC721, Ownable {...\" */ shl(224, 0x4e487b71))\n                        mstore(4, 0x22)\n                        revert(/** @src -1:-1:-1 */ _5, /** @src 44:606:3453  \"contract MoodNft is ERC721, Ownable {...\" */ 0x24)\n                    }\n                    let _8 := 31\n                    if gt(length, _8)\n                    {\n                        mstore(/** @src -1:-1:-1 */ _5, _5)\n                        /// @src 44:606:3453  \"contract MoodNft is ERC721, Ownable {...\"\n                        let data := keccak256(/** @src -1:-1:-1 */ _5, /** @src 44:606:3453  \"contract MoodNft is ERC721, Ownable {...\" */ _3)\n                        let deleteStart := add(data, shr(5, add(newLen, _8)))\n                        if lt(newLen, _3) { deleteStart := data }\n                        let _9 := add(data, shr(5, add(length, _8)))\n                        let start := deleteStart\n                        for { } lt(start, _9) { start := add(start, _7) }\n                        {\n                            sstore(start, /** @src -1:-1:-1 */ _5)\n                        }\n                    }\n                    /// @src 44:606:3453  \"contract MoodNft is ERC721, Ownable {...\"\n                    let srcOffset := /** @src -1:-1:-1 */ _5\n                    /// @src 44:606:3453  \"contract MoodNft is ERC721, Ownable {...\"\n                    srcOffset := _3\n                    switch gt(newLen, _8)\n                    case 1 {\n                        let loopEnd := and(newLen, not(31))\n                        mstore(/** @src -1:-1:-1 */ _5, _5)\n                        /// @src 44:606:3453  \"contract MoodNft is ERC721, Ownable {...\"\n                        let dstPtr := keccak256(/** @src -1:-1:-1 */ _5, /** @src 44:606:3453  \"contract MoodNft is ERC721, Ownable {...\" */ _3)\n                        let i := /** @src -1:-1:-1 */ _5\n                        /// @src 44:606:3453  \"contract MoodNft is ERC721, Ownable {...\"\n                        for { } lt(i, loopEnd) { i := add(i, _3) }\n                        {\n                            sstore(dstPtr, mload(add(memPtr, srcOffset)))\n                            dstPtr := add(dstPtr, _7)\n                            srcOffset := add(srcOffset, _3)\n                        }\n                        if lt(loopEnd, newLen)\n                        {\n                            let lastValue := mload(add(memPtr, srcOffset))\n                            sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n                        }\n                        sstore(/** @src -1:-1:-1 */ _5, /** @src 44:606:3453  \"contract MoodNft is ERC721, Ownable {...\" */ add(shl(_7, newLen), _7))\n                    }\n                    default {\n                        let value := /** @src -1:-1:-1 */ _5\n                        /// @src 44:606:3453  \"contract MoodNft is ERC721, Ownable {...\"\n                        if newLen\n                        {\n                            value := mload(add(memPtr, srcOffset))\n                        }\n                        sstore(/** @src -1:-1:-1 */ _5, /** @src 44:606:3453  \"contract MoodNft is ERC721, Ownable {...\" */ or(and(value, not(shr(shl(3, newLen), not(0)))), shl(_7, newLen)))\n                    }\n                    let newLen_1 := mload(memPtr_1)\n                    if gt(newLen_1, _2)\n                    {\n                        mstore(/** @src -1:-1:-1 */ _5, /** @src 44:606:3453  \"contract MoodNft is ERC721, Ownable {...\" */ shl(224, 0x4e487b71))\n                        mstore(4, 0x41)\n                        revert(/** @src -1:-1:-1 */ _5, /** @src 44:606:3453  \"contract MoodNft is ERC721, Ownable {...\" */ 0x24)\n                    }\n                    let _10 := sload(_7)\n                    let length_1 := /** @src -1:-1:-1 */ _5\n                    /// @src 44:606:3453  \"contract MoodNft is ERC721, Ownable {...\"\n                    length_1 := shr(_7, _10)\n                    let outOfPlaceEncoding_1 := and(_10, _7)\n                    if iszero(outOfPlaceEncoding_1)\n                    {\n                        length_1 := and(length_1, 0x7f)\n                    }\n                    if eq(outOfPlaceEncoding_1, lt(length_1, _3))\n                    {\n                        mstore(/** @src -1:-1:-1 */ _5, /** @src 44:606:3453  \"contract MoodNft is ERC721, Ownable {...\" */ shl(224, 0x4e487b71))\n                        mstore(4, 0x22)\n                        revert(/** @src -1:-1:-1 */ _5, /** @src 44:606:3453  \"contract MoodNft is ERC721, Ownable {...\" */ 0x24)\n                    }\n                    if gt(length_1, _8)\n                    {\n                        mstore(/** @src -1:-1:-1 */ _5, /** @src 44:606:3453  \"contract MoodNft is ERC721, Ownable {...\" */ _7)\n                        let data_1 := keccak256(/** @src -1:-1:-1 */ _5, /** @src 44:606:3453  \"contract MoodNft is ERC721, Ownable {...\" */ _3)\n                        let deleteStart_1 := add(data_1, shr(5, add(newLen_1, _8)))\n                        if lt(newLen_1, _3) { deleteStart_1 := data_1 }\n                        let _11 := add(data_1, shr(5, add(length_1, _8)))\n                        let start_1 := deleteStart_1\n                        for { } lt(start_1, _11) { start_1 := add(start_1, _7) }\n                        {\n                            sstore(start_1, /** @src -1:-1:-1 */ _5)\n                        }\n                    }\n                    /// @src 44:606:3453  \"contract MoodNft is ERC721, Ownable {...\"\n                    let srcOffset_1 := /** @src -1:-1:-1 */ _5\n                    /// @src 44:606:3453  \"contract MoodNft is ERC721, Ownable {...\"\n                    srcOffset_1 := _3\n                    switch gt(newLen_1, _8)\n                    case 1 {\n                        let loopEnd_1 := and(newLen_1, not(31))\n                        mstore(/** @src -1:-1:-1 */ _5, /** @src 44:606:3453  \"contract MoodNft is ERC721, Ownable {...\" */ _7)\n                        let dstPtr_1 := keccak256(/** @src -1:-1:-1 */ _5, /** @src 44:606:3453  \"contract MoodNft is ERC721, Ownable {...\" */ _3)\n                        let i_1 := /** @src -1:-1:-1 */ _5\n                        /// @src 44:606:3453  \"contract MoodNft is ERC721, Ownable {...\"\n                        for { } lt(i_1, loopEnd_1) { i_1 := add(i_1, _3) }\n                        {\n                            sstore(dstPtr_1, mload(add(memPtr_1, srcOffset_1)))\n                            dstPtr_1 := add(dstPtr_1, _7)\n                            srcOffset_1 := add(srcOffset_1, _3)\n                        }\n                        if lt(loopEnd_1, newLen_1)\n                        {\n                            let lastValue_1 := mload(add(memPtr_1, srcOffset_1))\n                            sstore(dstPtr_1, and(lastValue_1, not(shr(and(shl(3, newLen_1), 248), not(0)))))\n                        }\n                        sstore(_7, add(shl(_7, newLen_1), _7))\n                    }\n                    default {\n                        let value_1 := /** @src -1:-1:-1 */ _5\n                        /// @src 44:606:3453  \"contract MoodNft is ERC721, Ownable {...\"\n                        if newLen_1\n                        {\n                            value_1 := mload(add(memPtr_1, srcOffset_1))\n                        }\n                        sstore(_7, or(and(value_1, not(shr(shl(3, newLen_1), not(0)))), shl(_7, newLen_1)))\n                    }\n                    /// @src 28:1269:1364  \"if (initialOwner == address(0)) {...\"\n                    if /** @src 28:1273:1299  \"initialOwner == address(0)\" */ iszero(/** @src 44:1115:1125  \"msg.sender\" */ caller())\n                    /// @src 28:1269:1364  \"if (initialOwner == address(0)) {...\"\n                    {\n                        /// @src 28:1322:1353  \"OwnableInvalidOwner(address(0))\"\n                        let _12 := /** @src 44:606:3453  \"contract MoodNft is ERC721, Ownable {...\" */ mload(64)\n                        /// @src 28:1322:1353  \"OwnableInvalidOwner(address(0))\"\n                        mstore(_12, shl(224, 0x1e4fbdf7))\n                        /// @src 44:606:3453  \"contract MoodNft is ERC721, Ownable {...\"\n                        mstore(/** @src 28:1322:1353  \"OwnableInvalidOwner(address(0))\" */ add(_12, 4), /** @src -1:-1:-1 */ _5)\n                        /// @src 28:1322:1353  \"OwnableInvalidOwner(address(0))\"\n                        revert(_12, /** @src 44:606:3453  \"contract MoodNft is ERC721, Ownable {...\" */ 36)\n                    }\n                    let _13 := sload(/** @src 28:3004:3010  \"_owner\" */ 0x06)\n                    /// @src 44:606:3453  \"contract MoodNft is ERC721, Ownable {...\"\n                    sstore(/** @src 28:3004:3010  \"_owner\" */ 0x06, /** @src 44:606:3453  \"contract MoodNft is ERC721, Ownable {...\" */ or(and(_13, not(sub(shl(160, 1), 1))), /** @src 44:1115:1125  \"msg.sender\" */ caller()))\n                    /// @src 28:3052:3092  \"OwnershipTransferred(oldOwner, newOwner)\"\n                    log3(/** @src -1:-1:-1 */ _5, _5, /** @src 28:3052:3092  \"OwnershipTransferred(oldOwner, newOwner)\" */ 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0, /** @src 44:606:3453  \"contract MoodNft is ERC721, Ownable {...\" */ and(_13, sub(shl(160, 1), 1)), /** @src 44:1115:1125  \"msg.sender\" */ caller())\n                    /// @src 44:606:3453  \"contract MoodNft is ERC721, Ownable {...\"\n                    sstore(/** @src 44:1137:1155  \"s_tokenCounter = 0\" */ 0x07, /** @src -1:-1:-1 */ _5)\n                    /// @src 44:606:3453  \"contract MoodNft is ERC721, Ownable {...\"\n                    let newLen_2 := mload(value0)\n                    if gt(newLen_2, _2)\n                    {\n                        mstore(/** @src -1:-1:-1 */ _5, /** @src 44:606:3453  \"contract MoodNft is ERC721, Ownable {...\" */ shl(224, 0x4e487b71))\n                        mstore(4, 0x41)\n                        revert(/** @src -1:-1:-1 */ _5, /** @src 44:606:3453  \"contract MoodNft is ERC721, Ownable {...\" */ 0x24)\n                    }\n                    let _14 := sload(_4)\n                    let length_2 := /** @src -1:-1:-1 */ _5\n                    /// @src 44:606:3453  \"contract MoodNft is ERC721, Ownable {...\"\n                    length_2 := shr(_7, _14)\n                    let outOfPlaceEncoding_2 := and(_14, _7)\n                    if iszero(outOfPlaceEncoding_2)\n                    {\n                        length_2 := and(length_2, 0x7f)\n                    }\n                    if eq(outOfPlaceEncoding_2, lt(length_2, _3))\n                    {\n                        mstore(/** @src -1:-1:-1 */ _5, /** @src 44:606:3453  \"contract MoodNft is ERC721, Ownable {...\" */ shl(224, 0x4e487b71))\n                        mstore(4, 0x22)\n                        revert(/** @src -1:-1:-1 */ _5, /** @src 44:606:3453  \"contract MoodNft is ERC721, Ownable {...\" */ 0x24)\n                    }\n                    if gt(length_2, _8)\n                    {\n                        mstore(/** @src -1:-1:-1 */ _5, /** @src 44:606:3453  \"contract MoodNft is ERC721, Ownable {...\" */ _4)\n                        let data_2 := keccak256(/** @src -1:-1:-1 */ _5, /** @src 44:606:3453  \"contract MoodNft is ERC721, Ownable {...\" */ _3)\n                        let deleteStart_2 := add(data_2, shr(5, add(newLen_2, _8)))\n                        if lt(newLen_2, _3) { deleteStart_2 := data_2 }\n                        let _15 := add(data_2, shr(5, add(length_2, _8)))\n                        let start_2 := deleteStart_2\n                        for { } lt(start_2, _15) { start_2 := add(start_2, _7) }\n                        {\n                            sstore(start_2, /** @src -1:-1:-1 */ _5)\n                        }\n                    }\n                    /// @src 44:606:3453  \"contract MoodNft is ERC721, Ownable {...\"\n                    let srcOffset_2 := /** @src -1:-1:-1 */ _5\n                    /// @src 44:606:3453  \"contract MoodNft is ERC721, Ownable {...\"\n                    srcOffset_2 := _3\n                    switch gt(newLen_2, _8)\n                    case 1 {\n                        let loopEnd_2 := and(newLen_2, not(31))\n                        mstore(/** @src -1:-1:-1 */ _5, /** @src 44:606:3453  \"contract MoodNft is ERC721, Ownable {...\" */ _4)\n                        let dstPtr_2 := keccak256(/** @src -1:-1:-1 */ _5, /** @src 44:606:3453  \"contract MoodNft is ERC721, Ownable {...\" */ _3)\n                        let i_2 := /** @src -1:-1:-1 */ _5\n                        /// @src 44:606:3453  \"contract MoodNft is ERC721, Ownable {...\"\n                        for { } lt(i_2, loopEnd_2) { i_2 := add(i_2, _3) }\n                        {\n                            sstore(dstPtr_2, mload(add(value0, srcOffset_2)))\n                            dstPtr_2 := add(dstPtr_2, _7)\n                            srcOffset_2 := add(srcOffset_2, _3)\n                        }\n                        if lt(loopEnd_2, newLen_2)\n                        {\n                            let lastValue_2 := mload(add(value0, srcOffset_2))\n                            sstore(dstPtr_2, and(lastValue_2, not(shr(and(shl(3, newLen_2), 248), not(0)))))\n                        }\n                        sstore(_4, add(shl(_7, newLen_2), _7))\n                    }\n                    default {\n                        let value_2 := /** @src -1:-1:-1 */ _5\n                        /// @src 44:606:3453  \"contract MoodNft is ERC721, Ownable {...\"\n                        if newLen_2\n                        {\n                            value_2 := mload(add(value0, srcOffset_2))\n                        }\n                        sstore(_4, or(and(value_2, not(shr(shl(3, newLen_2), not(0)))), shl(_7, newLen_2)))\n                    }\n                    let newLen_3 := mload(value1)\n                    if gt(newLen_3, _2)\n                    {\n                        mstore(/** @src -1:-1:-1 */ _5, /** @src 44:606:3453  \"contract MoodNft is ERC721, Ownable {...\" */ shl(224, 0x4e487b71))\n                        mstore(4, 0x41)\n                        revert(/** @src -1:-1:-1 */ _5, /** @src 44:606:3453  \"contract MoodNft is ERC721, Ownable {...\" */ 0x24)\n                    }\n                    let _16 := sload(/** @src 44:1198:1225  \"s_happySvgUri = happySvgUri\" */ 0x09)\n                    /// @src 44:606:3453  \"contract MoodNft is ERC721, Ownable {...\"\n                    let length_3 := /** @src -1:-1:-1 */ _5\n                    /// @src 44:606:3453  \"contract MoodNft is ERC721, Ownable {...\"\n                    length_3 := shr(_7, _16)\n                    let outOfPlaceEncoding_3 := and(_16, _7)\n                    if iszero(outOfPlaceEncoding_3)\n                    {\n                        length_3 := and(length_3, 0x7f)\n                    }\n                    if eq(outOfPlaceEncoding_3, lt(length_3, _3))\n                    {\n                        mstore(/** @src -1:-1:-1 */ _5, /** @src 44:606:3453  \"contract MoodNft is ERC721, Ownable {...\" */ shl(224, 0x4e487b71))\n                        mstore(4, 0x22)\n                        revert(/** @src -1:-1:-1 */ _5, /** @src 44:606:3453  \"contract MoodNft is ERC721, Ownable {...\" */ 0x24)\n                    }\n                    if gt(length_3, _8)\n                    {\n                        mstore(/** @src -1:-1:-1 */ _5, /** @src 44:1198:1225  \"s_happySvgUri = happySvgUri\" */ 0x09)\n                        /// @src 44:606:3453  \"contract MoodNft is ERC721, Ownable {...\"\n                        let data_3 := keccak256(/** @src -1:-1:-1 */ _5, /** @src 44:606:3453  \"contract MoodNft is ERC721, Ownable {...\" */ _3)\n                        let deleteStart_3 := add(data_3, shr(5, add(newLen_3, _8)))\n                        if lt(newLen_3, _3) { deleteStart_3 := data_3 }\n                        let _17 := add(data_3, shr(5, add(length_3, _8)))\n                        let start_3 := deleteStart_3\n                        for { } lt(start_3, _17) { start_3 := add(start_3, _7) }\n                        {\n                            sstore(start_3, /** @src -1:-1:-1 */ _5)\n                        }\n                    }\n                    /// @src 44:606:3453  \"contract MoodNft is ERC721, Ownable {...\"\n                    let srcOffset_3 := /** @src -1:-1:-1 */ _5\n                    /// @src 44:606:3453  \"contract MoodNft is ERC721, Ownable {...\"\n                    srcOffset_3 := _3\n                    switch gt(newLen_3, _8)\n                    case 1 {\n                        let loopEnd_3 := and(newLen_3, not(31))\n                        mstore(/** @src -1:-1:-1 */ _5, /** @src 44:1198:1225  \"s_happySvgUri = happySvgUri\" */ 0x09)\n                        /// @src 44:606:3453  \"contract MoodNft is ERC721, Ownable {...\"\n                        let dstPtr_3 := keccak256(/** @src -1:-1:-1 */ _5, /** @src 44:606:3453  \"contract MoodNft is ERC721, Ownable {...\" */ _3)\n                        let i_3 := /** @src -1:-1:-1 */ _5\n                        /// @src 44:606:3453  \"contract MoodNft is ERC721, Ownable {...\"\n                        for { } lt(i_3, loopEnd_3) { i_3 := add(i_3, _3) }\n                        {\n                            sstore(dstPtr_3, mload(add(value1, srcOffset_3)))\n                            dstPtr_3 := add(dstPtr_3, _7)\n                            srcOffset_3 := add(srcOffset_3, _3)\n                        }\n                        if lt(loopEnd_3, newLen_3)\n                        {\n                            let lastValue_3 := mload(add(value1, srcOffset_3))\n                            sstore(dstPtr_3, and(lastValue_3, not(shr(and(shl(3, newLen_3), 248), not(0)))))\n                        }\n                        sstore(/** @src 44:1198:1225  \"s_happySvgUri = happySvgUri\" */ 0x09, /** @src 44:606:3453  \"contract MoodNft is ERC721, Ownable {...\" */ add(shl(_7, newLen_3), _7))\n                    }\n                    default {\n                        let value_3 := /** @src -1:-1:-1 */ _5\n                        /// @src 44:606:3453  \"contract MoodNft is ERC721, Ownable {...\"\n                        if newLen_3\n                        {\n                            value_3 := mload(add(value1, srcOffset_3))\n                        }\n                        sstore(/** @src 44:1198:1225  \"s_happySvgUri = happySvgUri\" */ 0x09, /** @src 44:606:3453  \"contract MoodNft is ERC721, Ownable {...\" */ or(and(value_3, not(shr(shl(3, newLen_3), not(0)))), shl(_7, newLen_3)))\n                    }\n                    let _18 := mload(64)\n                    let _19 := datasize(\"MoodNft_51029_deployed\")\n                    codecopy(_18, dataoffset(\"MoodNft_51029_deployed\"), _19)\n                    return(_18, _19)\n                }\n                function allocate_memory_6113() -> memPtr\n                {\n                    memPtr := mload(64)\n                    let newFreePtr := add(memPtr, 64)\n                    if or(gt(newFreePtr, sub(shl(64, 1), 1)), lt(newFreePtr, memPtr))\n                    {\n                        mstore(0, shl(224, 0x4e487b71))\n                        mstore(4, 0x41)\n                        revert(0, 0x24)\n                    }\n                    mstore(64, newFreePtr)\n                }\n                function allocate_memory(size) -> memPtr\n                {\n                    memPtr := mload(64)\n                    let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n                    if or(gt(newFreePtr, sub(shl(64, 1), 1)), lt(newFreePtr, memPtr))\n                    {\n                        mstore(0, shl(224, 0x4e487b71))\n                        mstore(4, 0x41)\n                        revert(0, 0x24)\n                    }\n                    mstore(64, newFreePtr)\n                }\n                function abi_decode_string_fromMemory(offset, end) -> array\n                {\n                    if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n                    let _1 := mload(offset)\n                    if gt(_1, sub(shl(64, 1), 1))\n                    {\n                        mstore(/** @src -1:-1:-1 */ 0, /** @src 44:606:3453  \"contract MoodNft is ERC721, Ownable {...\" */ shl(224, 0x4e487b71))\n                        mstore(4, 0x41)\n                        revert(/** @src -1:-1:-1 */ 0, /** @src 44:606:3453  \"contract MoodNft is ERC721, Ownable {...\" */ 0x24)\n                    }\n                    let _2 := 0x20\n                    let array_1 := allocate_memory(add(and(add(_1, 0x1f), not(31)), _2))\n                    mstore(array_1, _1)\n                    if gt(add(add(offset, _1), _2), end)\n                    {\n                        revert(/** @src -1:-1:-1 */ 0, 0)\n                    }\n                    /// @src 44:606:3453  \"contract MoodNft is ERC721, Ownable {...\"\n                    let i := /** @src -1:-1:-1 */ 0\n                    /// @src 44:606:3453  \"contract MoodNft is ERC721, Ownable {...\"\n                    for { } lt(i, _1) { i := add(i, _2) }\n                    {\n                        mstore(add(add(array_1, i), _2), mload(add(add(offset, i), _2)))\n                    }\n                    mstore(add(add(array_1, _1), _2), /** @src -1:-1:-1 */ 0)\n                    /// @src 44:606:3453  \"contract MoodNft is ERC721, Ownable {...\"\n                    array := array_1\n                }\n            }\n            /// @use-src 28:\"lib/openzeppelin-contracts/contracts/access/Ownable.sol\", 30:\"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\", 34:\"lib/openzeppelin-contracts/contracts/utils/Base64.sol\", 35:\"lib/openzeppelin-contracts/contracts/utils/Context.sol\", 37:\"lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol\", 44:\"src/MoodNft.sol\"\n            object \"MoodNft_51029_deployed\" {\n                code {\n                    {\n                        /// @src 44:606:3453  \"contract MoodNft is ERC721, Ownable {...\"\n                        let _1 := memoryguard(0x80)\n                        let _2 := 64\n                        mstore(_2, _1)\n                        let _3 := 4\n                        if iszero(lt(calldatasize(), _3))\n                        {\n                            let _4 := 0\n                            switch shr(224, calldataload(_4))\n                            case 0x01ffc9a7 {\n                                if callvalue() { revert(_4, _4) }\n                                if slt(add(calldatasize(), not(3)), 32) { revert(_4, _4) }\n                                let value := calldataload(_3)\n                                let _5 := and(value, shl(224, 0xffffffff))\n                                if iszero(eq(value, _5)) { revert(_4, _4) }\n                                /// @src 30:1698:1802  \"interfaceId == type(IERC721).interfaceId ||...\"\n                                let expr := /** @src 30:1698:1738  \"interfaceId == type(IERC721).interfaceId\" */ eq(_5, /** @src 30:1713:1738  \"type(IERC721).interfaceId\" */ shl(224, 0x80ac58cd))\n                                /// @src 30:1698:1802  \"interfaceId == type(IERC721).interfaceId ||...\"\n                                if iszero(expr)\n                                {\n                                    expr := /** @src 30:1754:1802  \"interfaceId == type(IERC721Metadata).interfaceId\" */ eq(_5, /** @src 30:1769:1802  \"type(IERC721Metadata).interfaceId\" */ shl(224, 0x5b5e139f))\n                                }\n                                /// @src 30:1698:1854  \"interfaceId == type(IERC721).interfaceId ||...\"\n                                let expr_1 := expr\n                                if iszero(expr)\n                                {\n                                    expr_1 := /** @src 37:861:901  \"interfaceId == type(IERC165).interfaceId\" */ eq(_5, /** @src 37:876:901  \"type(IERC165).interfaceId\" */ shl(224, 0x01ffc9a7))\n                                }\n                                /// @src 44:606:3453  \"contract MoodNft is ERC721, Ownable {...\"\n                                mstore(_1, iszero(iszero(expr_1)))\n                                return(_1, 32)\n                            }\n                            case 0x06fdde03 {\n                                if callvalue() { revert(_4, _4) }\n                                if slt(add(calldatasize(), not(3)), _4) { revert(_4, _4) }\n                                let converted := copy_array_from_storage_to_memory_string()\n                                let memPos := mload(_2)\n                                mstore(memPos, 32)\n                                return(memPos, sub(abi_encode_string(converted, add(memPos, 32)), memPos))\n                            }\n                            case 0x081812fc {\n                                if callvalue() { revert(_4, _4) }\n                                if slt(add(calldatasize(), not(3)), 32) { revert(_4, _4) }\n                                let ret := fun_getApproved(calldataload(_3))\n                                let memPos_1 := mload(_2)\n                                mstore(memPos_1, and(ret, sub(shl(160, 1), 1)))\n                                return(memPos_1, 32)\n                            }\n                            case 0x095ea7b3 {\n                                if callvalue() { revert(_4, _4) }\n                                if slt(add(calldatasize(), not(3)), _2) { revert(_4, _4) }\n                                let value0 := abi_decode_address_8199()\n                                let value_1 := calldataload(36)\n                                /// @src 30:14943:14965  \"_requireOwned(tokenId)\"\n                                let expr_2 := fun_requireOwned(value_1)\n                                /// @src 30:15093:15128  \"auth != address(0) && owner != auth\"\n                                let expr_3 := /** @src 30:15093:15111  \"auth != address(0)\" */ iszero(iszero(/** @src 35:735:745  \"msg.sender\" */ caller()))\n                                /// @src 30:15093:15128  \"auth != address(0) && owner != auth\"\n                                if expr_3\n                                {\n                                    expr_3 := /** @src 30:15115:15128  \"owner != auth\" */ iszero(eq(/** @src 44:606:3453  \"contract MoodNft is ERC721, Ownable {...\" */ and(/** @src 30:15115:15128  \"owner != auth\" */ expr_2, /** @src 44:606:3453  \"contract MoodNft is ERC721, Ownable {...\" */ sub(shl(160, 1), 1)), /** @src 35:735:745  \"msg.sender\" */ caller()))\n                                }\n                                /// @src 30:15093:15162  \"auth != address(0) && owner != auth && !isApprovedForAll(owner, auth)\"\n                                let expr_4 := expr_3\n                                if expr_3\n                                {\n                                    /// @src 44:606:3453  \"contract MoodNft is ERC721, Ownable {...\"\n                                    mstore(_4, and(expr_2, sub(shl(160, 1), 1)))\n                                    mstore(0x20, /** @src 30:4039:4057  \"_operatorApprovals\" */ 0x05)\n                                    /// @src 44:606:3453  \"contract MoodNft is ERC721, Ownable {...\"\n                                    let _6 := keccak256(_4, _2)\n                                    mstore(_4, /** @src 35:735:745  \"msg.sender\" */ caller())\n                                    /// @src 44:606:3453  \"contract MoodNft is ERC721, Ownable {...\"\n                                    mstore(0x20, _6)\n                                    /// @src 30:15093:15162  \"auth != address(0) && owner != auth && !isApprovedForAll(owner, auth)\"\n                                    expr_4 := /** @src 30:15132:15162  \"!isApprovedForAll(owner, auth)\" */ iszero(/** @src 44:606:3453  \"contract MoodNft is ERC721, Ownable {...\" */ and(sload(keccak256(_4, _2)), 0xff))\n                                }\n                                /// @src 30:15089:15231  \"if (auth != address(0) && owner != auth && !isApprovedForAll(owner, auth)) {...\"\n                                if expr_4\n                                {\n                                    /// @src 30:15189:15216  \"ERC721InvalidApprover(auth)\"\n                                    let _7 := /** @src 44:606:3453  \"contract MoodNft is ERC721, Ownable {...\" */ mload(_2)\n                                    /// @src 30:15189:15216  \"ERC721InvalidApprover(auth)\"\n                                    mstore(_7, shl(224, 0xa9fbf51f))\n                                    /// @src 44:606:3453  \"contract MoodNft is ERC721, Ownable {...\"\n                                    mstore(/** @src 30:15189:15216  \"ERC721InvalidApprover(auth)\" */ add(_7, /** @src 44:606:3453  \"contract MoodNft is ERC721, Ownable {...\" */ _3), /** @src 35:735:745  \"msg.sender\" */ caller())\n                                    /// @src 30:15189:15216  \"ERC721InvalidApprover(auth)\"\n                                    revert(_7, /** @src 44:606:3453  \"contract MoodNft is ERC721, Ownable {...\" */ 36)\n                                }\n                                let _8 := sub(shl(160, 1), 1)\n                                let _9 := and(/** @src 30:15283:15311  \"Approval(owner, to, tokenId)\" */ value0, /** @src 44:606:3453  \"contract MoodNft is ERC721, Ownable {...\" */ _8)\n                                /// @src 30:15283:15311  \"Approval(owner, to, tokenId)\"\n                                log4(/** @src 44:606:3453  \"contract MoodNft is ERC721, Ownable {...\" */ _4, _4, /** @src 30:15283:15311  \"Approval(owner, to, tokenId)\" */ 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925, /** @src 44:606:3453  \"contract MoodNft is ERC721, Ownable {...\" */ and(/** @src 30:15283:15311  \"Approval(owner, to, tokenId)\" */ expr_2, /** @src 44:606:3453  \"contract MoodNft is ERC721, Ownable {...\" */ _8), _9, /** @src 30:15283:15311  \"Approval(owner, to, tokenId)\" */ value_1)\n                                /// @src 44:606:3453  \"contract MoodNft is ERC721, Ownable {...\"\n                                mstore(_4, value_1)\n                                mstore(0x20, _3)\n                                let _10 := keccak256(_4, _2)\n                                sstore(_10, or(and(sload(_10), shl(160, 0xffffffffffffffffffffffff)), _9))\n                                return(_4, _4)\n                            }\n                            case 0x23b872dd {\n                                if callvalue() { revert(_4, _4) }\n                                let param, param_1, param_2 := abi_decode_addresst_addresst_uint256(calldatasize())\n                                fun_transferFrom(param, param_1, param_2)\n                                return(_4, _4)\n                            }\n                            case 0x42842e0e {\n                                if callvalue() { revert(_4, _4) }\n                                let param_3, param_4, param_5 := abi_decode_addresst_addresst_uint256(calldatasize())\n                                let memPtr := mload(_2)\n                                finalize_allocation_18857(memPtr)\n                                mstore(memPtr, _4)\n                                /// @src 30:5121:5128  \"tokenId\"\n                                fun_transferFrom(param_3, param_4, param_5)\n                                /// @src 30:5181:5185  \"data\"\n                                fun_checkOnERC721Received(param_3, param_4, param_5, memPtr)\n                                /// @src 44:606:3453  \"contract MoodNft is ERC721, Ownable {...\"\n                                return(_4, _4)\n                            }\n                            case 0x5de0682f {\n                                if callvalue() { revert(_4, _4) }\n                                if slt(add(calldatasize(), not(3)), _4) { revert(_4, _4) }\n                                let converted_1 := copy_array_from_storage_to_memory_string_8204()\n                                let memPos_2 := mload(_2)\n                                mstore(memPos_2, 32)\n                                return(memPos_2, sub(abi_encode_string(converted_1, add(memPos_2, 32)), memPos_2))\n                            }\n                            case 0x6352211e {\n                                if callvalue() { revert(_4, _4) }\n                                if slt(add(calldatasize(), not(3)), 32) { revert(_4, _4) }\n                                /// @src 30:2267:2296  \"return _requireOwned(tokenId)\"\n                                let var := /** @src 30:2274:2296  \"_requireOwned(tokenId)\" */ fun_requireOwned(/** @src 44:606:3453  \"contract MoodNft is ERC721, Ownable {...\" */ calldataload(_3))\n                                let memPos_3 := mload(_2)\n                                mstore(memPos_3, and(var, sub(shl(160, 1), 1)))\n                                return(memPos_3, 32)\n                            }\n                            case 0x6e02007d {\n                                if callvalue() { revert(_4, _4) }\n                                if slt(add(calldatasize(), not(3)), _4) { revert(_4, _4) }\n                                let _11 := sload(/** @src 44:3430:3444  \"s_tokenCounter\" */ 0x07)\n                                /// @src 44:606:3453  \"contract MoodNft is ERC721, Ownable {...\"\n                                let memPos_4 := mload(_2)\n                                mstore(memPos_4, _11)\n                                return(memPos_4, 32)\n                            }\n                            case 0x70a08231 {\n                                if callvalue() { revert(_4, _4) }\n                                if slt(add(calldatasize(), not(3)), 32) { revert(_4, _4) }\n                                let _12 := and(abi_decode_address_8199(), sub(shl(160, 1), 1))\n                                /// @src 30:2002:2089  \"if (owner == address(0)) {...\"\n                                if /** @src 30:2006:2025  \"owner == address(0)\" */ iszero(/** @src 44:606:3453  \"contract MoodNft is ERC721, Ownable {...\" */ _12)\n                                /// @src 30:2002:2089  \"if (owner == address(0)) {...\"\n                                {\n                                    /// @src 30:2048:2078  \"ERC721InvalidOwner(address(0))\"\n                                    let _13 := /** @src 44:606:3453  \"contract MoodNft is ERC721, Ownable {...\" */ mload(_2)\n                                    /// @src 30:2048:2078  \"ERC721InvalidOwner(address(0))\"\n                                    mstore(_13, shl(226, 0x22718ad9))\n                                    /// @src 44:606:3453  \"contract MoodNft is ERC721, Ownable {...\"\n                                    mstore(/** @src 30:2048:2078  \"ERC721InvalidOwner(address(0))\" */ add(_13, /** @src 44:606:3453  \"contract MoodNft is ERC721, Ownable {...\" */ _3), _4)\n                                    /// @src 30:2048:2078  \"ERC721InvalidOwner(address(0))\"\n                                    revert(_13, /** @src 44:606:3453  \"contract MoodNft is ERC721, Ownable {...\" */ 36)\n                                }\n                                mstore(_4, _12)\n                                mstore(32, /** @src 30:2105:2114  \"_balances\" */ 0x03)\n                                /// @src 44:606:3453  \"contract MoodNft is ERC721, Ownable {...\"\n                                let _14 := sload(keccak256(_4, _2))\n                                let memPos_5 := mload(_2)\n                                mstore(memPos_5, _14)\n                                return(memPos_5, 32)\n                            }\n                            case 0x715018a6 {\n                                if callvalue() { revert(_4, _4) }\n                                if slt(add(calldatasize(), not(3)), _4) { revert(_4, _4) }\n                                /// @src 28:1500:1562  \"modifier onlyOwner() {...\"\n                                fun_checkOwner()\n                                /// @src 44:606:3453  \"contract MoodNft is ERC721, Ownable {...\"\n                                let _15 := sload(/** @src 28:3004:3010  \"_owner\" */ 0x06)\n                                /// @src 44:606:3453  \"contract MoodNft is ERC721, Ownable {...\"\n                                sstore(/** @src 28:3004:3010  \"_owner\" */ 0x06, /** @src 44:606:3453  \"contract MoodNft is ERC721, Ownable {...\" */ and(_15, shl(160, 0xffffffffffffffffffffffff)))\n                                /// @src 28:3052:3092  \"OwnershipTransferred(oldOwner, newOwner)\"\n                                log3(/** @src 44:606:3453  \"contract MoodNft is ERC721, Ownable {...\" */ _4, _4, /** @src 28:3052:3092  \"OwnershipTransferred(oldOwner, newOwner)\" */ 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0, /** @src 44:606:3453  \"contract MoodNft is ERC721, Ownable {...\" */ and(_15, sub(shl(160, 1), 1)), _4)\n                                return(_4, _4)\n                            }\n                            case 0x8da5cb5b {\n                                if callvalue() { revert(_4, _4) }\n                                if slt(add(calldatasize(), not(3)), _4) { revert(_4, _4) }\n                                let cleaned := and(sload(/** @src 28:1710:1716  \"_owner\" */ 0x06), /** @src 44:606:3453  \"contract MoodNft is ERC721, Ownable {...\" */ sub(shl(160, 1), 1))\n                                let memPos_6 := mload(_2)\n                                mstore(memPos_6, cleaned)\n                                return(memPos_6, 32)\n                            }\n                            case 0x95d89b41 {\n                                if callvalue() { revert(_4, _4) }\n                                if slt(add(calldatasize(), not(3)), _4) { revert(_4, _4) }\n                                let memPtr_1 := mload(_2)\n                                let ret_1 := _4\n                                /// @src 30:2597:2604  \"_symbol\"\n                                let _16 := 0x01\n                                /// @src 44:606:3453  \"contract MoodNft is ERC721, Ownable {...\"\n                                let slotValue := sload(/** @src 30:2597:2604  \"_symbol\" */ _16)\n                                /// @src 44:606:3453  \"contract MoodNft is ERC721, Ownable {...\"\n                                let length := _4\n                                length := shr(/** @src 30:2597:2604  \"_symbol\" */ _16, /** @src 44:606:3453  \"contract MoodNft is ERC721, Ownable {...\" */ slotValue)\n                                let outOfPlaceEncoding := and(slotValue, /** @src 30:2597:2604  \"_symbol\" */ _16)\n                                /// @src 44:606:3453  \"contract MoodNft is ERC721, Ownable {...\"\n                                if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n                                let _17 := 32\n                                if eq(outOfPlaceEncoding, lt(length, _17))\n                                {\n                                    mstore(_4, shl(224, 0x4e487b71))\n                                    mstore(_3, 0x22)\n                                    revert(_4, 0x24)\n                                }\n                                mstore(memPtr_1, length)\n                                switch outOfPlaceEncoding\n                                case 0 {\n                                    mstore(add(memPtr_1, _17), and(slotValue, not(255)))\n                                    ret_1 := add(add(memPtr_1, shl(5, iszero(iszero(length)))), _17)\n                                }\n                                case 1 {\n                                    mstore(_4, /** @src 30:2597:2604  \"_symbol\" */ _16)\n                                    /// @src 44:606:3453  \"contract MoodNft is ERC721, Ownable {...\"\n                                    let dataPos := 80084422859880547211683076133703299733277748156566366325829078699459944778998\n                                    let i := _4\n                                    for { } lt(i, length) { i := add(i, _17) }\n                                    {\n                                        mstore(add(add(memPtr_1, i), _17), sload(dataPos))\n                                        dataPos := add(dataPos, /** @src 30:2597:2604  \"_symbol\" */ _16)\n                                    }\n                                    /// @src 44:606:3453  \"contract MoodNft is ERC721, Ownable {...\"\n                                    ret_1 := add(add(memPtr_1, i), _17)\n                                }\n                                finalize_allocation(memPtr_1, sub(ret_1, memPtr_1))\n                                let memPos_7 := mload(_2)\n                                mstore(memPos_7, _17)\n                                return(memPos_7, sub(abi_encode_string(memPtr_1, add(memPos_7, _17)), memPos_7))\n                            }\n                            case 0xa22cb465 {\n                                if callvalue() { revert(_4, _4) }\n                                if slt(add(calldatasize(), not(3)), _2) { revert(_4, _4) }\n                                let value0_1 := abi_decode_address_8199()\n                                let value_2 := calldataload(36)\n                                let _18 := iszero(iszero(value_2))\n                                if iszero(eq(value_2, _18)) { revert(_4, _4) }\n                                let _19 := and(/** @src 30:15698:15720  \"operator == address(0)\" */ value0_1, /** @src 44:606:3453  \"contract MoodNft is ERC721, Ownable {...\" */ sub(shl(160, 1), 1))\n                                /// @src 30:15694:15785  \"if (operator == address(0)) {...\"\n                                if /** @src 30:15698:15720  \"operator == address(0)\" */ iszero(/** @src 44:606:3453  \"contract MoodNft is ERC721, Ownable {...\" */ _19)\n                                /// @src 30:15694:15785  \"if (operator == address(0)) {...\"\n                                {\n                                    /// @src 30:15743:15774  \"ERC721InvalidOperator(operator)\"\n                                    let _20 := /** @src 44:606:3453  \"contract MoodNft is ERC721, Ownable {...\" */ mload(_2)\n                                    /// @src 30:15743:15774  \"ERC721InvalidOperator(operator)\"\n                                    mstore(_20, shl(227, 0x0b611743))\n                                    /// @src 44:606:3453  \"contract MoodNft is ERC721, Ownable {...\"\n                                    mstore(/** @src 30:15743:15774  \"ERC721InvalidOperator(operator)\" */ add(_20, /** @src 44:606:3453  \"contract MoodNft is ERC721, Ownable {...\" */ _3), _19)\n                                    /// @src 30:15743:15774  \"ERC721InvalidOperator(operator)\"\n                                    revert(_20, /** @src 44:606:3453  \"contract MoodNft is ERC721, Ownable {...\" */ 36)\n                                }\n                                mstore(_4, /** @src 35:735:745  \"msg.sender\" */ caller())\n                                /// @src 44:606:3453  \"contract MoodNft is ERC721, Ownable {...\"\n                                mstore(32, /** @src 30:15794:15812  \"_operatorApprovals\" */ 0x05)\n                                /// @src 44:606:3453  \"contract MoodNft is ERC721, Ownable {...\"\n                                let _21 := keccak256(_4, _2)\n                                mstore(_4, _19)\n                                mstore(32, _21)\n                                let dataSlot := keccak256(_4, _2)\n                                let value_3 := and(sload(dataSlot), not(255))\n                                sstore(dataSlot, or(value_3, and(_18, 255)))\n                                /// @src 30:15855:15896  \"ApprovalForAll(owner, operator, approved)\"\n                                let _22 := /** @src 44:606:3453  \"contract MoodNft is ERC721, Ownable {...\" */ mload(_2)\n                                mstore(_22, _18)\n                                /// @src 30:15855:15896  \"ApprovalForAll(owner, operator, approved)\"\n                                log3(_22, /** @src 44:606:3453  \"contract MoodNft is ERC721, Ownable {...\" */ 32, /** @src 30:15855:15896  \"ApprovalForAll(owner, operator, approved)\" */ 0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31, /** @src 35:735:745  \"msg.sender\" */ caller(), /** @src 30:15855:15896  \"ApprovalForAll(owner, operator, approved)\" */ _19)\n                                /// @src 44:606:3453  \"contract MoodNft is ERC721, Ownable {...\"\n                                return(_4, _4)\n                            }\n                            case 0xb88d4fde {\n                                if callvalue() { revert(_4, _4) }\n                                if slt(add(calldatasize(), not(3)), 128) { revert(_4, _4) }\n                                let value0_2 := abi_decode_address_8199()\n                                let value1 := abi_decode_address()\n                                let value_4 := calldataload(68)\n                                let offset := calldataload(100)\n                                if gt(offset, 0xffffffffffffffff) { revert(_4, _4) }\n                                if iszero(slt(add(offset, 35), calldatasize())) { revert(_4, _4) }\n                                let _23 := calldataload(add(_3, offset))\n                                let _24 := array_allocation_size_bytes(_23)\n                                let memPtr_2 := mload(_2)\n                                finalize_allocation(memPtr_2, _24)\n                                mstore(memPtr_2, _23)\n                                if gt(add(add(offset, _23), 36), calldatasize()) { revert(_4, _4) }\n                                calldatacopy(add(memPtr_2, 32), add(offset, 36), _23)\n                                mstore(add(add(memPtr_2, _23), 32), _4)\n                                /// @src 30:5121:5128  \"tokenId\"\n                                fun_transferFrom(value0_2, value1, value_4)\n                                /// @src 30:5181:5185  \"data\"\n                                fun_checkOnERC721Received(value0_2, value1, value_4, memPtr_2)\n                                /// @src 44:606:3453  \"contract MoodNft is ERC721, Ownable {...\"\n                                return(_4, _4)\n                            }\n                            case 0xc1a147a0 {\n                                if callvalue() { revert(_4, _4) }\n                                if slt(add(calldatasize(), not(3)), 32) { revert(_4, _4) }\n                                let value_5 := calldataload(_3)\n                                /// @src 44:1564:1584  \"getApproved(tokenId)\"\n                                let expr_5 := fun_getApproved(value_5)\n                                /// @src 44:606:3453  \"contract MoodNft is ERC721, Ownable {...\"\n                                let _25 := sub(shl(160, 1), 1)\n                                /// @src 44:1564:1632  \"getApproved(tokenId) != msg.sender && ownerOf(tokenId) != msg.sender\"\n                                let expr_6 := /** @src 44:1564:1598  \"getApproved(tokenId) != msg.sender\" */ iszero(eq(/** @src 44:606:3453  \"contract MoodNft is ERC721, Ownable {...\" */ and(/** @src 44:1564:1598  \"getApproved(tokenId) != msg.sender\" */ expr_5, /** @src 44:606:3453  \"contract MoodNft is ERC721, Ownable {...\" */ _25), /** @src 44:1588:1598  \"msg.sender\" */ caller()))\n                                /// @src 44:1564:1632  \"getApproved(tokenId) != msg.sender && ownerOf(tokenId) != msg.sender\"\n                                if expr_6\n                                {\n                                    expr_6 := /** @src 44:1602:1632  \"ownerOf(tokenId) != msg.sender\" */ iszero(eq(/** @src 44:606:3453  \"contract MoodNft is ERC721, Ownable {...\" */ and(/** @src 30:2274:2296  \"_requireOwned(tokenId)\" */ fun_requireOwned(/** @src 44:1602:1618  \"ownerOf(tokenId)\" */ value_5), /** @src 44:606:3453  \"contract MoodNft is ERC721, Ownable {...\" */ _25), /** @src 44:1588:1598  \"msg.sender\" */ caller()))\n                                }\n                                /// @src 44:1560:1699  \"if (getApproved(tokenId) != msg.sender && ownerOf(tokenId) != msg.sender) {...\"\n                                if expr_6\n                                {\n                                    /// @src 44:1655:1688  \"MoodNft__CantFlipMoodIfNotOwner()\"\n                                    let _26 := /** @src 44:606:3453  \"contract MoodNft is ERC721, Ownable {...\" */ mload(_2)\n                                    /// @src 44:1655:1688  \"MoodNft__CantFlipMoodIfNotOwner()\"\n                                    mstore(_26, shl(224, 0x85046ca7))\n                                    revert(_26, /** @src 44:606:3453  \"contract MoodNft is ERC721, Ownable {...\" */ _3)\n                                }\n                                mstore(_4, value_5)\n                                mstore(32, /** @src 44:1713:1729  \"s_tokenIdToState\" */ 0x0a)\n                                /// @src 44:606:3453  \"contract MoodNft is ERC721, Ownable {...\"\n                                let value_6 := and(sload(keccak256(_4, _2)), 0xff)\n                                if iszero(lt(value_6, 2))\n                                {\n                                    mstore(_4, shl(224, 0x4e487b71))\n                                    mstore(_3, 0x21)\n                                    revert(_4, 0x24)\n                                }\n                                /// @src 44:1709:1896  \"if (s_tokenIdToState[tokenId] == NFTState.HAPPY) {...\"\n                                switch /** @src 44:1713:1756  \"s_tokenIdToState[tokenId] == NFTState.HAPPY\" */ iszero(value_6)\n                                case /** @src 44:1709:1896  \"if (s_tokenIdToState[tokenId] == NFTState.HAPPY) {...\" */ 0 {\n                                    /// @src 44:606:3453  \"contract MoodNft is ERC721, Ownable {...\"\n                                    mstore(_4, value_5)\n                                    mstore(32, /** @src 44:1713:1729  \"s_tokenIdToState\" */ 0x0a)\n                                    /// @src 44:606:3453  \"contract MoodNft is ERC721, Ownable {...\"\n                                    let _27 := keccak256(_4, _2)\n                                    sstore(_27, and(sload(_27), not(255)))\n                                }\n                                default /// @src 44:1709:1896  \"if (s_tokenIdToState[tokenId] == NFTState.HAPPY) {...\"\n                                {\n                                    /// @src 44:606:3453  \"contract MoodNft is ERC721, Ownable {...\"\n                                    mstore(_4, value_5)\n                                    mstore(32, /** @src 44:1713:1729  \"s_tokenIdToState\" */ 0x0a)\n                                    /// @src 44:606:3453  \"contract MoodNft is ERC721, Ownable {...\"\n                                    let _28 := keccak256(_4, _2)\n                                    sstore(_28, or(and(sload(_28), not(255)), /** @src 44:1800:1812  \"NFTState.SAD\" */ 1))\n                                }\n                                /// @src 44:606:3453  \"contract MoodNft is ERC721, Ownable {...\"\n                                return(_4, _4)\n                            }\n                            case 0xc2229fea {\n                                if callvalue() { revert(_4, _4) }\n                                if slt(add(calldatasize(), not(3)), _4) { revert(_4, _4) }\n                                let _29 := sload(/** @src 44:1352:1366  \"s_tokenCounter\" */ 0x07)\n                                /// @src 44:606:3453  \"contract MoodNft is ERC721, Ownable {...\"\n                                let memPtr_3 := mload(_2)\n                                finalize_allocation_18857(memPtr_3)\n                                mstore(memPtr_3, _4)\n                                /// @src 30:10018:10105  \"if (to == address(0)) {...\"\n                                if /** @src 30:10022:10038  \"to == address(0)\" */ iszero(/** @src 44:1386:1396  \"msg.sender\" */ caller())\n                                /// @src 30:10018:10105  \"if (to == address(0)) {...\"\n                                {\n                                    /// @src 30:10061:10094  \"ERC721InvalidReceiver(address(0))\"\n                                    let _30 := /** @src 44:606:3453  \"contract MoodNft is ERC721, Ownable {...\" */ mload(_2)\n                                    /// @src 30:10061:10094  \"ERC721InvalidReceiver(address(0))\"\n                                    mstore(_30, shl(225, 0x32505749))\n                                    /// @src 44:606:3453  \"contract MoodNft is ERC721, Ownable {...\"\n                                    mstore(/** @src 30:10061:10094  \"ERC721InvalidReceiver(address(0))\" */ add(_30, /** @src 44:606:3453  \"contract MoodNft is ERC721, Ownable {...\" */ _3), _4)\n                                    /// @src 30:10061:10094  \"ERC721InvalidReceiver(address(0))\"\n                                    revert(_30, /** @src 44:606:3453  \"contract MoodNft is ERC721, Ownable {...\" */ 36)\n                                }\n                                mstore(_4, _29)\n                                let _31 := 0x20\n                                mstore(_31, /** @src 30:5799:5806  \"_owners\" */ 0x02)\n                                /// @src 44:606:3453  \"contract MoodNft is ERC721, Ownable {...\"\n                                let cleaned_1 := and(sload(keccak256(_4, _2)), sub(shl(160, 1), 1))\n                                /// @src 30:9161:9179  \"from != address(0)\"\n                                let _32 := iszero(iszero(/** @src 44:606:3453  \"contract MoodNft is ERC721, Ownable {...\" */ cleaned_1))\n                                /// @src 30:9157:9413  \"if (from != address(0)) {...\"\n                                if /** @src 30:9161:9179  \"from != address(0)\" */ _32\n                                /// @src 30:9157:9413  \"if (from != address(0)) {...\"\n                                {\n                                    /// @src 30:9319:9324  \"false\"\n                                    fun_approve(_29)\n                                    /// @src 44:606:3453  \"contract MoodNft is ERC721, Ownable {...\"\n                                    mstore(_4, cleaned_1)\n                                    mstore(_31, /** @src 30:9368:9377  \"_balances\" */ 0x03)\n                                    /// @src 44:606:3453  \"contract MoodNft is ERC721, Ownable {...\"\n                                    let dataSlot_1 := keccak256(_4, _2)\n                                    sstore(dataSlot_1, add(sload(/** @src 30:9368:9388  \"_balances[from] -= 1\" */ dataSlot_1), /** @src 44:606:3453  \"contract MoodNft is ERC721, Ownable {...\" */ not(0)))\n                                }\n                                mstore(_4, /** @src 44:1386:1396  \"msg.sender\" */ caller())\n                                /// @src 44:606:3453  \"contract MoodNft is ERC721, Ownable {...\"\n                                mstore(_31, /** @src 30:9487:9496  \"_balances\" */ 0x03)\n                                /// @src 44:606:3453  \"contract MoodNft is ERC721, Ownable {...\"\n                                let dataSlot_2 := keccak256(_4, _2)\n                                sstore(dataSlot_2, add(sload(/** @src 30:9487:9505  \"_balances[to] += 1\" */ dataSlot_2), /** @src 30:9427:9443  \"to != address(0)\" */ 1))\n                                /// @src 44:606:3453  \"contract MoodNft is ERC721, Ownable {...\"\n                                mstore(_4, _29)\n                                mstore(_31, /** @src 30:5799:5806  \"_owners\" */ 0x02)\n                                /// @src 44:606:3453  \"contract MoodNft is ERC721, Ownable {...\"\n                                let _33 := keccak256(_4, _2)\n                                sstore(_33, or(and(sload(_33), shl(160, 0xffffffffffffffffffffffff)), /** @src 44:1386:1396  \"msg.sender\" */ caller()))\n                                /// @src 30:9577:9604  \"Transfer(from, to, tokenId)\"\n                                log4(/** @src 44:606:3453  \"contract MoodNft is ERC721, Ownable {...\" */ _4, _4, /** @src 30:9577:9604  \"Transfer(from, to, tokenId)\" */ 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef, cleaned_1, /** @src 44:1386:1396  \"msg.sender\" */ caller(), /** @src 30:9577:9604  \"Transfer(from, to, tokenId)\" */ _29)\n                                /// @src 30:10180:10276  \"if (previousOwner != address(0)) {...\"\n                                if /** @src 30:10184:10211  \"previousOwner != address(0)\" */ _32\n                                /// @src 30:10180:10276  \"if (previousOwner != address(0)) {...\"\n                                {\n                                    /// @src 30:10234:10265  \"ERC721InvalidSender(address(0))\"\n                                    let _34 := /** @src 44:606:3453  \"contract MoodNft is ERC721, Ownable {...\" */ mload(_2)\n                                    /// @src 30:10234:10265  \"ERC721InvalidSender(address(0))\"\n                                    mstore(_34, shl(225, 0x39e35637))\n                                    /// @src 44:606:3453  \"contract MoodNft is ERC721, Ownable {...\"\n                                    mstore(/** @src 30:10234:10265  \"ERC721InvalidSender(address(0))\" */ add(_34, /** @src 44:606:3453  \"contract MoodNft is ERC721, Ownable {...\" */ _3), _4)\n                                    /// @src 30:10234:10265  \"ERC721InvalidSender(address(0))\"\n                                    revert(_34, /** @src 44:606:3453  \"contract MoodNft is ERC721, Ownable {...\" */ 36)\n                                }\n                                /// @src 30:17030:17694  \"if (to.code.length > 0) {...\"\n                                if /** @src 30:17034:17052  \"to.code.length > 0\" */ iszero(iszero(/** @src 30:17034:17048  \"to.code.length\" */ extcodesize(/** @src 44:1386:1396  \"msg.sender\" */ caller())))\n                                /// @src 30:17030:17694  \"if (to.code.length > 0) {...\"\n                                {\n                                    /// @src 30:17072:17143  \"IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data)\"\n                                    let _35 := /** @src 44:606:3453  \"contract MoodNft is ERC721, Ownable {...\" */ mload(_2)\n                                    let _36 := shl(225, 0x0a85bd01)\n                                    /// @src 30:17072:17143  \"IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data)\"\n                                    mstore(_35, /** @src 44:606:3453  \"contract MoodNft is ERC721, Ownable {...\" */ _36)\n                                    mstore(/** @src 30:17072:17143  \"IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data)\" */ add(_35, /** @src 44:606:3453  \"contract MoodNft is ERC721, Ownable {...\" */ _3), /** @src 44:1386:1396  \"msg.sender\" */ caller())\n                                    /// @src 44:606:3453  \"contract MoodNft is ERC721, Ownable {...\"\n                                    mstore(add(/** @src 30:17072:17143  \"IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data)\" */ _35, /** @src 44:606:3453  \"contract MoodNft is ERC721, Ownable {...\" */ 36), _4)\n                                    mstore(add(/** @src 30:17072:17143  \"IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data)\" */ _35, /** @src 44:606:3453  \"contract MoodNft is ERC721, Ownable {...\" */ 68), _29)\n                                    mstore(add(/** @src 30:17072:17143  \"IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data)\" */ _35, /** @src 44:606:3453  \"contract MoodNft is ERC721, Ownable {...\" */ 100), 128)\n                                    /// @src 30:17072:17143  \"IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data)\"\n                                    let trySuccessCondition := call(gas(), /** @src 44:1386:1396  \"msg.sender\" */ caller(), /** @src 44:606:3453  \"contract MoodNft is ERC721, Ownable {...\" */ _4, /** @src 30:17072:17143  \"IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data)\" */ _35, sub(/** @src 44:606:3453  \"contract MoodNft is ERC721, Ownable {...\" */ abi_encode_string(memPtr_3, add(/** @src 30:17072:17143  \"IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data)\" */ _35, /** @src 44:606:3453  \"contract MoodNft is ERC721, Ownable {...\" */ 132)), /** @src 30:17072:17143  \"IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data)\" */ _35), _35, /** @src 44:606:3453  \"contract MoodNft is ERC721, Ownable {...\" */ _31)\n                                    /// @src 30:17072:17143  \"IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data)\"\n                                    let expr_7 := /** @src 44:606:3453  \"contract MoodNft is ERC721, Ownable {...\" */ _4\n                                    /// @src 30:17072:17143  \"IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data)\"\n                                    if trySuccessCondition\n                                    {\n                                        let _37 := /** @src 44:606:3453  \"contract MoodNft is ERC721, Ownable {...\" */ _31\n                                        /// @src 30:17072:17143  \"IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data)\"\n                                        if gt(/** @src 44:606:3453  \"contract MoodNft is ERC721, Ownable {...\" */ _31, /** @src 30:17072:17143  \"IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data)\" */ returndatasize()) { _37 := returndatasize() }\n                                        finalize_allocation(_35, _37)\n                                        /// @src 44:606:3453  \"contract MoodNft is ERC721, Ownable {...\"\n                                        if slt(sub(/** @src 30:17072:17143  \"IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data)\" */ add(_35, _37), /** @src 44:606:3453  \"contract MoodNft is ERC721, Ownable {...\" */ _35), _31) { revert(_4, _4) }\n                                        let value_7 := mload(_35)\n                                        if iszero(eq(value_7, and(value_7, shl(224, 0xffffffff)))) { revert(_4, _4) }\n                                        /// @src 30:17072:17143  \"IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data)\"\n                                        expr_7 := value_7\n                                    }\n                                    /// @src 30:17068:17684  \"try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {...\"\n                                    switch iszero(trySuccessCondition)\n                                    case 0 {\n                                        /// @src 30:17186:17316  \"if (retval != IERC721Receiver.onERC721Received.selector) {...\"\n                                        if /** @src 30:17190:17241  \"retval != IERC721Receiver.onERC721Received.selector\" */ iszero(eq(/** @src 44:606:3453  \"contract MoodNft is ERC721, Ownable {...\" */ and(/** @src 30:17190:17241  \"retval != IERC721Receiver.onERC721Received.selector\" */ expr_7, /** @src 44:606:3453  \"contract MoodNft is ERC721, Ownable {...\" */ shl(224, 0xffffffff)), _36))\n                                        /// @src 30:17186:17316  \"if (retval != IERC721Receiver.onERC721Received.selector) {...\"\n                                        {\n                                            /// @src 30:17272:17297  \"ERC721InvalidReceiver(to)\"\n                                            let _38 := /** @src 44:606:3453  \"contract MoodNft is ERC721, Ownable {...\" */ mload(_2)\n                                            /// @src 30:17272:17297  \"ERC721InvalidReceiver(to)\"\n                                            mstore(_38, /** @src 30:10061:10094  \"ERC721InvalidReceiver(address(0))\" */ shl(225, 0x32505749))\n                                            /// @src 44:606:3453  \"contract MoodNft is ERC721, Ownable {...\"\n                                            mstore(/** @src 30:17272:17297  \"ERC721InvalidReceiver(to)\" */ add(_38, /** @src 44:606:3453  \"contract MoodNft is ERC721, Ownable {...\" */ _3), /** @src 44:1386:1396  \"msg.sender\" */ caller())\n                                            /// @src 30:17272:17297  \"ERC721InvalidReceiver(to)\"\n                                            revert(_38, /** @src 44:606:3453  \"contract MoodNft is ERC721, Ownable {...\" */ 36)\n                                        }\n                                    }\n                                    default /// @src 30:17068:17684  \"try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {...\"\n                                    {\n                                        /// @src 30:17331:17684  \"catch (bytes memory reason) {...\"\n                                        let data := /** @src 44:606:3453  \"contract MoodNft is ERC721, Ownable {...\" */ _4\n                                        switch returndatasize()\n                                        case 0 { data := 96 }\n                                        default {\n                                            let _39 := returndatasize()\n                                            let _40 := array_allocation_size_bytes(_39)\n                                            let memPtr_4 := mload(_2)\n                                            finalize_allocation(memPtr_4, _40)\n                                            mstore(memPtr_4, _39)\n                                            data := memPtr_4\n                                            returndatacopy(add(memPtr_4, _31), _4, returndatasize())\n                                        }\n                                        let _41 := mload(/** @src 30:17381:17394  \"reason.length\" */ data)\n                                        /// @src 30:17377:17670  \"if (reason.length == 0) {...\"\n                                        switch /** @src 30:17381:17399  \"reason.length == 0\" */ iszero(_41)\n                                        case /** @src 30:17377:17670  \"if (reason.length == 0) {...\" */ 0 {\n                                            /// @src 30:17557:17652  \"assembly {...\"\n                                            revert(add(/** @src 44:606:3453  \"contract MoodNft is ERC721, Ownable {...\" */ _31, /** @src 30:17557:17652  \"assembly {...\" */ data), _41)\n                                        }\n                                        default /// @src 30:17377:17670  \"if (reason.length == 0) {...\"\n                                        {\n                                            /// @src 30:17430:17455  \"ERC721InvalidReceiver(to)\"\n                                            let _42 := /** @src 44:606:3453  \"contract MoodNft is ERC721, Ownable {...\" */ mload(_2)\n                                            /// @src 30:17430:17455  \"ERC721InvalidReceiver(to)\"\n                                            mstore(_42, /** @src 30:10061:10094  \"ERC721InvalidReceiver(address(0))\" */ shl(225, 0x32505749))\n                                            /// @src 44:606:3453  \"contract MoodNft is ERC721, Ownable {...\"\n                                            mstore(/** @src 30:17430:17455  \"ERC721InvalidReceiver(to)\" */ add(_42, /** @src 44:606:3453  \"contract MoodNft is ERC721, Ownable {...\" */ _3), /** @src 44:1386:1396  \"msg.sender\" */ caller())\n                                            /// @src 30:17430:17455  \"ERC721InvalidReceiver(to)\"\n                                            revert(_42, /** @src 44:606:3453  \"contract MoodNft is ERC721, Ownable {...\" */ 36)\n                                        }\n                                    }\n                                }\n                                let _43 := sload(/** @src 44:1352:1366  \"s_tokenCounter\" */ 0x07)\n                                /// @src 44:606:3453  \"contract MoodNft is ERC721, Ownable {...\"\n                                let sum := add(_43, /** @src 30:9427:9443  \"to != address(0)\" */ 1)\n                                /// @src 44:606:3453  \"contract MoodNft is ERC721, Ownable {...\"\n                                if gt(_43, sum)\n                                {\n                                    mstore(_4, shl(224, 0x4e487b71))\n                                    mstore(_3, 0x11)\n                                    revert(_4, 0x24)\n                                }\n                                sstore(/** @src 44:1352:1366  \"s_tokenCounter\" */ 0x07, /** @src 44:606:3453  \"contract MoodNft is ERC721, Ownable {...\" */ sum)\n                                /// @src 44:1471:1495  \"CreatedNFT(tokenCounter)\"\n                                log2(/** @src 44:606:3453  \"contract MoodNft is ERC721, Ownable {...\" */ _4, _4, /** @src 44:1471:1495  \"CreatedNFT(tokenCounter)\" */ 0x72102923c3d44433bd725cb2c744a4c92a536ad249b665dec9853a16ed665525, _29)\n                                /// @src 44:606:3453  \"contract MoodNft is ERC721, Ownable {...\"\n                                return(_4, _4)\n                            }\n                            case 0xc87b56dd {\n                                if callvalue() { revert(_4, _4) }\n                                let _44 := 32\n                                if slt(add(calldatasize(), not(3)), _44) { revert(_4, _4) }\n                                let value_8 := calldataload(_3)\n                                /// @src 44:2134:2249  \"if (ownerOf(tokenId) == address(0)) {...\"\n                                if /** @src 44:2138:2168  \"ownerOf(tokenId) == address(0)\" */ iszero(/** @src 44:606:3453  \"contract MoodNft is ERC721, Ownable {...\" */ and(/** @src 30:2274:2296  \"_requireOwned(tokenId)\" */ fun_requireOwned(/** @src 44:2138:2154  \"ownerOf(tokenId)\" */ value_8), /** @src 44:606:3453  \"contract MoodNft is ERC721, Ownable {...\" */ sub(shl(160, 1), 1)))\n                                /// @src 44:2134:2249  \"if (ownerOf(tokenId) == address(0)) {...\"\n                                {\n                                    /// @src 44:2191:2238  \"ERC721Metadata__URI_QueryFor_NonExistentToken()\"\n                                    let _45 := /** @src 44:606:3453  \"contract MoodNft is ERC721, Ownable {...\" */ mload(_2)\n                                    /// @src 44:2191:2238  \"ERC721Metadata__URI_QueryFor_NonExistentToken()\"\n                                    mstore(_45, shl(225, 0x36faf6d7))\n                                    revert(_45, /** @src 44:606:3453  \"contract MoodNft is ERC721, Ownable {...\" */ _3)\n                                }\n                                /// @src 44:2258:2296  \"string memory imageURI = s_happySvgUri\"\n                                let var_imageURI_mpos := /** @src 44:606:3453  \"contract MoodNft is ERC721, Ownable {...\" */ copy_array_from_storage_to_memory_string_8216()\n                                mstore(_4, value_8)\n                                mstore(_44, /** @src 44:2311:2327  \"s_tokenIdToState\" */ 0x0a)\n                                /// @src 44:606:3453  \"contract MoodNft is ERC721, Ownable {...\"\n                                let value_9 := and(sload(keccak256(_4, _2)), 0xff)\n                                if iszero(lt(value_9, 2))\n                                {\n                                    mstore(_4, shl(224, 0x4e487b71))\n                                    mstore(_3, 0x21)\n                                    revert(_4, 0x24)\n                                }\n                                /// @src 44:2307:2401  \"if (s_tokenIdToState[tokenId] == NFTState.SAD) {...\"\n                                if /** @src 44:2311:2352  \"s_tokenIdToState[tokenId] == NFTState.SAD\" */ eq(value_9, /** @src 44:606:3453  \"contract MoodNft is ERC721, Ownable {...\" */ 1)\n                                /// @src 44:2307:2401  \"if (s_tokenIdToState[tokenId] == NFTState.SAD) {...\"\n                                {\n                                    /// @src 44:2368:2390  \"imageURI = s_sadSvgUri\"\n                                    var_imageURI_mpos := /** @src 44:606:3453  \"contract MoodNft is ERC721, Ownable {...\" */ copy_array_from_storage_to_memory_string_8204()\n                                }\n                                let memPtr_5 := mload(_2)\n                                let newFreePtr := add(memPtr_5, _2)\n                                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr_5))\n                                {\n                                    mstore(_4, shl(224, 0x4e487b71))\n                                    mstore(_3, 0x41)\n                                    revert(_4, 0x24)\n                                }\n                                mstore(_2, newFreePtr)\n                                mstore(memPtr_5, 29)\n                                let _46 := add(memPtr_5, _44)\n                                mstore(_46, \"data:application/json;base64,\")\n                                /// @src 44:2730:2736  \"name()\"\n                                let expr_mpos := /** @src 44:606:3453  \"contract MoodNft is ERC721, Ownable {...\" */ copy_array_from_storage_to_memory_string()\n                                /// @src 44:2643:3079  \"abi.encodePacked(...\"\n                                let expr_mpos_1 := /** @src 44:606:3453  \"contract MoodNft is ERC721, Ownable {...\" */ mload(_2)\n                                mstore(/** @src 44:2643:3079  \"abi.encodePacked(...\" */ add(expr_mpos_1, /** @src 44:606:3453  \"contract MoodNft is ERC721, Ownable {...\" */ _44), shl(185, 0x3d913730b6b2911d11))\n                                let length_1 := mload(expr_mpos)\n                                copy_memory_to_memory_with_cleanup(add(expr_mpos, _44), add(/** @src 44:2643:3079  \"abi.encodePacked(...\" */ expr_mpos_1, /** @src 44:606:3453  \"contract MoodNft is ERC721, Ownable {...\" */ 41), length_1)\n                                let _47 := add(/** @src 44:2643:3079  \"abi.encodePacked(...\" */ expr_mpos_1, /** @src 44:606:3453  \"contract MoodNft is ERC721, Ownable {...\" */ length_1)\n                                mstore(add(_47, 41), 0x222c20226465736372697074696f6e223a22416e204e46542074686174207265)\n                                mstore(add(_47, 73), \"flects the mood of the owner, 10\")\n                                mstore(add(_47, 105), shl(141, 0x018129037b71021b430b4b71091161))\n                                mstore(add(_47, 120), 0x2261747472696275746573223a205b7b2274726169745f74797065223a20226d)\n                                mstore(add(_47, 152), 0x6f6f64696e657373222c202276616c7565223a203130307d5d2c2022696d6167)\n                                mstore(add(_47, 184), shl(225, 0x32911d11))\n                                let length_2 := mload(var_imageURI_mpos)\n                                copy_memory_to_memory_with_cleanup(add(var_imageURI_mpos, _44), add(_47, 188), length_2)\n                                let _48 := add(_47, length_2)\n                                mstore(add(_48, 188), shl(240, 8829))\n                                /// @src 44:2643:3079  \"abi.encodePacked(...\"\n                                let _49 := sub(/** @src 44:606:3453  \"contract MoodNft is ERC721, Ownable {...\" */ _48, /** @src 44:2643:3079  \"abi.encodePacked(...\" */ expr_mpos_1)\n                                mstore(expr_mpos_1, add(_49, 158))\n                                finalize_allocation(expr_mpos_1, add(_49, 190))\n                                /// @src 44:2499:3119  \"Base64.encode(...\"\n                                let expr_mpos_2 := fun_encode(expr_mpos_1)\n                                /// @src 44:2437:3133  \"abi.encodePacked(...\"\n                                let expr_mpos_3 := /** @src 44:606:3453  \"contract MoodNft is ERC721, Ownable {...\" */ mload(_2)\n                                let length_3 := mload(memPtr_5)\n                                copy_memory_to_memory_with_cleanup(_46, /** @src 44:2437:3133  \"abi.encodePacked(...\" */ add(expr_mpos_3, /** @src 44:606:3453  \"contract MoodNft is ERC721, Ownable {...\" */ _44), length_3)\n                                let _50 := add(/** @src 44:2437:3133  \"abi.encodePacked(...\" */ expr_mpos_3, /** @src 44:606:3453  \"contract MoodNft is ERC721, Ownable {...\" */ length_3)\n                                let length_4 := mload(expr_mpos_2)\n                                copy_memory_to_memory_with_cleanup(add(expr_mpos_2, _44), add(_50, _44), length_4)\n                                /// @src 44:2437:3133  \"abi.encodePacked(...\"\n                                let _51 := sub(/** @src 44:606:3453  \"contract MoodNft is ERC721, Ownable {...\" */ add(_50, length_4), /** @src 44:2437:3133  \"abi.encodePacked(...\" */ expr_mpos_3)\n                                mstore(expr_mpos_3, _51)\n                                finalize_allocation(expr_mpos_3, add(_51, /** @src 44:606:3453  \"contract MoodNft is ERC721, Ownable {...\" */ _44))\n                                let memPos_8 := mload(_2)\n                                mstore(memPos_8, _44)\n                                return(memPos_8, sub(abi_encode_string(expr_mpos_3, add(memPos_8, _44)), memPos_8))\n                            }\n                            case 0xe985e9c5 {\n                                if callvalue() { revert(_4, _4) }\n                                if slt(add(calldatasize(), not(3)), _2) { revert(_4, _4) }\n                                let value0_3 := abi_decode_address_8199()\n                                let value1_1 := abi_decode_address()\n                                let _52 := sub(shl(160, 1), 1)\n                                mstore(_4, and(value0_3, _52))\n                                mstore(32, /** @src 30:4039:4057  \"_operatorApprovals\" */ 0x05)\n                                /// @src 44:606:3453  \"contract MoodNft is ERC721, Ownable {...\"\n                                let _53 := keccak256(_4, _2)\n                                mstore(_4, and(value1_1, _52))\n                                mstore(32, _53)\n                                let value_10 := and(sload(keccak256(_4, _2)), 0xff)\n                                let memPos_9 := mload(_2)\n                                mstore(memPos_9, iszero(iszero(value_10)))\n                                return(memPos_9, 32)\n                            }\n                            case 0xf2fde38b {\n                                if callvalue() { revert(_4, _4) }\n                                if slt(add(calldatasize(), not(3)), 32) { revert(_4, _4) }\n                                let value0_4 := abi_decode_address_8199()\n                                /// @src 28:1500:1562  \"modifier onlyOwner() {...\"\n                                fun_checkOwner()\n                                /// @src 44:606:3453  \"contract MoodNft is ERC721, Ownable {...\"\n                                let _54 := sub(shl(160, 1), 1)\n                                let _55 := and(/** @src 28:2627:2649  \"newOwner == address(0)\" */ value0_4, /** @src 44:606:3453  \"contract MoodNft is ERC721, Ownable {...\" */ _54)\n                                /// @src 28:2623:2714  \"if (newOwner == address(0)) {...\"\n                                if /** @src 28:2627:2649  \"newOwner == address(0)\" */ iszero(/** @src 44:606:3453  \"contract MoodNft is ERC721, Ownable {...\" */ _55)\n                                /// @src 28:2623:2714  \"if (newOwner == address(0)) {...\"\n                                {\n                                    /// @src 28:2672:2703  \"OwnableInvalidOwner(address(0))\"\n                                    let _56 := /** @src 44:606:3453  \"contract MoodNft is ERC721, Ownable {...\" */ mload(_2)\n                                    /// @src 28:2672:2703  \"OwnableInvalidOwner(address(0))\"\n                                    mstore(_56, shl(224, 0x1e4fbdf7))\n                                    /// @src 44:606:3453  \"contract MoodNft is ERC721, Ownable {...\"\n                                    mstore(/** @src 28:2672:2703  \"OwnableInvalidOwner(address(0))\" */ add(_56, /** @src 44:606:3453  \"contract MoodNft is ERC721, Ownable {...\" */ _3), _4)\n                                    /// @src 28:2672:2703  \"OwnableInvalidOwner(address(0))\"\n                                    revert(_56, /** @src 44:606:3453  \"contract MoodNft is ERC721, Ownable {...\" */ 36)\n                                }\n                                let _57 := sload(/** @src 28:3004:3010  \"_owner\" */ 0x06)\n                                /// @src 44:606:3453  \"contract MoodNft is ERC721, Ownable {...\"\n                                sstore(/** @src 28:3004:3010  \"_owner\" */ 0x06, /** @src 44:606:3453  \"contract MoodNft is ERC721, Ownable {...\" */ or(and(_57, shl(160, 0xffffffffffffffffffffffff)), _55))\n                                /// @src 28:3052:3092  \"OwnershipTransferred(oldOwner, newOwner)\"\n                                log3(/** @src 44:606:3453  \"contract MoodNft is ERC721, Ownable {...\" */ _4, _4, /** @src 28:3052:3092  \"OwnershipTransferred(oldOwner, newOwner)\" */ 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0, /** @src 44:606:3453  \"contract MoodNft is ERC721, Ownable {...\" */ and(_57, _54), /** @src 28:3052:3092  \"OwnershipTransferred(oldOwner, newOwner)\" */ _55)\n                                /// @src 44:606:3453  \"contract MoodNft is ERC721, Ownable {...\"\n                                return(_4, _4)\n                            }\n                            case 0xfc842121 {\n                                if callvalue() { revert(_4, _4) }\n                                if slt(add(calldatasize(), not(3)), _4) { revert(_4, _4) }\n                                let converted_2 := copy_array_from_storage_to_memory_string_8216()\n                                let memPos_10 := mload(_2)\n                                mstore(memPos_10, 32)\n                                return(memPos_10, sub(abi_encode_string(converted_2, add(memPos_10, 32)), memPos_10))\n                            }\n                        }\n                        revert(0, 0)\n                    }\n                    function copy_memory_to_memory_with_cleanup(src, dst, length)\n                    {\n                        let i := 0\n                        for { } lt(i, length) { i := add(i, 32) }\n                        {\n                            mstore(add(dst, i), mload(add(src, i)))\n                        }\n                        mstore(add(dst, length), 0)\n                    }\n                    function abi_encode_string(value, pos) -> end\n                    {\n                        let length := mload(value)\n                        mstore(pos, length)\n                        copy_memory_to_memory_with_cleanup(add(value, 0x20), add(pos, 0x20), length)\n                        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n                    }\n                    function abi_decode_address_8199() -> value\n                    {\n                        value := calldataload(4)\n                        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n                    }\n                    function abi_decode_address() -> value\n                    {\n                        value := calldataload(36)\n                        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n                    }\n                    function abi_decode_addresst_addresst_uint256(dataEnd) -> value0, value1, value2\n                    {\n                        if slt(add(dataEnd, not(3)), 96) { revert(0, 0) }\n                        let value := calldataload(4)\n                        let _1 := sub(shl(160, 1), 1)\n                        if iszero(eq(value, and(value, _1)))\n                        {\n                            revert(/** @src -1:-1:-1 */ 0, 0)\n                        }\n                        /// @src 44:606:3453  \"contract MoodNft is ERC721, Ownable {...\"\n                        value0 := value\n                        let value_1 := calldataload(36)\n                        if iszero(eq(value_1, and(value_1, _1)))\n                        {\n                            revert(/** @src -1:-1:-1 */ 0, 0)\n                        }\n                        /// @src 44:606:3453  \"contract MoodNft is ERC721, Ownable {...\"\n                        value1 := value_1\n                        value2 := calldataload(68)\n                    }\n                    function finalize_allocation_18857(memPtr)\n                    {\n                        let newFreePtr := add(memPtr, 0x20)\n                        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr))\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x41)\n                            revert(0, 0x24)\n                        }\n                        mstore(64, newFreePtr)\n                    }\n                    function finalize_allocation(memPtr, size)\n                    {\n                        let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n                        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr))\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x41)\n                            revert(0, 0x24)\n                        }\n                        mstore(64, newFreePtr)\n                    }\n                    function array_allocation_size_bytes(length) -> size\n                    {\n                        if gt(length, 0xffffffffffffffff)\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x41)\n                            revert(0, 0x24)\n                        }\n                        size := add(and(add(length, 31), not(31)), 0x20)\n                    }\n                    /// @ast-id 47570 @src 28:1796:1958  \"function _checkOwner() internal view virtual {...\"\n                    function fun_checkOwner()\n                    {\n                        /// @src 44:606:3453  \"contract MoodNft is ERC721, Ownable {...\"\n                        let cleaned := and(sload(/** @src 28:1710:1716  \"_owner\" */ 0x06), /** @src 44:606:3453  \"contract MoodNft is ERC721, Ownable {...\" */ sub(shl(160, 1), 1))\n                        /// @src 28:1851:1952  \"if (owner() != _msgSender()) {...\"\n                        if /** @src 28:1855:1878  \"owner() != _msgSender()\" */ iszero(eq(/** @src 44:606:3453  \"contract MoodNft is ERC721, Ownable {...\" */ cleaned, /** @src 35:735:745  \"msg.sender\" */ caller()))\n                        /// @src 28:1851:1952  \"if (owner() != _msgSender()) {...\"\n                        {\n                            /// @src 28:1901:1941  \"OwnableUnauthorizedAccount(_msgSender())\"\n                            let _1 := /** @src 44:606:3453  \"contract MoodNft is ERC721, Ownable {...\" */ mload(64)\n                            /// @src 28:1901:1941  \"OwnableUnauthorizedAccount(_msgSender())\"\n                            mstore(_1, shl(224, 0x118cdaa7))\n                            /// @src 44:606:3453  \"contract MoodNft is ERC721, Ownable {...\"\n                            mstore(/** @src 28:1901:1941  \"OwnableUnauthorizedAccount(_msgSender())\" */ add(_1, 4), /** @src 35:735:745  \"msg.sender\" */ caller())\n                            /// @src 28:1901:1941  \"OwnableUnauthorizedAccount(_msgSender())\"\n                            revert(_1, /** @src 44:606:3453  \"contract MoodNft is ERC721, Ownable {...\" */ 36)\n                        }\n                    }\n                    function copy_array_from_storage_to_memory_string() -> memPtr\n                    {\n                        memPtr := mload(64)\n                        let ret := 0\n                        let slotValue := sload(ret)\n                        let length := ret\n                        let _1 := 1\n                        length := shr(_1, slotValue)\n                        let outOfPlaceEncoding := and(slotValue, _1)\n                        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n                        let _2 := 32\n                        if eq(outOfPlaceEncoding, lt(length, _2))\n                        {\n                            mstore(ret, shl(224, 0x4e487b71))\n                            mstore(4, 0x22)\n                            revert(ret, 0x24)\n                        }\n                        mstore(memPtr, length)\n                        switch outOfPlaceEncoding\n                        case 0 {\n                            mstore(add(memPtr, _2), and(slotValue, not(255)))\n                            ret := add(add(memPtr, shl(5, iszero(iszero(length)))), _2)\n                        }\n                        case 1 {\n                            mstore(0, 0)\n                            let dataPos := 18569430475105882587588266137607568536673111973893317399460219858819262702947\n                            let i := 0\n                            for { } lt(i, length) { i := add(i, _2) }\n                            {\n                                mstore(add(add(memPtr, i), _2), sload(dataPos))\n                                dataPos := add(dataPos, _1)\n                            }\n                            ret := add(add(memPtr, i), _2)\n                        }\n                        finalize_allocation(memPtr, sub(ret, memPtr))\n                    }\n                    function copy_array_from_storage_to_memory_string_8204() -> memPtr\n                    {\n                        memPtr := mload(64)\n                        let ret := /** @src -1:-1:-1 */ 0\n                        /// @src 44:606:3453  \"contract MoodNft is ERC721, Ownable {...\"\n                        let slotValue := sload(/** @src 44:3332:3343  \"s_sadSvgUri\" */ 0x08)\n                        /// @src 44:606:3453  \"contract MoodNft is ERC721, Ownable {...\"\n                        let length := /** @src -1:-1:-1 */ ret\n                        /// @src 44:606:3453  \"contract MoodNft is ERC721, Ownable {...\"\n                        let _1 := 1\n                        length := shr(_1, slotValue)\n                        let outOfPlaceEncoding := and(slotValue, _1)\n                        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n                        let _2 := 32\n                        if eq(outOfPlaceEncoding, lt(length, _2))\n                        {\n                            mstore(/** @src -1:-1:-1 */ ret, /** @src 44:606:3453  \"contract MoodNft is ERC721, Ownable {...\" */ shl(224, 0x4e487b71))\n                            mstore(4, 0x22)\n                            revert(/** @src -1:-1:-1 */ ret, /** @src 44:606:3453  \"contract MoodNft is ERC721, Ownable {...\" */ 0x24)\n                        }\n                        mstore(memPtr, length)\n                        switch outOfPlaceEncoding\n                        case 0 {\n                            mstore(add(memPtr, _2), and(slotValue, not(255)))\n                            ret := add(add(memPtr, shl(5, iszero(iszero(length)))), _2)\n                        }\n                        case 1 {\n                            mstore(/** @src -1:-1:-1 */ 0, /** @src 44:3332:3343  \"s_sadSvgUri\" */ 0x08)\n                            /// @src 44:606:3453  \"contract MoodNft is ERC721, Ownable {...\"\n                            let dataPos := 110349606679412691172957834289542550319383271247755660854362242977991410020067\n                            let i := /** @src -1:-1:-1 */ 0\n                            /// @src 44:606:3453  \"contract MoodNft is ERC721, Ownable {...\"\n                            for { } lt(i, length) { i := add(i, _2) }\n                            {\n                                mstore(add(add(memPtr, i), _2), sload(dataPos))\n                                dataPos := add(dataPos, _1)\n                            }\n                            ret := add(add(memPtr, i), _2)\n                        }\n                        finalize_allocation(memPtr, sub(ret, memPtr))\n                    }\n                    function copy_array_from_storage_to_memory_string_8216() -> memPtr\n                    {\n                        memPtr := mload(64)\n                        let ret := /** @src -1:-1:-1 */ 0\n                        /// @src 44:606:3453  \"contract MoodNft is ERC721, Ownable {...\"\n                        let slotValue := sload(/** @src 44:2283:2296  \"s_happySvgUri\" */ 0x09)\n                        /// @src 44:606:3453  \"contract MoodNft is ERC721, Ownable {...\"\n                        let length := /** @src -1:-1:-1 */ ret\n                        /// @src 44:606:3453  \"contract MoodNft is ERC721, Ownable {...\"\n                        let _1 := 1\n                        length := shr(_1, slotValue)\n                        let outOfPlaceEncoding := and(slotValue, _1)\n                        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n                        let _2 := 32\n                        if eq(outOfPlaceEncoding, lt(length, _2))\n                        {\n                            mstore(/** @src -1:-1:-1 */ ret, /** @src 44:606:3453  \"contract MoodNft is ERC721, Ownable {...\" */ shl(224, 0x4e487b71))\n                            mstore(4, 0x22)\n                            revert(/** @src -1:-1:-1 */ ret, /** @src 44:606:3453  \"contract MoodNft is ERC721, Ownable {...\" */ 0x24)\n                        }\n                        mstore(memPtr, length)\n                        switch outOfPlaceEncoding\n                        case 0 {\n                            mstore(add(memPtr, _2), and(slotValue, not(255)))\n                            ret := add(add(memPtr, shl(5, iszero(iszero(length)))), _2)\n                        }\n                        case 1 {\n                            mstore(/** @src -1:-1:-1 */ 0, /** @src 44:2283:2296  \"s_happySvgUri\" */ 0x09)\n                            /// @src 44:606:3453  \"contract MoodNft is ERC721, Ownable {...\"\n                            let dataPos := 49791959467252497455735130940088646708311117250336157395101362029847983277999\n                            let i := /** @src -1:-1:-1 */ 0\n                            /// @src 44:606:3453  \"contract MoodNft is ERC721, Ownable {...\"\n                            for { } lt(i, length) { i := add(i, _2) }\n                            {\n                                mstore(add(add(memPtr, i), _2), sload(dataPos))\n                                dataPos := add(dataPos, _1)\n                            }\n                            ret := add(add(memPtr, i), _2)\n                        }\n                        finalize_allocation(memPtr, sub(ret, memPtr))\n                    }\n                    /// @ast-id 48008 @src 30:3497:3651  \"function getApproved(uint256 tokenId) public view virtual returns (address) {...\"\n                    function fun_getApproved(var_tokenId) -> var\n                    {\n                        /// @src 30:3583:3605  \"_requireOwned(tokenId)\"\n                        pop(fun_requireOwned(var_tokenId))\n                        /// @src 44:606:3453  \"contract MoodNft is ERC721, Ownable {...\"\n                        mstore(/** @src -1:-1:-1 */ 0, /** @src 44:606:3453  \"contract MoodNft is ERC721, Ownable {...\" */ var_tokenId)\n                        mstore(0x20, /** @src 30:6034:6049  \"_tokenApprovals\" */ 0x04)\n                        /// @src 30:3616:3644  \"return _getApproved(tokenId)\"\n                        var := /** @src 44:606:3453  \"contract MoodNft is ERC721, Ownable {...\" */ and(sload(keccak256(/** @src -1:-1:-1 */ 0, /** @src 44:606:3453  \"contract MoodNft is ERC721, Ownable {...\" */ 0x40)), sub(shl(160, 1), 1))\n                    }\n                    /// @ast-id 48087 @src 30:4143:4721  \"function transferFrom(address from, address to, uint256 tokenId) public virtual {...\"\n                    function fun_transferFrom(var_from, var_to, var_tokenId)\n                    {\n                        /// @src 44:606:3453  \"contract MoodNft is ERC721, Ownable {...\"\n                        let _1 := sub(shl(160, 1), 1)\n                        let _2 := and(/** @src 30:4237:4253  \"to == address(0)\" */ var_to, /** @src 44:606:3453  \"contract MoodNft is ERC721, Ownable {...\" */ _1)\n                        /// @src 30:4233:4320  \"if (to == address(0)) {...\"\n                        if /** @src 30:4237:4253  \"to == address(0)\" */ iszero(/** @src 44:606:3453  \"contract MoodNft is ERC721, Ownable {...\" */ _2)\n                        /// @src 30:4233:4320  \"if (to == address(0)) {...\"\n                        {\n                            /// @src 30:4276:4309  \"ERC721InvalidReceiver(address(0))\"\n                            let _3 := /** @src 44:606:3453  \"contract MoodNft is ERC721, Ownable {...\" */ mload(64)\n                            /// @src 30:4276:4309  \"ERC721InvalidReceiver(address(0))\"\n                            mstore(_3, /** @src 30:10061:10094  \"ERC721InvalidReceiver(address(0))\" */ shl(225, 0x32505749))\n                            /// @src 44:606:3453  \"contract MoodNft is ERC721, Ownable {...\"\n                            mstore(/** @src 30:4276:4309  \"ERC721InvalidReceiver(address(0))\" */ add(_3, 4), /** @src 30:4251:4252  \"0\" */ 0x00)\n                            /// @src 30:4276:4309  \"ERC721InvalidReceiver(address(0))\"\n                            revert(_3, /** @src 44:606:3453  \"contract MoodNft is ERC721, Ownable {...\" */ 36)\n                        }\n                        /// @src -1:-1:-1\n                        let _4 := 0\n                        /// @src 44:606:3453  \"contract MoodNft is ERC721, Ownable {...\"\n                        mstore(/** @src -1:-1:-1 */ _4, /** @src 44:606:3453  \"contract MoodNft is ERC721, Ownable {...\" */ var_tokenId)\n                        let _5 := 0x20\n                        mstore(_5, /** @src 30:5799:5806  \"_owners\" */ 0x02)\n                        /// @src 44:606:3453  \"contract MoodNft is ERC721, Ownable {...\"\n                        let _6 := 0x40\n                        let cleaned := and(sload(keccak256(/** @src -1:-1:-1 */ _4, /** @src 44:606:3453  \"contract MoodNft is ERC721, Ownable {...\" */ _6)), _1)\n                        /// @src 30:9035:9053  \"auth != address(0)\"\n                        let _7 := iszero(iszero(/** @src 35:735:745  \"msg.sender\" */ caller()))\n                        /// @src 30:9031:9117  \"if (auth != address(0)) {...\"\n                        if /** @src 30:9035:9053  \"auth != address(0)\" */ _7\n                        /// @src 30:9031:9117  \"if (auth != address(0)) {...\"\n                        {\n                            /// @src 30:6514:6641  \"spender != address(0) &&...\"\n                            let expr := _7\n                            if _7\n                            {\n                                /// @src 30:6552:6604  \"owner == spender || isApprovedForAll(owner, spender)\"\n                                let expr_1 := /** @src 30:6552:6568  \"owner == spender\" */ eq(/** @src 44:606:3453  \"contract MoodNft is ERC721, Ownable {...\" */ cleaned, /** @src 35:735:745  \"msg.sender\" */ caller())\n                                /// @src 30:6552:6604  \"owner == spender || isApprovedForAll(owner, spender)\"\n                                if iszero(expr_1)\n                                {\n                                    /// @src 44:606:3453  \"contract MoodNft is ERC721, Ownable {...\"\n                                    mstore(/** @src -1:-1:-1 */ _4, /** @src 44:606:3453  \"contract MoodNft is ERC721, Ownable {...\" */ cleaned)\n                                    mstore(_5, /** @src 30:4039:4057  \"_operatorApprovals\" */ 0x05)\n                                    /// @src 44:606:3453  \"contract MoodNft is ERC721, Ownable {...\"\n                                    let _8 := keccak256(/** @src -1:-1:-1 */ _4, /** @src 44:606:3453  \"contract MoodNft is ERC721, Ownable {...\" */ _6)\n                                    mstore(/** @src -1:-1:-1 */ _4, /** @src 35:735:745  \"msg.sender\" */ caller())\n                                    /// @src 44:606:3453  \"contract MoodNft is ERC721, Ownable {...\"\n                                    mstore(_5, _8)\n                                    /// @src 30:6552:6604  \"owner == spender || isApprovedForAll(owner, spender)\"\n                                    expr_1 := /** @src 44:606:3453  \"contract MoodNft is ERC721, Ownable {...\" */ and(sload(keccak256(/** @src -1:-1:-1 */ _4, /** @src 44:606:3453  \"contract MoodNft is ERC721, Ownable {...\" */ _6)), 0xff)\n                                }\n                                /// @src 30:6552:6640  \"owner == spender || isApprovedForAll(owner, spender) || _getApproved(tokenId) == spender\"\n                                let expr_2 := expr_1\n                                if iszero(expr_1)\n                                {\n                                    /// @src 44:606:3453  \"contract MoodNft is ERC721, Ownable {...\"\n                                    mstore(/** @src -1:-1:-1 */ _4, /** @src 44:606:3453  \"contract MoodNft is ERC721, Ownable {...\" */ var_tokenId)\n                                    mstore(_5, /** @src 30:6034:6049  \"_tokenApprovals\" */ 0x04)\n                                    /// @src 30:6552:6640  \"owner == spender || isApprovedForAll(owner, spender) || _getApproved(tokenId) == spender\"\n                                    expr_2 := /** @src 30:6608:6640  \"_getApproved(tokenId) == spender\" */ eq(/** @src 44:606:3453  \"contract MoodNft is ERC721, Ownable {...\" */ and(sload(keccak256(/** @src -1:-1:-1 */ _4, /** @src 44:606:3453  \"contract MoodNft is ERC721, Ownable {...\" */ _6)), _1), /** @src 35:735:745  \"msg.sender\" */ caller())\n                                }\n                                /// @src 30:6514:6641  \"spender != address(0) &&...\"\n                                expr := expr_2\n                            }\n                            /// @src 30:7189:7444  \"if (!_isAuthorized(owner, spender, tokenId)) {...\"\n                            if /** @src 30:7193:7232  \"!_isAuthorized(owner, spender, tokenId)\" */ iszero(/** @src 30:7194:7232  \"_isAuthorized(owner, spender, tokenId)\" */ expr)\n                            /// @src 30:7189:7444  \"if (!_isAuthorized(owner, spender, tokenId)) {...\"\n                            {\n                                /// @src 30:7248:7434  \"if (owner == address(0)) {...\"\n                                switch /** @src 30:7252:7271  \"owner == address(0)\" */ iszero(/** @src 44:606:3453  \"contract MoodNft is ERC721, Ownable {...\" */ cleaned)\n                                case /** @src 30:7248:7434  \"if (owner == address(0)) {...\" */ 0 {\n                                    /// @src 30:7375:7419  \"ERC721InsufficientApproval(spender, tokenId)\"\n                                    let _9 := /** @src 44:606:3453  \"contract MoodNft is ERC721, Ownable {...\" */ mload(_6)\n                                    /// @src 30:7375:7419  \"ERC721InsufficientApproval(spender, tokenId)\"\n                                    mstore(_9, shl(224, 0x177e802f))\n                                    /// @src 44:606:3453  \"contract MoodNft is ERC721, Ownable {...\"\n                                    mstore(/** @src 30:7375:7419  \"ERC721InsufficientApproval(spender, tokenId)\" */ add(_9, 4), /** @src 35:735:745  \"msg.sender\" */ caller())\n                                    /// @src 44:606:3453  \"contract MoodNft is ERC721, Ownable {...\"\n                                    mstore(add(/** @src 30:7375:7419  \"ERC721InsufficientApproval(spender, tokenId)\" */ _9, /** @src 44:606:3453  \"contract MoodNft is ERC721, Ownable {...\" */ 36), var_tokenId)\n                                    /// @src 30:7375:7419  \"ERC721InsufficientApproval(spender, tokenId)\"\n                                    revert(_9, /** @src 44:606:3453  \"contract MoodNft is ERC721, Ownable {...\" */ 68)\n                                }\n                                default /// @src 30:7248:7434  \"if (owner == address(0)) {...\"\n                                {\n                                    /// @src 30:7298:7329  \"ERC721NonexistentToken(tokenId)\"\n                                    let _10 := /** @src 44:606:3453  \"contract MoodNft is ERC721, Ownable {...\" */ mload(_6)\n                                    /// @src 30:7298:7329  \"ERC721NonexistentToken(tokenId)\"\n                                    mstore(_10, shl(224, 0x7e273289))\n                                    /// @src 44:606:3453  \"contract MoodNft is ERC721, Ownable {...\"\n                                    mstore(/** @src 30:7298:7329  \"ERC721NonexistentToken(tokenId)\" */ add(_10, 4), /** @src 44:606:3453  \"contract MoodNft is ERC721, Ownable {...\" */ var_tokenId)\n                                    /// @src 30:7298:7329  \"ERC721NonexistentToken(tokenId)\"\n                                    revert(_10, /** @src 44:606:3453  \"contract MoodNft is ERC721, Ownable {...\" */ 36)\n                                }\n                            }\n                        }\n                        /// @src 30:9157:9413  \"if (from != address(0)) {...\"\n                        if /** @src 30:9161:9179  \"from != address(0)\" */ iszero(iszero(/** @src 44:606:3453  \"contract MoodNft is ERC721, Ownable {...\" */ cleaned))\n                        /// @src 30:9157:9413  \"if (from != address(0)) {...\"\n                        {\n                            /// @src 30:9319:9324  \"false\"\n                            fun_approve(var_tokenId)\n                            /// @src 44:606:3453  \"contract MoodNft is ERC721, Ownable {...\"\n                            mstore(/** @src -1:-1:-1 */ _4, /** @src 44:606:3453  \"contract MoodNft is ERC721, Ownable {...\" */ cleaned)\n                            mstore(_5, /** @src 30:9368:9377  \"_balances\" */ 0x03)\n                            /// @src 44:606:3453  \"contract MoodNft is ERC721, Ownable {...\"\n                            let dataSlot := keccak256(/** @src -1:-1:-1 */ _4, /** @src 44:606:3453  \"contract MoodNft is ERC721, Ownable {...\" */ _6)\n                            sstore(dataSlot, add(sload(/** @src 30:9368:9388  \"_balances[from] -= 1\" */ dataSlot), /** @src 44:606:3453  \"contract MoodNft is ERC721, Ownable {...\" */ not(0)))\n                        }\n                        mstore(/** @src -1:-1:-1 */ _4, /** @src 44:606:3453  \"contract MoodNft is ERC721, Ownable {...\" */ _2)\n                        mstore(_5, /** @src 30:9487:9496  \"_balances\" */ 0x03)\n                        /// @src 44:606:3453  \"contract MoodNft is ERC721, Ownable {...\"\n                        let dataSlot_1 := keccak256(/** @src -1:-1:-1 */ _4, /** @src 44:606:3453  \"contract MoodNft is ERC721, Ownable {...\" */ _6)\n                        sstore(dataSlot_1, add(sload(/** @src 30:9487:9505  \"_balances[to] += 1\" */ dataSlot_1), /** @src 30:9427:9443  \"to != address(0)\" */ 1))\n                        /// @src 44:606:3453  \"contract MoodNft is ERC721, Ownable {...\"\n                        mstore(/** @src -1:-1:-1 */ _4, /** @src 44:606:3453  \"contract MoodNft is ERC721, Ownable {...\" */ var_tokenId)\n                        mstore(_5, /** @src 30:5799:5806  \"_owners\" */ 0x02)\n                        /// @src 44:606:3453  \"contract MoodNft is ERC721, Ownable {...\"\n                        let _11 := keccak256(/** @src -1:-1:-1 */ _4, /** @src 44:606:3453  \"contract MoodNft is ERC721, Ownable {...\" */ _6)\n                        sstore(_11, or(and(sload(_11), shl(160, 0xffffffffffffffffffffffff)), _2))\n                        /// @src 30:9577:9604  \"Transfer(from, to, tokenId)\"\n                        log4(/** @src -1:-1:-1 */ _4, _4, /** @src 30:9577:9604  \"Transfer(from, to, tokenId)\" */ 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef, cleaned, _2, var_tokenId)\n                        /// @src 44:606:3453  \"contract MoodNft is ERC721, Ownable {...\"\n                        let _12 := and(/** @src 30:4610:4631  \"previousOwner != from\" */ var_from, /** @src 44:606:3453  \"contract MoodNft is ERC721, Ownable {...\" */ _1)\n                        /// @src 30:4606:4715  \"if (previousOwner != from) {...\"\n                        if /** @src 30:4610:4631  \"previousOwner != from\" */ iszero(eq(/** @src 44:606:3453  \"contract MoodNft is ERC721, Ownable {...\" */ cleaned, _12))\n                        /// @src 30:4606:4715  \"if (previousOwner != from) {...\"\n                        {\n                            /// @src 30:4654:4704  \"ERC721IncorrectOwner(from, tokenId, previousOwner)\"\n                            let _13 := /** @src 44:606:3453  \"contract MoodNft is ERC721, Ownable {...\" */ mload(_6)\n                            /// @src 30:4654:4704  \"ERC721IncorrectOwner(from, tokenId, previousOwner)\"\n                            mstore(_13, shl(224, 0x64283d7b))\n                            /// @src 44:606:3453  \"contract MoodNft is ERC721, Ownable {...\"\n                            mstore(/** @src 30:4654:4704  \"ERC721IncorrectOwner(from, tokenId, previousOwner)\" */ add(_13, 4), /** @src 44:606:3453  \"contract MoodNft is ERC721, Ownable {...\" */ _12)\n                            mstore(add(/** @src 30:4654:4704  \"ERC721IncorrectOwner(from, tokenId, previousOwner)\" */ _13, /** @src 44:606:3453  \"contract MoodNft is ERC721, Ownable {...\" */ 36), var_tokenId)\n                            mstore(add(/** @src 30:4654:4704  \"ERC721IncorrectOwner(from, tokenId, previousOwner)\" */ _13, /** @src 44:606:3453  \"contract MoodNft is ERC721, Ownable {...\" */ 68), cleaned)\n                            /// @src 30:4654:4704  \"ERC721IncorrectOwner(from, tokenId, previousOwner)\"\n                            revert(_13, /** @src 44:606:3453  \"contract MoodNft is ERC721, Ownable {...\" */ 100)\n                        }\n                    }\n                    /// @ast-id 48648 @src 30:14720:15382  \"function _approve(address to, uint256 tokenId, address auth, bool emitEvent) internal virtual {...\"\n                    function fun_approve(var_tokenId)\n                    {\n                        /// @src 44:606:3453  \"contract MoodNft is ERC721, Ownable {...\"\n                        mstore(0, var_tokenId)\n                        mstore(0x20, /** @src 30:15346:15361  \"_tokenApprovals\" */ 0x04)\n                        /// @src 44:606:3453  \"contract MoodNft is ERC721, Ownable {...\"\n                        let _1 := keccak256(0, 0x40)\n                        sstore(_1, and(sload(_1), shl(160, 0xffffffffffffffffffffffff)))\n                    }\n                    /// @ast-id 48714 @src 30:16138:16379  \"function _requireOwned(uint256 tokenId) internal view returns (address) {...\"\n                    function fun_requireOwned(var_tokenId) -> var\n                    {\n                        /// @src 44:606:3453  \"contract MoodNft is ERC721, Ownable {...\"\n                        mstore(/** @src -1:-1:-1 */ 0, /** @src 44:606:3453  \"contract MoodNft is ERC721, Ownable {...\" */ var_tokenId)\n                        mstore(0x20, /** @src 30:5799:5806  \"_owners\" */ 0x02)\n                        /// @src 44:606:3453  \"contract MoodNft is ERC721, Ownable {...\"\n                        let cleaned := and(sload(keccak256(/** @src -1:-1:-1 */ 0, /** @src 44:606:3453  \"contract MoodNft is ERC721, Ownable {...\" */ 0x40)), sub(shl(160, 1), 1))\n                        /// @src 30:16263:16351  \"if (owner == address(0)) {...\"\n                        if /** @src 30:16267:16286  \"owner == address(0)\" */ iszero(/** @src 44:606:3453  \"contract MoodNft is ERC721, Ownable {...\" */ cleaned)\n                        /// @src 30:16263:16351  \"if (owner == address(0)) {...\"\n                        {\n                            /// @src 30:16309:16340  \"ERC721NonexistentToken(tokenId)\"\n                            let _1 := /** @src 44:606:3453  \"contract MoodNft is ERC721, Ownable {...\" */ mload(0x40)\n                            /// @src 30:16309:16340  \"ERC721NonexistentToken(tokenId)\"\n                            mstore(_1, /** @src 30:7298:7329  \"ERC721NonexistentToken(tokenId)\" */ shl(224, 0x7e273289))\n                            /// @src 44:606:3453  \"contract MoodNft is ERC721, Ownable {...\"\n                            mstore(/** @src 30:16309:16340  \"ERC721NonexistentToken(tokenId)\" */ add(_1, 4), /** @src 44:606:3453  \"contract MoodNft is ERC721, Ownable {...\" */ var_tokenId)\n                            /// @src 30:16309:16340  \"ERC721NonexistentToken(tokenId)\"\n                            revert(_1, /** @src 44:606:3453  \"contract MoodNft is ERC721, Ownable {...\" */ 36)\n                        }\n                        /// @src 30:16360:16372  \"return owner\"\n                        var := cleaned\n                    }\n                    /// @ast-id 48778 @src 30:16918:17700  \"function _checkOnERC721Received(address from, address to, uint256 tokenId, bytes memory data) private {...\"\n                    function fun_checkOnERC721Received(var_from, var_to, var_tokenId, var_data_mpos)\n                    {\n                        /// @src 30:17030:17694  \"if (to.code.length > 0) {...\"\n                        if /** @src 30:17034:17052  \"to.code.length > 0\" */ iszero(iszero(/** @src 30:17034:17048  \"to.code.length\" */ extcodesize(var_to)))\n                        /// @src 30:17030:17694  \"if (to.code.length > 0) {...\"\n                        {\n                            /// @src 44:606:3453  \"contract MoodNft is ERC721, Ownable {...\"\n                            let _1 := sub(shl(160, 1), 1)\n                            let _2 := and(/** @src 30:17072:17091  \"IERC721Receiver(to)\" */ var_to, /** @src 44:606:3453  \"contract MoodNft is ERC721, Ownable {...\" */ _1)\n                            /// @src 30:17072:17143  \"IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data)\"\n                            let _3 := /** @src 44:606:3453  \"contract MoodNft is ERC721, Ownable {...\" */ mload(64)\n                            let _4 := shl(225, 0x0a85bd01)\n                            /// @src 30:17072:17143  \"IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data)\"\n                            mstore(_3, /** @src 44:606:3453  \"contract MoodNft is ERC721, Ownable {...\" */ _4)\n                            mstore(/** @src 30:17072:17143  \"IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data)\" */ add(_3, 4), /** @src 35:735:745  \"msg.sender\" */ caller())\n                            /// @src 44:606:3453  \"contract MoodNft is ERC721, Ownable {...\"\n                            mstore(add(/** @src 30:17072:17143  \"IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data)\" */ _3, /** @src 44:606:3453  \"contract MoodNft is ERC721, Ownable {...\" */ 36), and(var_from, _1))\n                            mstore(add(/** @src 30:17072:17143  \"IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data)\" */ _3, /** @src 44:606:3453  \"contract MoodNft is ERC721, Ownable {...\" */ 68), var_tokenId)\n                            mstore(add(/** @src 30:17072:17143  \"IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data)\" */ _3, /** @src 44:606:3453  \"contract MoodNft is ERC721, Ownable {...\" */ 100), 128)\n                            /// @src 30:17072:17143  \"IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data)\"\n                            let _5 := 32\n                            let _6 := sub(/** @src 44:606:3453  \"contract MoodNft is ERC721, Ownable {...\" */ abi_encode_string(var_data_mpos, add(/** @src 30:17072:17143  \"IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data)\" */ _3, /** @src 44:606:3453  \"contract MoodNft is ERC721, Ownable {...\" */ 132)), /** @src 30:17072:17143  \"IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data)\" */ _3)\n                            /// @src 30:17051:17052  \"0\"\n                            let _7 := 0x00\n                            /// @src 30:17072:17143  \"IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data)\"\n                            let trySuccessCondition := call(gas(), _2, /** @src 30:17051:17052  \"0\" */ _7, /** @src 30:17072:17143  \"IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data)\" */ _3, _6, _3, _5)\n                            let expr := /** @src 30:17051:17052  \"0\" */ _7\n                            /// @src 30:17072:17143  \"IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data)\"\n                            if trySuccessCondition\n                            {\n                                let _8 := _5\n                                if gt(_5, returndatasize()) { _8 := returndatasize() }\n                                finalize_allocation(_3, _8)\n                                /// @src 44:606:3453  \"contract MoodNft is ERC721, Ownable {...\"\n                                if slt(sub(/** @src 30:17072:17143  \"IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data)\" */ add(_3, _8), /** @src 44:606:3453  \"contract MoodNft is ERC721, Ownable {...\" */ _3), /** @src 30:17072:17143  \"IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data)\" */ _5)\n                                /// @src 44:606:3453  \"contract MoodNft is ERC721, Ownable {...\"\n                                {\n                                    revert(/** @src 30:17051:17052  \"0\" */ _7, _7)\n                                }\n                                /// @src 44:606:3453  \"contract MoodNft is ERC721, Ownable {...\"\n                                let value := mload(_3)\n                                if iszero(eq(value, and(value, shl(224, 0xffffffff))))\n                                {\n                                    revert(/** @src 30:17051:17052  \"0\" */ _7, _7)\n                                }\n                                /// @src 30:17072:17143  \"IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data)\"\n                                expr := value\n                            }\n                            /// @src 30:17068:17684  \"try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {...\"\n                            switch iszero(trySuccessCondition)\n                            case 0 {\n                                /// @src 30:17186:17316  \"if (retval != IERC721Receiver.onERC721Received.selector) {...\"\n                                if /** @src 30:17190:17241  \"retval != IERC721Receiver.onERC721Received.selector\" */ iszero(eq(/** @src 44:606:3453  \"contract MoodNft is ERC721, Ownable {...\" */ and(/** @src 30:17190:17241  \"retval != IERC721Receiver.onERC721Received.selector\" */ expr, /** @src 44:606:3453  \"contract MoodNft is ERC721, Ownable {...\" */ shl(224, 0xffffffff)), _4))\n                                /// @src 30:17186:17316  \"if (retval != IERC721Receiver.onERC721Received.selector) {...\"\n                                {\n                                    /// @src 30:17272:17297  \"ERC721InvalidReceiver(to)\"\n                                    let _9 := /** @src 44:606:3453  \"contract MoodNft is ERC721, Ownable {...\" */ mload(64)\n                                    /// @src 30:17272:17297  \"ERC721InvalidReceiver(to)\"\n                                    mstore(_9, /** @src 30:10061:10094  \"ERC721InvalidReceiver(address(0))\" */ shl(225, 0x32505749))\n                                    /// @src 44:606:3453  \"contract MoodNft is ERC721, Ownable {...\"\n                                    mstore(/** @src 30:17272:17297  \"ERC721InvalidReceiver(to)\" */ add(_9, /** @src 30:17072:17143  \"IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data)\" */ 4), /** @src 44:606:3453  \"contract MoodNft is ERC721, Ownable {...\" */ _2)\n                                    /// @src 30:17272:17297  \"ERC721InvalidReceiver(to)\"\n                                    revert(_9, /** @src 44:606:3453  \"contract MoodNft is ERC721, Ownable {...\" */ 36)\n                                }\n                            }\n                            default /// @src 30:17068:17684  \"try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {...\"\n                            {\n                                /// @src 30:17331:17684  \"catch (bytes memory reason) {...\"\n                                let data := /** @src 30:17051:17052  \"0\" */ _7\n                                /// @src 44:606:3453  \"contract MoodNft is ERC721, Ownable {...\"\n                                switch returndatasize()\n                                case 0 { data := 96 }\n                                default {\n                                    let _10 := returndatasize()\n                                    let _11 := array_allocation_size_bytes(_10)\n                                    let memPtr := mload(64)\n                                    finalize_allocation(memPtr, _11)\n                                    mstore(memPtr, _10)\n                                    data := memPtr\n                                    returndatacopy(add(memPtr, /** @src 30:17072:17143  \"IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data)\" */ _5), /** @src 30:17051:17052  \"0\" */ _7, /** @src 44:606:3453  \"contract MoodNft is ERC721, Ownable {...\" */ returndatasize())\n                                }\n                                let _12 := mload(/** @src 30:17381:17394  \"reason.length\" */ data)\n                                /// @src 30:17377:17670  \"if (reason.length == 0) {...\"\n                                switch /** @src 30:17381:17399  \"reason.length == 0\" */ iszero(_12)\n                                case /** @src 30:17377:17670  \"if (reason.length == 0) {...\" */ 0 {\n                                    /// @src 30:17557:17652  \"assembly {...\"\n                                    revert(add(/** @src 30:17072:17143  \"IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data)\" */ _5, /** @src 30:17557:17652  \"assembly {...\" */ data), _12)\n                                }\n                                default /// @src 30:17377:17670  \"if (reason.length == 0) {...\"\n                                {\n                                    /// @src 30:17430:17455  \"ERC721InvalidReceiver(to)\"\n                                    let _13 := /** @src 44:606:3453  \"contract MoodNft is ERC721, Ownable {...\" */ mload(64)\n                                    /// @src 30:17430:17455  \"ERC721InvalidReceiver(to)\"\n                                    mstore(_13, /** @src 30:10061:10094  \"ERC721InvalidReceiver(address(0))\" */ shl(225, 0x32505749))\n                                    /// @src 44:606:3453  \"contract MoodNft is ERC721, Ownable {...\"\n                                    mstore(/** @src 30:17430:17455  \"ERC721InvalidReceiver(to)\" */ add(_13, /** @src 30:17072:17143  \"IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data)\" */ 4), /** @src 44:606:3453  \"contract MoodNft is ERC721, Ownable {...\" */ _2)\n                                    /// @src 30:17430:17455  \"ERC721InvalidReceiver(to)\"\n                                    revert(_13, /** @src 44:606:3453  \"contract MoodNft is ERC721, Ownable {...\" */ 36)\n                                }\n                            }\n                        }\n                    }\n                    /// @ast-id 48988 @src 34:476:3858  \"function encode(bytes memory data) internal pure returns (string memory) {...\"\n                    function fun_encode(var_data_48952_mpos) -> var_mpos\n                    {\n                        /// @src 34:762:793  \"if (data.length == 0) return \\\"\\\"\"\n                        if /** @src 34:766:782  \"data.length == 0\" */ iszero(/** @src 44:606:3453  \"contract MoodNft is ERC721, Ownable {...\" */ mload(/** @src 34:766:777  \"data.length\" */ var_data_48952_mpos))\n                        /// @src 34:762:793  \"if (data.length == 0) return \\\"\\\"\"\n                        {\n                            /// @src 44:606:3453  \"contract MoodNft is ERC721, Ownable {...\"\n                            let memPtr := mload(64)\n                            finalize_allocation_18857(memPtr)\n                            mstore(memPtr, /** @src 34:781:782  \"0\" */ 0x00)\n                            /// @src 34:784:793  \"return \\\"\\\"\"\n                            var_mpos := memPtr\n                            leave\n                        }\n                        /// @src 44:606:3453  \"contract MoodNft is ERC721, Ownable {...\"\n                        let memPtr_1 := mload(64)\n                        let newFreePtr := add(memPtr_1, 96)\n                        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr_1))\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x41)\n                            revert(0, 0x24)\n                        }\n                        mstore(64, newFreePtr)\n                        mstore(memPtr_1, 64)\n                        mstore(add(memPtr_1, 32), \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdef\")\n                        mstore(add(memPtr_1, 64), \"ghijklmnopqrstuvwxyz0123456789+/\")\n                        /// @src 34:1314:1325  \"data.length\"\n                        let expr := /** @src 44:606:3453  \"contract MoodNft is ERC721, Ownable {...\" */ mload(/** @src 34:1314:1325  \"data.length\" */ var_data_48952_mpos)\n                        /// @src 34:1328:1329  \"2\"\n                        let _1 := 0x02\n                        /// @src 44:606:3453  \"contract MoodNft is ERC721, Ownable {...\"\n                        let sum := add(expr, /** @src 34:1328:1329  \"2\" */ _1)\n                        /// @src 44:606:3453  \"contract MoodNft is ERC721, Ownable {...\"\n                        if gt(expr, sum)\n                        {\n                            mstore(/** @src 34:781:782  \"0\" */ 0x00, /** @src 44:606:3453  \"contract MoodNft is ERC721, Ownable {...\" */ shl(224, 0x4e487b71))\n                            mstore(4, 0x11)\n                            revert(/** @src 34:781:782  \"0\" */ 0x00, /** @src 44:606:3453  \"contract MoodNft is ERC721, Ownable {...\" */ 0x24)\n                        }\n                        /// @src 34:1333:1334  \"3\"\n                        let _2 := 0x03\n                        /// @src 34:316:382  \"\\\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\\\"\"\n                        let r := div(sum, /** @src 34:1333:1334  \"3\" */ _2)\n                        /// @src 34:316:382  \"\\\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\\\"\"\n                        let product := shl(/** @src 34:1328:1329  \"2\" */ _1, /** @src 34:316:382  \"\\\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\\\"\" */ r)\n                        if iszero(eq(r, and(r, sub(shl(254, /** @src 44:606:3453  \"contract MoodNft is ERC721, Ownable {...\" */ 1), 1))))\n                        /// @src 34:316:382  \"\\\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\\\"\"\n                        {\n                            /// @src 44:606:3453  \"contract MoodNft is ERC721, Ownable {...\"\n                            mstore(/** @src 34:781:782  \"0\" */ 0x00, /** @src 44:606:3453  \"contract MoodNft is ERC721, Ownable {...\" */ shl(224, 0x4e487b71))\n                            mstore(/** @src 34:1308:1309  \"4\" */ 0x04, /** @src 44:606:3453  \"contract MoodNft is ERC721, Ownable {...\" */ 0x11)\n                            revert(/** @src 34:781:782  \"0\" */ 0x00, /** @src 44:606:3453  \"contract MoodNft is ERC721, Ownable {...\" */ 0x24)\n                        }\n                        let _3 := array_allocation_size_bytes(product)\n                        let memPtr_2 := mload(64)\n                        finalize_allocation(memPtr_2, _3)\n                        mstore(memPtr_2, product)\n                        /// @src 34:316:382  \"\\\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\\\"\"\n                        let dataSize := array_allocation_size_bytes(product)\n                        let dataStart := add(memPtr_2, /** @src 44:606:3453  \"contract MoodNft is ERC721, Ownable {...\" */ 32)\n                        /// @src 34:316:382  \"\\\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\\\"\"\n                        calldatacopy(dataStart, calldatasize(), add(dataSize, /** @src 44:606:3453  \"contract MoodNft is ERC721, Ownable {...\" */ not(31)))\n                        /// @src 34:1390:3828  \"assembly {...\"\n                        let usr$resultPtr := dataStart\n                        let usr$dataPtr := var_data_48952_mpos\n                        let usr$endPtr := add(var_data_48952_mpos, mload(var_data_48952_mpos))\n                        let usr$afterPtr := add(usr$endPtr, /** @src 44:606:3453  \"contract MoodNft is ERC721, Ownable {...\" */ 32)\n                        /// @src 34:1390:3828  \"assembly {...\"\n                        let usr$afterCache := mload(usr$afterPtr)\n                        mstore(usr$afterPtr, /** @src 34:781:782  \"0\" */ 0x00)\n                        /// @src 34:1390:3828  \"assembly {...\"\n                        for { } lt(usr$dataPtr, usr$endPtr) { }\n                        {\n                            usr$dataPtr := add(usr$dataPtr, /** @src 34:1333:1334  \"3\" */ _2)\n                            /// @src 34:1390:3828  \"assembly {...\"\n                            let usr$input := mload(usr$dataPtr)\n                            let _4 := 1\n                            let _5 := 0x3F\n                            mstore8(usr$resultPtr, mload(add(add(memPtr_1, and(shr(18, usr$input), _5)), _4)))\n                            mstore8(add(usr$resultPtr, _4), mload(add(add(memPtr_1, and(shr(12, usr$input), _5)), _4)))\n                            mstore8(add(usr$resultPtr, /** @src 34:1328:1329  \"2\" */ _1), /** @src 34:1390:3828  \"assembly {...\" */ mload(add(add(memPtr_1, and(shr(6, usr$input), _5)), _4)))\n                            mstore8(add(usr$resultPtr, /** @src 34:1333:1334  \"3\" */ _2), /** @src 34:1390:3828  \"assembly {...\" */ mload(add(add(memPtr_1, and(usr$input, _5)), _4)))\n                            usr$resultPtr := add(usr$resultPtr, /** @src 34:1308:1309  \"4\" */ 0x04)\n                        }\n                        /// @src 34:1390:3828  \"assembly {...\"\n                        mstore(usr$afterPtr, usr$afterCache)\n                        switch mod(mload(var_data_48952_mpos), /** @src 34:1333:1334  \"3\" */ _2)\n                        case /** @src 34:1390:3828  \"assembly {...\" */ 1 {\n                            mstore8(add(usr$resultPtr, /** @src 44:606:3453  \"contract MoodNft is ERC721, Ownable {...\" */ not(0)), /** @src 34:1390:3828  \"assembly {...\" */ 0x3d)\n                            mstore8(add(usr$resultPtr, not(/** @src 44:606:3453  \"contract MoodNft is ERC721, Ownable {...\" */ 1)), /** @src 34:1390:3828  \"assembly {...\" */ 0x3d)\n                        }\n                        case 2 {\n                            mstore8(add(usr$resultPtr, /** @src 44:606:3453  \"contract MoodNft is ERC721, Ownable {...\" */ not(0)), /** @src 34:1390:3828  \"assembly {...\" */ 0x3d)\n                        }\n                        /// @src 34:3838:3851  \"return result\"\n                        var_mpos := memPtr_2\n                    }\n                }\n                data \".metadata\" hex\"a164736f6c6343000814000a\"\n            }\n        }\n        data \".metadata\" hex\"a164736f6c6343000814000a\"\n    }\n}\n","hash":"0100011b8dedc04e0dff89b013370401ca8e9c06898fb86244b2cec83efa271d","factoryDependencies":{"0100036d2b6534332884124b865b03daa5fb3847cc0d3378512d7ec772b19644":"src/MoodNft.sol:MoodNft"},"id":41}