{"abi":null,"bytecode":{"object":"00030000000000020003000000000002000000000301001900000060033002700000008d03300197000200000031035500010000000103550000008004000039000000400040043f0000000102200190000000390000c13d000000040230008c000001370000413d000000000201043b000000e0022002700000008f0420009c000000410000213d000000970420009c000000620000213d0000009b0120009c000000c10000613d0000009c0120009c000000da0000613d0000009d0120009c000001370000c13d0000000001000416000000000101004b000001370000c13d0000000001030019022f018c0000040f000300000001001d000200000002001d022f01bd0000040f0000000012010434022f020f0000040f000000a003100197000000400100043d000100000001001d000000200210003900000000003204350000004402100039000000020300002900000000003204350000000302000029000000a40320019700000024021000390000000000320435000000440200003900000000002104350000006402000039022f01aa0000040f0000002001000039000000400200043d000300000002001d00000000021204360000000101000029000000ff0000013d0000000001000416000000000101004b000001370000c13d0000002001000039000001000010044300000120000004430000008e01000041000002300001042e000000900420009c0000009a0000213d000000940420009c000000e10000613d000000950420009c000000ef0000613d000000960220009c000001370000c13d0000000002000416000000440330008c000001370000413d000000000202004b000001370000c13d0000000402100370000000000202043b000000a40320009c000001370000213d0000002401100370000000000101043b0000009e03000041000000a00030043f000000a40020043f000000c40010043f0000004401000039000000800010043f0000010001000039000000400010043f00000000010004140000000002000410000000040320008c000001390000c13d0000000101000039000001440000013d000000980420009c000000f70000613d000000990420009c0000010b0000613d0000009a0220009c000001370000c13d0000000002000416000000440330008c000001370000413d000000000202004b000001370000c13d0000000402100370000000000402043b000000a40240009c000001370000213d0000002401100370000000000101043b000200000001001d000000c001000039000000400010043f0000001901000039000000800010043f000000a701000041000000a00010043f0000008d0100004100000000020004140000008d0320009c0000000002018019000000c001200210000000a8011001c70000801002000039000300000004001d022f022a0000040f00000003040000290000000102200190000001370000613d000000000101043b000000400200043d000000440320003900000002050000290000000000530435000000a003100197000000200120003900000000003104350000002403200039000000000043043500000044030000390000000000320435000000a90320009c0000014d0000413d000000aa0100004100000000001004350000004101000039000000040010043f000000ab010000410000023100010430000000910420009c0000011a0000613d000000920420009c000001220000613d000000930120009c000001370000c13d0000000001000416000000000101004b000001370000c13d0000009e01000041000000a00010043f0000000001000410000000a40010043f0000007b01000039000000c40010043f0000004401000039000000800010043f000000a00100043d0000009f01100197000000a30200043d000000a20300043d000000a10400043d000001200010043f0000009f01400197000001210010043f0000009f01300197000001220010043f0000009f01200197000001230010043f0000000401000039000001000010043f0000014001000039000000400010043f0000010001000039022f02050000040f000000a001100197000001400010043f000000a101000041000002300001042e0000000001000416000000000101004b000001370000c13d0000009e01000041000000a00010043f0000000001000410000000a40010043f0000007b01000039000000c40010043f0000004401000039000000800010043f0000010001000039000000400010043f0000002001000039000001000010043f00000080010000390000012002000039022f01790000040f000001000110008a0000008d020000410000008d0310009c00000000010280190000006001100210000000ad011001c7000002300001042e0000000001000416000000000101004b000001370000c13d0000009e01000041000000800010043f000000a301000041000002300001042e0000000001000416000000000101004b000001370000c13d0000000001030019022f018c0000040f000000000300041a000000a603300197000000a401100197000000000113019f000000000010041b0000000101000039000000000021041b0000000001000019000002300001042e0000000001000416000000000101004b000001370000c13d000000000100041a000000a401100197000000800010043f000000a301000041000002300001042e0000000001000416000000000101004b000001370000c13d022f01bd0000040f0000002002000039000000400300043d000300000003001d0000000002230436022f01790000040f000000030400002900000000014100490000008d020000410000008d0310009c00000000010280190000008d0340009c000000000402801900000040024002100000006001100210000000000121019f000002300001042e0000000001000416000000000101004b000001370000c13d022f01bd0000040f0000000012010434022f020f0000040f000000a001100197000000400200043d00000000001204350000008d010000410000008d0320009c00000000020180190000004001200210000000ac011001c7000002300001042e0000000001000416000000000101004b000001370000c13d0000000101000039000000000101041a000000800010043f000000a301000041000002300001042e0000000002000416000000240430008c000001370000413d000000000202004b000001370000c13d0000000402100370000000000202043b000000a20420009c000001370000213d0000002304200039000000000434004b000001370000813d0000000404200039000000000541034f000000000505043b000000a20650009c000001370000213d00000000025200190000002402200039000000000232004b000001560000a13d000000000100001900000231000104300000008d030000410000008d0410009c0000000001038019000000c001100210000000a5011001c7022f02250000040f000000000301001900000060033002700000008d0030019d0002000000010355000000010120018f000200000001001d022f01ce0000040f022f02050000040f0000000002010019000000400100043d000300000001001d0000000203000029022f01a10000040f000001000000013d0000008003200039000000400030043f000000000402043300000000030004140000000002000410000000040520008c0000015d0000c13d00000001010000390000016f0000013d0000002002400039000000000121034f000000000101043b000000a001100197000000800010043f000000a301000041000002300001042e0000008d050000410000008d0610009c000000000105801900000040011002100000008d0640009c00000000040580190000006004400210000000000114019f0000008d0430009c0000000003058019000000c003300210000000000113019f022f02250000040f000000000301001900000060033002700000008d0030019d0002000000010355000000010120018f000300000001001d022f01ce0000040f022f02050000040f0000000002010019000000400100043d000200000001001d0000000303000029022f01a10000040f0000000204000029000001010000013d00000000430104340000000001320436000000000203004b000001850000613d000000000200001900000000052100190000000006240019000000000606043300000000006504350000002002200039000000000532004b0000017e0000413d000000000231001900000000000204350000001f02300039000000200300008a000000000232016f0000000001210019000000000001042d000000ae02000041000000430310008c00000000030000190000000003022019000000ae01100197000000000401004b0000000002008019000000ae0110009c000000000203c019000000000102004b0000019f0000613d00000001020003670000000401200370000000000101043b000000a40310009c0000019f0000213d0000002402200370000000000202043b000000000001042d00000000010000190000023100010430000000000303004b0000000003000019000000010300c03900000020041000390000000000340435000000a00220019700000000002104350000004001100039000000000001042d0000001f02200039000000200300008a000000000232016f0000000001120019000000000221004b00000000020000190000000102004039000000a20310009c000001b70000213d0000000102200190000001b70000c13d000000400010043f000000000001042d000000aa0100004100000000001004350000004101000039000000040010043f000000ab010000410000023100010430000000400100043d000000af0210009c000001c80000813d0000004002100039000000400020043f0000002002100039000000a703000041000000000032043500000019020000390000000000210435000000000001042d000000aa0100004100000000001004350000004101000039000000040010043f000000ab0100004100000231000104300000000004000032000001fd0000613d0000001f01400039000000200200008a000000000121016f0000003f01100039000000000221016f000000400100043d0000000002210019000000000312004b00000000030000190000000103004039000000a20520009c000001ff0000213d0000000103300190000001ff0000c13d000000400020043f0000001f0240018f000000000341043600000002050003670000000504400272000001ed0000613d000000000600001900000005076002100000000008730019000000000775034f000000000707043b00000000007804350000000106600039000000000746004b000001e50000413d000000000602004b000001fe0000613d0000000504400210000000000545034f00000000034300190000000302200210000000000403043300000000042401cf000000000424022f000000000505043b0000010002200089000000000525022f00000000022501cf000000000242019f0000000000230435000000000001042d0000006001000039000000000001042d000000aa0100004100000000001004350000004101000039000000040010043f000000ab010000410000023100010430000000002101043400000003031002100000002003300089000000a00400004100000000033401cf000000040110008c00000000030480190000000001020433000000000131016f000000000001042d0000008d030000410000008d0410009c000000000103801900000040011002100000008d0420009c00000000020380190000006002200210000000000112019f00000000020004140000008d0420009c0000000002038019000000c002200210000000000112019f000000b0011001c70000801002000039022f022a0000040f0000000102200190000002230000613d000000000101043b000000000001042d0000000001000019000002310001043000000228002104210000000102000039000000000001042d0000000002000019000000000001042d0000022d002104230000000102000039000000000001042d0000000002000019000000000001042d0000022f00000432000002300001042e00000231000104300000000000000000000000000000000000000000000000000000000000000000000000000000000000000000ffffffff000000020000000000000000000000000000004000000100000000000000000000000000000000000000000000000000000000000000000000000000a9059cba00000000000000000000000000000000000000000000000000000000c6e93bac00000000000000000000000000000000000000000000000000000000c6e93bad00000000000000000000000000000000000000000000000000000000ce6eb7ff00000000000000000000000000000000000000000000000000000000fbf6d51500000000000000000000000000000000000000000000000000000000a9059cbb00000000000000000000000000000000000000000000000000000000aad229d500000000000000000000000000000000000000000000000000000000b20d944600000000000000000000000000000000000000000000000000000000852d52f900000000000000000000000000000000000000000000000000000000852d52fa000000000000000000000000000000000000000000000000000000009a41d3ad00000000000000000000000000000000000000000000000000000000a5694e4a000000000000000000000000000000000000000000000000000000000bf9aa4c0000000000000000000000000000000000000000000000000000000025435a56000000000000000000000000000000000000000000000000000000007c0c5f23a9059cbb00000000000000000000000000000000000000000000000000000000ff00000000000000000000000000000000000000000000000000000000000000ffffffff000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000020000001400000000000000000000000000000000000000000000000000000000000000000ffffffffffffffff0000000000000000000000000000000000000020000000800000000000000000000000000000000000000000ffffffffffffffffffffffffffffffffffffffff0000000000000000000000000000000000000044000000a00000000000000000ffffffffffffffffffffffff00000000000000000000000000000000000000007472616e7366657228616464726573732c75696e7432353629000000000000000200000000000000000000000000000000000019000000a00000000000000000000000000000000000000000000000000000000000000000ffffffffffffff804e487b71000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000024000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000000000010000000000000000008000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000ffffffffffffffc00200000000000000000000000000000000000000000000000000000000000000"},"assembly":"\t.text\n\t.file\t\"CallAnything.sol:CallAnything\"\n\t.globl\t__entry\n__entry:\n.func_begin0:\n\tnop\tstack+=[3]\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tptr.add\tr1, r3, stack[@ptr_return_data]\n\tptr.add\tr1, r0, stack[@ptr_calldata]\n\tadd\t128, r0, r4\n\tst.1\t64, r4\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB0_1\n\tsub.s!\t4, r3, r2\n\tjump.lt\t@.BB0_2\n\tld\tr1, r2\n\tshr.s\t224, r2, r2\n\tsub.s!\t@CPI0_2[0], r2, r4\n\tjump.gt\t@.BB0_13\n\tsub.s!\t@CPI0_10[0], r2, r4\n\tjump.gt\t@.BB0_10\n\tsub.s!\t@CPI0_14[0], r2, r1\n\tjump.eq\t@.BB0_20\n\tsub.s!\t@CPI0_15[0], r2, r1\n\tjump.eq\t@.BB0_22\n\tsub.s!\t@CPI0_16[0], r2, r1\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\tr3, r0, r1\n\tnear_call\tr0, @abi_decode_addresst_uint256, @DEFAULT_UNWIND\n\tadd\tr1, r0, stack-[3]\n\tadd\tr2, r0, stack-[2]\n\tnear_call\tr0, @copy_literal_to_memory_a9059cbb2ab09eb219583f4a59a5d0623ade346d962bcd4e46b11da047c9049b, @DEFAULT_UNWIND\n\tld.1.inc\tr1, r2, r1\n\tnear_call\tr0, @__sha3, @DEFAULT_UNWIND\n\tand\t@CPI0_19[0], r1, r3\n\tld.1\t64, r1\n\tadd\tr1, r0, stack-[1]\n\tadd\t32, r1, r2\n\tst.1\tr2, r3\n\tadd\t68, r1, r2\n\tadd\tstack-[2], r0, r3\n\tst.1\tr2, r3\n\tadd\tstack-[3], r0, r2\n\tand\t@CPI0_23[0], r2, r3\n\tadd\t36, r1, r2\n\tst.1\tr2, r3\n\tadd\t68, r0, r2\n\tst.1\tr1, r2\n\tadd\t100, r0, r2\n\tnear_call\tr0, @finalize_allocation, @DEFAULT_UNWIND\n\tadd\t32, r0, r1\n\tld.1\t64, r2\n\tadd\tr2, r0, stack-[3]\n\tst.1.inc\tr2, r1, r2\n\tadd\tstack-[1], r0, r1\n\tjump\t@.BB0_29\n.BB0_1:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t32, r0, r1\n\tst.2\t256, r1\n\tst.2\t288, r0\n\tadd\t@CPI0_1[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_13:\n\tsub.s!\t@CPI0_3[0], r2, r4\n\tjump.gt\t@.BB0_17\n\tsub.s!\t@CPI0_7[0], r2, r4\n\tjump.eq\t@.BB0_45\n\tsub.s!\t@CPI0_8[0], r2, r4\n\tjump.eq\t@.BB0_47\n\tsub.s!\t@CPI0_9[0], r2, r2\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr2\n\tsub.s!\t68, r3, r3\n\tjump.lt\t@.BB0_2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tptr.add.s\t4, r1, r2\n\tld\tr2, r2\n\tsub.s!\t@CPI0_23[0], r2, r3\n\tjump.gt\t@.BB0_2\n\tptr.add.s\t36, r1, r1\n\tld\tr1, r1\n\tadd\t@CPI0_17[0], r0, r3\n\tst.1\t160, r3\n\tst.1\t164, r2\n\tst.1\t196, r1\n\tadd\t68, r0, r1\n\tst.1\t128, r1\n\tadd\t256, r0, r1\n\tst.1\t64, r1\n\tcontext.gas_left\tr1\n\tcontext.this\tr2\n\tsub.s!\t4, r2, r3\n\tjump.ne\t@.BB0_56\n\tadd\t1, r0, r1\n\tjump\t@.BB0_54\n.BB0_10:\n\tsub.s!\t@CPI0_11[0], r2, r4\n\tjump.eq\t@.BB0_27\n\tsub.s!\t@CPI0_12[0], r2, r4\n\tjump.eq\t@.BB0_32\n\tsub.s!\t@CPI0_13[0], r2, r2\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr2\n\tsub.s!\t68, r3, r3\n\tjump.lt\t@.BB0_2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tptr.add.s\t4, r1, r2\n\tld\tr2, r4\n\tsub.s!\t@CPI0_23[0], r4, r2\n\tjump.gt\t@.BB0_2\n\tptr.add.s\t36, r1, r1\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[2]\n\tadd\t192, r0, r1\n\tst.1\t64, r1\n\tadd\t25, r0, r1\n\tst.1\t128, r1\n\tadd\t@CPI0_26[0], r0, r1\n\tst.1\t160, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_27[0], r1, r1\n\tadd\t32784, r0, r2\n\tadd\tr4, r0, stack-[3]\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[3], r0, r4\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tld.1\t64, r2\n\tadd\t68, r2, r3\n\tadd\tstack-[2], r0, r5\n\tst.1\tr3, r5\n\tand\t@CPI0_19[0], r1, r3\n\tadd\t32, r2, r1\n\tst.1\tr1, r3\n\tadd\t36, r2, r3\n\tst.1\tr3, r4\n\tadd\t68, r0, r3\n\tst.1\tr2, r3\n\tsub.s!\t@CPI0_28[0], r2, r3\n\tjump.lt\t@.BB0_40\n\tadd\t@CPI0_29[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI0_30[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_17:\n\tsub.s!\t@CPI0_4[0], r2, r4\n\tjump.eq\t@.BB0_57\n\tsub.s!\t@CPI0_5[0], r2, r4\n\tjump.eq\t@.BB0_59\n\tsub.s!\t@CPI0_6[0], r2, r1\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t@CPI0_17[0], r0, r1\n\tst.1\t160, r1\n\tcontext.this\tr1\n\tst.1\t164, r1\n\tadd\t123, r0, r1\n\tst.1\t196, r1\n\tadd\t68, r0, r1\n\tst.1\t128, r1\n\tld.1\t160, r1\n\tand\t@CPI0_18[0], r1, r1\n\tld.1\t163, r2\n\tld.1\t162, r3\n\tld.1\t161, r4\n\tst.1\t288, r1\n\tand\t@CPI0_18[0], r4, r1\n\tst.1\t289, r1\n\tand\t@CPI0_18[0], r3, r1\n\tst.1\t290, r1\n\tand\t@CPI0_18[0], r2, r1\n\tst.1\t291, r1\n\tadd\t4, r0, r1\n\tst.1\t256, r1\n\tadd\t320, r0, r1\n\tst.1\t64, r1\n\tadd\t256, r0, r1\n\tnear_call\tr0, @convert_bytes_to_fixedbytes_from_bytes_to_bytes4, @DEFAULT_UNWIND\n\tand\t@CPI0_19[0], r1, r1\n\tst.1\t320, r1\n\tadd\t@CPI0_20[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_20:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t@CPI0_17[0], r0, r1\n\tst.1\t160, r1\n\tcontext.this\tr1\n\tst.1\t164, r1\n\tadd\t123, r0, r1\n\tst.1\t196, r1\n\tadd\t68, r0, r1\n\tst.1\t128, r1\n\tadd\t256, r0, r1\n\tst.1\t64, r1\n\tadd\t32, r0, r1\n\tst.1\t256, r1\n\tadd\t128, r0, r1\n\tadd\t288, r0, r2\n\tnear_call\tr0, @abi_encode_bytes, @DEFAULT_UNWIND\n\tsub.s\t256, r1, r1\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t96, r1, r1\n\tor\t@CPI0_32[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_22:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t@CPI0_17[0], r0, r1\n\tst.1\t128, r1\n\tadd\t@CPI0_22[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_45:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\tr3, r0, r1\n\tnear_call\tr0, @abi_decode_addresst_uint256, @DEFAULT_UNWIND\n\tsload\tr0, r3\n\tand\t@CPI0_25[0], r3, r3\n\tand\t@CPI0_23[0], r1, r1\n\tor\tr3, r1, r1\n\tsstore\tr0, r1\n\tadd\t1, r0, r1\n\tsstore\tr1, r2\n\tadd\tr0, r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_47:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tsload\tr0, r1\n\tand\t@CPI0_23[0], r1, r1\n\tst.1\t128, r1\n\tadd\t@CPI0_22[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_27:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tnear_call\tr0, @copy_literal_to_memory_a9059cbb2ab09eb219583f4a59a5d0623ade346d962bcd4e46b11da047c9049b, @DEFAULT_UNWIND\n\tadd\t32, r0, r2\n\tld.1\t64, r3\n\tadd\tr3, r0, stack-[3]\n\tst.1.inc\tr3, r2, r2\n.BB0_29:\n\tnear_call\tr0, @abi_encode_bytes, @DEFAULT_UNWIND\n.BB0_30:\n\tadd\tstack-[3], r0, r4\n.BB0_31:\n\tsub\tr1, r4, r1\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd.ge\tr2, r0, r4\n\tshl.s\t64, r4, r2\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_32:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tnear_call\tr0, @copy_literal_to_memory_a9059cbb2ab09eb219583f4a59a5d0623ade346d962bcd4e46b11da047c9049b, @DEFAULT_UNWIND\n\tld.1.inc\tr1, r2, r1\n\tnear_call\tr0, @__sha3, @DEFAULT_UNWIND\n\tand\t@CPI0_19[0], r1, r1\n\tld.1\t64, r2\n\tst.1\tr2, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t64, r2, r1\n\tor\t@CPI0_31[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_57:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t1, r0, r1\n\tsload\tr1, r1\n\tst.1\t128, r1\n\tadd\t@CPI0_22[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_59:\n\tcontext.get_context_u128\tr2\n\tsub.s!\t36, r3, r4\n\tjump.lt\t@.BB0_2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tptr.add.s\t4, r1, r2\n\tld\tr2, r2\n\tsub.s!\t@CPI0_21[0], r2, r4\n\tjump.gt\t@.BB0_2\n\tadd\t35, r2, r4\n\tsub!\tr4, r3, r4\n\tjump.ge\t@.BB0_2\n\tadd\t4, r2, r4\n\tptr.add\tr1, r4, r5\n\tld\tr5, r5\n\tsub.s!\t@CPI0_21[0], r5, r6\n\tjump.gt\t@.BB0_2\n\tadd\tr2, r5, r2\n\tadd\t36, r2, r2\n\tsub!\tr2, r3, r2\n\tjump.le\t@.BB0_65\n.BB0_2:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_56:\n\tadd\t@CPI0_0[0], r0, r3\n\tsub.s!\t@CPI0_0[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_24[0], r1, r1\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand\t1, r2, r1\n.BB0_54:\n\tadd\tr1, r0, stack-[2]\n\tnear_call\tr0, @extract_returndata, @DEFAULT_UNWIND\n\tnear_call\tr0, @convert_bytes_to_fixedbytes_from_bytes_to_bytes4, @DEFAULT_UNWIND\n\tadd\tr1, r0, r2\n\tld.1\t64, r1\n\tadd\tr1, r0, stack-[3]\n\tadd\tstack-[2], r0, r3\n\tnear_call\tr0, @abi_encode_bytes4_bool, @DEFAULT_UNWIND\n\tjump\t@.BB0_30\n.BB0_40:\n\tadd\t128, r2, r3\n\tst.1\t64, r3\n\tld.1\tr2, r4\n\tcontext.gas_left\tr3\n\tcontext.this\tr2\n\tsub.s!\t4, r2, r5\n\tjump.ne\t@.BB0_44\n\tadd\t1, r0, r1\n\tjump\t@.BB0_42\n.BB0_65:\n\tadd\t32, r4, r2\n\tptr.add\tr1, r2, r1\n\tld\tr1, r1\n\tand\t@CPI0_19[0], r1, r1\n\tst.1\t128, r1\n\tadd\t@CPI0_22[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_44:\n\tadd\t@CPI0_0[0], r0, r5\n\tsub.s!\t@CPI0_0[0], r1, r6\n\tadd.ge\tr5, r0, r1\n\tshl.s\t64, r1, r1\n\tsub.s!\t@CPI0_0[0], r4, r6\n\tadd.ge\tr5, r0, r4\n\tshl.s\t96, r4, r4\n\tor\tr4, r1, r1\n\tsub.s!\t@CPI0_0[0], r3, r4\n\tadd.ge\tr5, r0, r3\n\tshl.s\t192, r3, r3\n\tor\tr3, r1, r1\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand\t1, r2, r1\n.BB0_42:\n\tadd\tr1, r0, stack-[3]\n\tnear_call\tr0, @extract_returndata, @DEFAULT_UNWIND\n\tnear_call\tr0, @convert_bytes_to_fixedbytes_from_bytes_to_bytes4, @DEFAULT_UNWIND\n\tadd\tr1, r0, r2\n\tld.1\t64, r1\n\tadd\tr1, r0, stack-[2]\n\tadd\tstack-[3], r0, r3\n\tnear_call\tr0, @abi_encode_bytes4_bool, @DEFAULT_UNWIND\n\tadd\tstack-[2], r0, r4\n\tjump\t@.BB0_31\n.func_end0:\n\nabi_encode_bytes:\n.func_begin1:\n\tld.1.inc\tr1, r3, r4\n\tst.1.inc\tr2, r3, r1\n\tsub!\tr3, r0, r2\n\tjump.eq\t@.BB1_3\n\tadd\tr0, r0, r2\n.BB1_2:\n\tadd\tr1, r2, r5\n\tadd\tr4, r2, r6\n\tld.1\tr6, r6\n\tst.1\tr5, r6\n\tadd\t32, r2, r2\n\tsub!\tr2, r3, r5\n\tjump.lt\t@.BB1_2\n.BB1_3:\n\tadd\tr1, r3, r2\n\tst.1\tr2, r0\n\tadd\t31, r3, r2\n\tsub.s\t32, r0, r3\n\tand\tr2, r3, r2\n\tadd\tr1, r2, r1\n\tret\n.func_end1:\n\nabi_decode_addresst_uint256:\n.func_begin2:\n\tadd\t@CPI2_0[0], r0, r2\n\tsub.s!\t67, r1, r3\n\tadd\tr0, r0, r3\n\tadd.gt\tr2, r0, r3\n\tand\t@CPI2_0[0], r1, r1\n\tsub!\tr1, r0, r4\n\tadd.ge\tr0, r0, r2\n\tsub.s!\t@CPI2_0[0], r1, r1\n\tadd.ne\tr3, r0, r2\n\tsub!\tr2, r0, r1\n\tjump.eq\t@.BB2_1\n\tptr.add\tstack[@ptr_calldata], r0, r2\n\tptr.add.s\t4, r2, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI2_1[0], r1, r3\n\tjump.gt\t@.BB2_1\n\tptr.add.s\t36, r2, r2\n\tld\tr2, r2\n\tret\n.BB2_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end2:\n\nabi_encode_bytes4_bool:\n.func_begin3:\n\tsub!\tr3, r0, r3\n\tadd\t0, r0, r3\n\tadd.ne\t1, r0, r3\n\tadd\t32, r1, r4\n\tst.1\tr4, r3\n\tand\t@CPI3_0[0], r2, r2\n\tst.1\tr1, r2\n\tadd\t64, r1, r1\n\tret\n.func_end3:\n\nfinalize_allocation:\n.func_begin4:\n\tadd\t31, r2, r2\n\tsub.s\t32, r0, r3\n\tand\tr2, r3, r2\n\tadd\tr2, r1, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI4_0[0], r1, r3\n\tjump.gt\t@.BB4_2\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB4_2\n\tst.1\t64, r1\n\tret\n.BB4_2:\n\tadd\t@CPI4_1[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI4_2[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end4:\n\ncopy_literal_to_memory_a9059cbb2ab09eb219583f4a59a5d0623ade346d962bcd4e46b11da047c9049b:\n.func_begin5:\n\tld.1\t64, r1\n\tsub.s!\t@CPI5_0[0], r1, r2\n\tjump.ge\t@.BB5_1\n\tadd\t64, r1, r2\n\tst.1\t64, r2\n\tadd\t32, r1, r2\n\tadd\t@CPI5_1[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t25, r0, r2\n\tst.1\tr1, r2\n\tret\n.BB5_1:\n\tadd\t@CPI5_2[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI5_3[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end5:\n\nextract_returndata:\n.func_begin6:\n\tadd!\tstack[@returndatasize], r0, r4\n\tjump.eq\t@.BB6_8\n\tadd\t31, r4, r1\n\tsub.s\t32, r0, r2\n\tand\tr1, r2, r1\n\tadd\t63, r1, r1\n\tand\tr1, r2, r2\n\tld.1\t64, r1\n\tadd\tr1, r2, r2\n\tsub!\tr2, r1, r3\n\tadd\t0, r0, r3\n\tadd.lt\t1, r0, r3\n\tsub.s!\t@CPI6_0[0], r2, r5\n\tjump.gt\t@.BB6_10\n\tand!\t1, r3, r3\n\tjump.ne\t@.BB6_10\n\tst.1\t64, r2\n\tand\t31, r4, r2\n\tst.1.inc\tr1, r4, r3\n\tptr.add\tstack[@ptr_return_data], r0, r5\n\tshr.s!\t5, r4, r4\n\tjump.eq\t@.BB6_6\n\tadd\tr0, r0, r6\n.BB6_5:\n\tshl.s\t5, r6, r7\n\tadd\tr3, r7, r8\n\tptr.add\tr5, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r4, r7\n\tjump.lt\t@.BB6_5\n.BB6_6:\n\tsub!\tr2, r0, r6\n\tjump.eq\t@.BB6_9\n\tshl.s\t5, r4, r4\n\tptr.add\tr5, r4, r5\n\tadd\tr3, r4, r3\n\tshl.s\t3, r2, r2\n\tld.1\tr3, r4\n\tshl\tr4, r2, r4\n\tshr\tr4, r2, r4\n\tld\tr5, r5\n\tsub\t256, r2, r2\n\tshr\tr5, r2, r5\n\tshl\tr5, r2, r2\n\tor\tr2, r4, r2\n\tst.1\tr3, r2\n\tret\n.BB6_8:\n\tadd\t96, r0, r1\n.BB6_9:\n\tret\n.BB6_10:\n\tadd\t@CPI6_1[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI6_2[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end6:\n\nconvert_bytes_to_fixedbytes_from_bytes_to_bytes4:\n.func_begin7:\n\tld.1.inc\tr1, r1, r2\n\tshl.s\t3, r1, r3\n\tsub\t32, r3, r3\n\tadd\t@CPI7_0[0], r0, r4\n\tshl\tr4, r3, r3\n\tsub.s!\t4, r1, r1\n\tadd.ge\tr4, r0, r3\n\tld.1\tr2, r1\n\tand\tr1, r3, r1\n\tret\n.func_end7:\n\n__sha3:\n.func_begin8:\n\tadd\t@CPI8_0[0], r0, r3\n\tsub.s!\t@CPI8_0[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tshl.s\t64, r1, r1\n\tsub.s!\t@CPI8_0[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t96, r2, r2\n\tor\tr2, r1, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI8_0[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI8_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB8_2\n\tld\tr1, r1\n\tret\n.BB8_2:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end8:\n\n__farcall:\n.func_begin9:\n.tmp0:\n\tfar_call\tr1, r2, @.BB9_2\n.tmp1:\n\tadd\t1, r0, r2\n\tret\n.BB9_2:\n.tmp2:\n\tadd\tr0, r0, r2\n\tret\n.func_end9:\n\n__staticcall:\n.func_begin10:\n.tmp3:\n\tfar_call.static\tr1, r2, @.BB10_2\n.tmp4:\n\tadd\t1, r0, r2\n\tret\n.BB10_2:\n.tmp5:\n\tadd\tr0, r0, r2\n\tret\n.func_end10:\n\n\t.data\n\t.p2align\t5, 0x0\nreturndatasize:\n\t.cell 0\n\n\t.p2align\t5, 0x0\nptr_calldata:\n.cell\t0\n\n\t.p2align\t5, 0x0\nptr_return_data:\n.cell\t0\n\n\t.note.GNU-stack\n\t.rodata\nCPI0_0:\nCPI8_0:\n\t.cell 4294967295\nCPI0_1:\n\t.cell 53919893334301279589334030174039261352344891250716429051063678533632\nCPI0_2:\n\t.cell 2835717306\nCPI0_3:\n\t.cell 3337173932\nCPI0_4:\n\t.cell 3337173933\nCPI0_5:\n\t.cell 3463362559\nCPI0_6:\n\t.cell 4227257621\nCPI0_7:\n\t.cell 2835717307\nCPI0_8:\n\t.cell 2865899989\nCPI0_9:\n\t.cell 2987234374\nCPI0_10:\n\t.cell 2234340089\nCPI0_11:\n\t.cell 2234340090\nCPI0_12:\n\t.cell 2588005293\nCPI0_13:\n\t.cell 2775141962\nCPI0_14:\n\t.cell 200911436\nCPI0_15:\n\t.cell 625171030\nCPI0_16:\n\t.cell 2081185571\nCPI0_17:\n\t.cell -39341301877480157781710804024396230103289065588583741745104145964028735258624\nCPI0_18:\n\t.cell -452312848583266388373324160190187140051835877600158453279131187530910662656\nCPI0_19:\nCPI3_0:\nCPI7_0:\n\t.cell -26959946667150639794667015087019630673637144422540572481103610249216\nCPI0_20:\n\t.cell 2535301206359416906580462927872\nCPI0_21:\nCPI4_0:\nCPI6_0:\n\t.cell 18446744073709551615\nCPI0_22:\n\t.cell 2535301202817642044428229017600\nCPI0_23:\nCPI2_1:\n\t.cell 1461501637330902918203684832716283019655932542975\nCPI0_24:\n\t.cell 5387515053921454008154516881408\nCPI0_25:\n\t.cell -1461501637330902918203684832716283019655932542976\nCPI0_26:\nCPI5_1:\n\t.cell 52670383448186445861553817759887498218675746408080920759387454194053457903616\nCPI0_27:\n\t.cell 904625697166532776746648320380374280103671757181020972366349866693948342272\nCPI0_28:\n\t.cell 18446744073709551488\nCPI0_29:\nCPI4_1:\nCPI5_2:\nCPI6_1:\n\t.cell 35408467139433450592217433187231851964531694900788300625387963629091585785856\nCPI0_30:\nCPI4_2:\nCPI5_3:\nCPI6_2:\n\t.cell 2852213850513516153367582212096\nCPI0_31:\n\t.cell 2535301200456458802993406410752\nCPI0_32:\n\t.cell 4722366482869645213696\nCPI2_0:\n\t.cell -57896044618658097711785492504343953926634992332820282019728792003956564819968\nCPI5_0:\n\t.cell 18446744073709551552\nCPI8_1:\n\t.cell 904625697166532776746648320380374280103671755200316906558262375061821325312\n","methodIdentifiers":{"callTransferFunctionDirectly(address,uint256)":"a5694e4a","callTransferFunctionDirectlyTwo(address,uint256)":"b20d9446","getCallData()":"0bf9aa4c","getDataToCallTransfer(address,uint256)":"7c0c5f23","getSelectorFour()":"25435a56","getSelectorOne()":"9a41d3ad","getSelectorThree(bytes)":"ce6eb7ff","getSelectorTwo()":"fbf6d515","getSignatureOne()":"852d52fa","s_amount()":"c6e93bad","s_someAddress()":"aad229d5","transfer(address,uint256)":"a9059cbb"},"metadata":{"optimizer_settings":{"is_debug_logging_enabled":false,"is_fallback_to_size_enabled":false,"is_system_request_memoization_disabled":false,"is_verify_each_enabled":false,"jump_table_density_threshold":null,"level_back_end":"Aggressive","level_middle_end":"Aggressive","level_middle_end_size":"Zero"},"solc_metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"someAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"callTransferFunctionDirectly\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"},{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"someAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"callTransferFunctionDirectlyTwo\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"},{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCallData\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"someAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"getDataToCallTransfer\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getSelectorFour\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"selector\",\"type\":\"bytes4\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getSelectorOne\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"selector\",\"type\":\"bytes4\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"functionCallData\",\"type\":\"bytes\"}],\"name\":\"getSelectorThree\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"selector\",\"type\":\"bytes4\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getSelectorTwo\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"selector\",\"type\":\"bytes4\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getSignatureOne\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"s_amount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"s_someAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"someAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/sublesson/CallAnything.sol\":\"CallAnything\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul:fDnTOc\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":ds-test/=lib/openzeppelin-contracts/lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":foundry-devops/=lib/foundry-devops/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\"]},\"sources\":{\"src/sublesson/CallAnything.sol\":{\"keccak256\":\"0x438766d6c024ae6109d3e70683d35928f92b254cecad9a032cc44ab8376477e6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5718e69c1687bd32401407ffa2986d40efd3f577e758ef543525da06961eaa88\",\"dweb:/ipfs/QmaX1h3EMVaEt1EF4SJ7U6Wjf6aq8rrYTGs2KKWGh1xg9D\"]}},\"version\":1}","solc_version":"0.8.20","solc_zkvm_edition":null,"zk_version":"1.4.1"},"storageLayout":{"storage":[],"types":{}},"userdoc":{},"devdoc":{},"irOptimized":"/// @use-src 45:\"src/sublesson/CallAnything.sol\"\nobject \"CallAnything_51197\" {\n    code {\n        {\n            /// @src 45:569:4035  \"contract CallAnything {...\"\n            let _1 := memoryguard(0x80)\n            mstore(64, _1)\n            if callvalue() { revert(0, 0) }\n            let _2 := datasize(\"CallAnything_51197_deployed\")\n            codecopy(_1, dataoffset(\"CallAnything_51197_deployed\"), _2)\n            return(_1, _2)\n        }\n    }\n    /// @use-src 45:\"src/sublesson/CallAnything.sol\"\n    object \"CallAnything_51197_deployed\" {\n        code {\n            {\n                /// @src 45:569:4035  \"contract CallAnything {...\"\n                let _1 := memoryguard(0x80)\n                let _2 := 64\n                mstore(_2, _1)\n                let _3 := 4\n                if iszero(lt(calldatasize(), _3))\n                {\n                    let _4 := 0\n                    switch shr(224, calldataload(_4))\n                    case 0x0bf9aa4c {\n                        if callvalue() { revert(_4, _4) }\n                        if slt(add(calldatasize(), not(3)), _4) { revert(_4, _4) }\n                        /// @src 45:2819:2891  \"abi.encodeWithSignature(\\\"transfer(address,uint256)\\\", address(this), 123)\"\n                        mstore(add(_1, 0x20), shl(224, 0xa9059cbb))\n                        /// @src 45:569:4035  \"contract CallAnything {...\"\n                        mstore(/** @src 45:2819:2891  \"abi.encodeWithSignature(\\\"transfer(address,uint256)\\\", address(this), 123)\" */ add(_1, 36), /** @src 45:2880:2884  \"this\" */ address())\n                        /// @src 45:569:4035  \"contract CallAnything {...\"\n                        mstore(add(/** @src 45:2819:2891  \"abi.encodeWithSignature(\\\"transfer(address,uint256)\\\", address(this), 123)\" */ _1, /** @src 45:569:4035  \"contract CallAnything {...\" */ 68), /** @src 45:2887:2890  \"123\" */ 0x7b)\n                        /// @src 45:2819:2891  \"abi.encodeWithSignature(\\\"transfer(address,uint256)\\\", address(this), 123)\"\n                        mstore(_1, /** @src 45:569:4035  \"contract CallAnything {...\" */ 68)\n                        /// @src 45:2819:2891  \"abi.encodeWithSignature(\\\"transfer(address,uint256)\\\", address(this), 123)\"\n                        finalize_allocation_4183(_1)\n                        /// @src 45:569:4035  \"contract CallAnything {...\"\n                        let memPos := mload(_2)\n                        mstore(memPos, /** @src 45:2819:2891  \"abi.encodeWithSignature(\\\"transfer(address,uint256)\\\", address(this), 123)\" */ 0x20)\n                        /// @src 45:569:4035  \"contract CallAnything {...\"\n                        return(memPos, sub(abi_encode_bytes(_1, add(memPos, /** @src 45:2819:2891  \"abi.encodeWithSignature(\\\"transfer(address,uint256)\\\", address(this), 123)\" */ 0x20)), /** @src 45:569:4035  \"contract CallAnything {...\" */ memPos))\n                    }\n                    case 0x25435a56 {\n                        if callvalue() { revert(_4, _4) }\n                        if slt(add(calldatasize(), not(3)), _4) { revert(_4, _4) }\n                        let memPos_1 := mload(_2)\n                        mstore(memPos_1, /** @src 45:2819:2891  \"abi.encodeWithSignature(\\\"transfer(address,uint256)\\\", address(this), 123)\" */ shl(224, 0xa9059cbb))\n                        /// @src 45:569:4035  \"contract CallAnything {...\"\n                        return(memPos_1, 32)\n                    }\n                    case 0x7c0c5f23 {\n                        if callvalue() { revert(_4, _4) }\n                        let param, param_1 := abi_decode_addresst_uint256(calldatasize())\n                        /// @src 45:1241:1275  \"bytes(\\\"transfer(address,uint256)\\\")\"\n                        let expr_mpos := /** @src 45:569:4035  \"contract CallAnything {...\" */ copy_literal_to_memory_a9059cbb2ab09eb219583f4a59a5d0623ade346d962bcd4e46b11da047c9049b()\n                        let cleaned := and(/** @src 45:1231:1276  \"keccak256(bytes(\\\"transfer(address,uint256)\\\"))\" */ keccak256(/** @src 45:569:4035  \"contract CallAnything {...\" */ add(/** @src 45:1231:1276  \"keccak256(bytes(\\\"transfer(address,uint256)\\\"))\" */ expr_mpos, /** @src 45:569:4035  \"contract CallAnything {...\" */ 0x20), mload(/** @src 45:1231:1276  \"keccak256(bytes(\\\"transfer(address,uint256)\\\"))\" */ expr_mpos)), /** @src 45:569:4035  \"contract CallAnything {...\" */ shl(224, 0xffffffff))\n                        /// @src 45:1410:1471  \"abi.encodeWithSelector(getSelectorOne(), someAddress, amount)\"\n                        let expr_mpos_1 := /** @src 45:569:4035  \"contract CallAnything {...\" */ mload(_2)\n                        /// @src 45:1410:1471  \"abi.encodeWithSelector(getSelectorOne(), someAddress, amount)\"\n                        mstore(add(expr_mpos_1, /** @src 45:569:4035  \"contract CallAnything {...\" */ 0x20), /** @src 45:1410:1471  \"abi.encodeWithSelector(getSelectorOne(), someAddress, amount)\" */ cleaned)\n                        let _5 := sub(abi_encode_address_uint256(add(expr_mpos_1, 36), param, param_1), expr_mpos_1)\n                        mstore(expr_mpos_1, add(_5, not(31)))\n                        finalize_allocation(expr_mpos_1, _5)\n                        /// @src 45:569:4035  \"contract CallAnything {...\"\n                        let memPos_2 := mload(_2)\n                        mstore(memPos_2, 0x20)\n                        return(memPos_2, sub(abi_encode_bytes(expr_mpos_1, add(memPos_2, 0x20)), memPos_2))\n                    }\n                    case 0x852d52fa {\n                        if callvalue() { revert(_4, _4) }\n                        if slt(add(calldatasize(), not(3)), _4) { revert(_4, _4) }\n                        let converted := copy_literal_to_memory_a9059cbb2ab09eb219583f4a59a5d0623ade346d962bcd4e46b11da047c9049b()\n                        let memPos_3 := mload(_2)\n                        mstore(memPos_3, 32)\n                        return(memPos_3, sub(abi_encode_bytes(converted, add(memPos_3, 32)), memPos_3))\n                    }\n                    case 0x9a41d3ad {\n                        if callvalue() { revert(_4, _4) }\n                        if slt(add(calldatasize(), not(3)), _4) { revert(_4, _4) }\n                        /// @src 45:1241:1275  \"bytes(\\\"transfer(address,uint256)\\\")\"\n                        let expr_mpos_2 := /** @src 45:569:4035  \"contract CallAnything {...\" */ copy_literal_to_memory_a9059cbb2ab09eb219583f4a59a5d0623ade346d962bcd4e46b11da047c9049b()\n                        let cleaned_1 := and(/** @src 45:1231:1276  \"keccak256(bytes(\\\"transfer(address,uint256)\\\"))\" */ keccak256(/** @src 45:569:4035  \"contract CallAnything {...\" */ add(/** @src 45:1231:1276  \"keccak256(bytes(\\\"transfer(address,uint256)\\\"))\" */ expr_mpos_2, /** @src 45:569:4035  \"contract CallAnything {...\" */ 0x20), mload(/** @src 45:1231:1276  \"keccak256(bytes(\\\"transfer(address,uint256)\\\"))\" */ expr_mpos_2)), /** @src 45:569:4035  \"contract CallAnything {...\" */ shl(224, 0xffffffff))\n                        let memPos_4 := mload(_2)\n                        mstore(memPos_4, cleaned_1)\n                        return(memPos_4, 0x20)\n                    }\n                    case 0xa5694e4a {\n                        if callvalue() { revert(_4, _4) }\n                        let param_2, param_3 := abi_decode_addresst_uint256(calldatasize())\n                        /// @src 45:1241:1275  \"bytes(\\\"transfer(address,uint256)\\\")\"\n                        let expr_mpos_3 := /** @src 45:569:4035  \"contract CallAnything {...\" */ copy_literal_to_memory_a9059cbb2ab09eb219583f4a59a5d0623ade346d962bcd4e46b11da047c9049b()\n                        let cleaned_2 := and(/** @src 45:1231:1276  \"keccak256(bytes(\\\"transfer(address,uint256)\\\"))\" */ keccak256(/** @src 45:569:4035  \"contract CallAnything {...\" */ add(/** @src 45:1231:1276  \"keccak256(bytes(\\\"transfer(address,uint256)\\\"))\" */ expr_mpos_3, /** @src 45:569:4035  \"contract CallAnything {...\" */ 0x20), mload(/** @src 45:1231:1276  \"keccak256(bytes(\\\"transfer(address,uint256)\\\"))\" */ expr_mpos_3)), /** @src 45:569:4035  \"contract CallAnything {...\" */ shl(224, 0xffffffff))\n                        /// @src 45:1813:1874  \"abi.encodeWithSelector(getSelectorOne(), someAddress, amount)\"\n                        let expr_mpos_4 := /** @src 45:569:4035  \"contract CallAnything {...\" */ mload(_2)\n                        /// @src 45:1813:1874  \"abi.encodeWithSelector(getSelectorOne(), someAddress, amount)\"\n                        let _6 := add(expr_mpos_4, /** @src 45:569:4035  \"contract CallAnything {...\" */ 0x20)\n                        /// @src 45:1813:1874  \"abi.encodeWithSelector(getSelectorOne(), someAddress, amount)\"\n                        mstore(_6, cleaned_2)\n                        let _7 := sub(abi_encode_address_uint256(add(expr_mpos_4, 36), param_2, param_3), expr_mpos_4)\n                        mstore(expr_mpos_4, add(_7, /** @src 45:1410:1471  \"abi.encodeWithSelector(getSelectorOne(), someAddress, amount)\" */ not(31)))\n                        /// @src 45:1813:1874  \"abi.encodeWithSelector(getSelectorOne(), someAddress, amount)\"\n                        finalize_allocation(expr_mpos_4, _7)\n                        /// @src 45:1722:1884  \"address(this).call(...\"\n                        let expr_component := call(gas(), /** @src 45:1730:1734  \"this\" */ address(), /** @src 45:569:4035  \"contract CallAnything {...\" */ _4, /** @src 45:1722:1884  \"address(this).call(...\" */ _6, mload(expr_mpos_4), /** @src 45:569:4035  \"contract CallAnything {...\" */ _4, _4)\n                        /// @src 45:1894:1930  \"return (bytes4(returnData), success)\"\n                        let var := /** @src 45:1902:1920  \"bytes4(returnData)\" */ convert_bytes_to_fixedbytes_from_bytes_to_bytes4(/** @src 45:1722:1884  \"address(this).call(...\" */ extract_returndata())\n                        /// @src 45:569:4035  \"contract CallAnything {...\"\n                        let memPos_5 := mload(_2)\n                        return(memPos_5, sub(abi_encode_bytes4_bool(memPos_5, var, expr_component), memPos_5))\n                    }\n                    case 0xa9059cbb {\n                        if callvalue() { revert(_4, _4) }\n                        let param_4, param_5 := abi_decode_addresst_uint256(calldatasize())\n                        sstore(_4, or(and(sload(_4), shl(160, 0xffffffffffffffffffffffff)), and(param_4, sub(shl(160, 1), 1))))\n                        sstore(/** @src 45:791:808  \"s_amount = amount\" */ 0x01, /** @src 45:569:4035  \"contract CallAnything {...\" */ param_5)\n                        return(_4, _4)\n                    }\n                    case 0xaad229d5 {\n                        if callvalue() { revert(_4, _4) }\n                        if slt(add(calldatasize(), not(3)), _4) { revert(_4, _4) }\n                        let value := and(sload(_4), sub(shl(160, 1), 1))\n                        let memPos_6 := mload(_2)\n                        mstore(memPos_6, value)\n                        return(memPos_6, 32)\n                    }\n                    case 0xb20d9446 {\n                        if callvalue() { revert(_4, _4) }\n                        let param_6, param_7 := abi_decode_addresst_uint256(calldatasize())\n                        /// @src 45:2167:2240  \"abi.encodeWithSignature(\\\"transfer(address,uint256)\\\", someAddress, amount)\"\n                        let expr_mpos_5 := /** @src 45:569:4035  \"contract CallAnything {...\" */ mload(_2)\n                        /// @src 45:2167:2240  \"abi.encodeWithSignature(\\\"transfer(address,uint256)\\\", someAddress, amount)\"\n                        let _8 := add(expr_mpos_5, 0x20)\n                        mstore(_8, /** @src 45:2819:2891  \"abi.encodeWithSignature(\\\"transfer(address,uint256)\\\", address(this), 123)\" */ shl(224, 0xa9059cbb))\n                        /// @src 45:2167:2240  \"abi.encodeWithSignature(\\\"transfer(address,uint256)\\\", someAddress, amount)\"\n                        let _9 := sub(abi_encode_address_uint256(add(expr_mpos_5, 36), param_6, param_7), expr_mpos_5)\n                        mstore(expr_mpos_5, add(_9, /** @src 45:1410:1471  \"abi.encodeWithSelector(getSelectorOne(), someAddress, amount)\" */ not(31)))\n                        /// @src 45:2167:2240  \"abi.encodeWithSignature(\\\"transfer(address,uint256)\\\", someAddress, amount)\"\n                        finalize_allocation(expr_mpos_5, _9)\n                        /// @src 45:2148:2241  \"address(this).call(abi.encodeWithSignature(\\\"transfer(address,uint256)\\\", someAddress, amount))\"\n                        let expr_component_1 := call(gas(), /** @src 45:2156:2160  \"this\" */ address(), /** @src 45:569:4035  \"contract CallAnything {...\" */ _4, /** @src 45:2148:2241  \"address(this).call(abi.encodeWithSignature(\\\"transfer(address,uint256)\\\", someAddress, amount))\" */ _8, mload(expr_mpos_5), /** @src 45:569:4035  \"contract CallAnything {...\" */ _4, _4)\n                        /// @src 45:2251:2287  \"return (bytes4(returnData), success)\"\n                        let var_1 := /** @src 45:2259:2277  \"bytes4(returnData)\" */ convert_bytes_to_fixedbytes_from_bytes_to_bytes4(/** @src 45:2148:2241  \"address(this).call(abi.encodeWithSignature(\\\"transfer(address,uint256)\\\", someAddress, amount))\" */ extract_returndata())\n                        /// @src 45:569:4035  \"contract CallAnything {...\"\n                        let memPos_7 := mload(_2)\n                        return(memPos_7, sub(abi_encode_bytes4_bool(memPos_7, var_1, expr_component_1), memPos_7))\n                    }\n                    case 0xc6e93bad {\n                        if callvalue() { revert(_4, _4) }\n                        if slt(add(calldatasize(), not(3)), _4) { revert(_4, _4) }\n                        let _10 := sload(/** @src 45:631:654  \"uint256 public s_amount\" */ 1)\n                        /// @src 45:569:4035  \"contract CallAnything {...\"\n                        let memPos_8 := mload(_2)\n                        mstore(memPos_8, _10)\n                        return(memPos_8, 32)\n                    }\n                    case 0xce6eb7ff {\n                        if callvalue() { revert(_4, _4) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(_4, _4) }\n                        let offset := calldataload(_3)\n                        let _11 := 0xffffffffffffffff\n                        if gt(offset, _11) { revert(_4, _4) }\n                        if iszero(slt(add(offset, 35), calldatasize())) { revert(_4, _4) }\n                        let length := calldataload(add(_3, offset))\n                        if gt(length, _11) { revert(_4, _4) }\n                        if gt(add(add(offset, length), 36), calldatasize()) { revert(_4, _4) }\n                        let memPos_9 := mload(_2)\n                        mstore(memPos_9, and(/** @src 45:3597:3679  \"assembly {...\" */ calldataload(/** @src 45:569:4035  \"contract CallAnything {...\" */ add(offset, 36)), shl(224, 0xffffffff)))\n                        return(memPos_9, 32)\n                    }\n                    case 0xfbf6d515 {\n                        if callvalue() { revert(_4, _4) }\n                        if slt(add(calldatasize(), not(3)), _4) { revert(_4, _4) }\n                        /// @src 45:2478:2550  \"abi.encodeWithSignature(\\\"transfer(address,uint256)\\\", address(this), 123)\"\n                        let expr_mpos_6 := /** @src 45:569:4035  \"contract CallAnything {...\" */ mload(_2)\n                        /// @src 45:2478:2550  \"abi.encodeWithSignature(\\\"transfer(address,uint256)\\\", address(this), 123)\"\n                        let _12 := add(expr_mpos_6, 0x20)\n                        mstore(_12, /** @src 45:2819:2891  \"abi.encodeWithSignature(\\\"transfer(address,uint256)\\\", address(this), 123)\" */ shl(224, 0xa9059cbb))\n                        /// @src 45:569:4035  \"contract CallAnything {...\"\n                        mstore(/** @src 45:2478:2550  \"abi.encodeWithSignature(\\\"transfer(address,uint256)\\\", address(this), 123)\" */ add(expr_mpos_6, 36), /** @src 45:2539:2543  \"this\" */ address())\n                        /// @src 45:569:4035  \"contract CallAnything {...\"\n                        mstore(add(/** @src 45:2478:2550  \"abi.encodeWithSignature(\\\"transfer(address,uint256)\\\", address(this), 123)\" */ expr_mpos_6, /** @src 45:569:4035  \"contract CallAnything {...\" */ 68), /** @src 45:2546:2549  \"123\" */ 0x7b)\n                        /// @src 45:2478:2550  \"abi.encodeWithSignature(\\\"transfer(address,uint256)\\\", address(this), 123)\"\n                        mstore(expr_mpos_6, /** @src 45:569:4035  \"contract CallAnything {...\" */ 68)\n                        /// @src 45:2478:2550  \"abi.encodeWithSignature(\\\"transfer(address,uint256)\\\", address(this), 123)\"\n                        finalize_allocation_4183(expr_mpos_6)\n                        /// @src 45:569:4035  \"contract CallAnything {...\"\n                        if iszero(mload(expr_mpos_6))\n                        {\n                            mstore(_4, shl(224, 0x4e487b71))\n                            mstore(_3, 0x32)\n                            revert(_4, /** @src 45:2478:2550  \"abi.encodeWithSignature(\\\"transfer(address,uint256)\\\", address(this), 123)\" */ 36)\n                        }\n                        /// @src 45:569:4035  \"contract CallAnything {...\"\n                        let _13 := shl(248, 255)\n                        let cleaned_3 := and(mload(_12), _13)\n                        if iszero(lt(/** @src 45:2641:2642  \"1\" */ 0x01, /** @src 45:569:4035  \"contract CallAnything {...\" */ mload(expr_mpos_6)))\n                        {\n                            mstore(_4, shl(224, 0x4e487b71))\n                            mstore(_3, 0x32)\n                            revert(_4, /** @src 45:2478:2550  \"abi.encodeWithSignature(\\\"transfer(address,uint256)\\\", address(this), 123)\" */ 36)\n                        }\n                        /// @src 45:569:4035  \"contract CallAnything {...\"\n                        let cleaned_4 := and(mload(add(expr_mpos_6, 33)), _13)\n                        if iszero(lt(/** @src 45:2662:2663  \"2\" */ 0x02, /** @src 45:569:4035  \"contract CallAnything {...\" */ mload(expr_mpos_6)))\n                        {\n                            mstore(_4, shl(224, 0x4e487b71))\n                            mstore(_3, 0x32)\n                            revert(_4, /** @src 45:2478:2550  \"abi.encodeWithSignature(\\\"transfer(address,uint256)\\\", address(this), 123)\" */ 36)\n                        }\n                        /// @src 45:569:4035  \"contract CallAnything {...\"\n                        let cleaned_5 := and(mload(add(expr_mpos_6, 34)), _13)\n                        if iszero(lt(/** @src 45:2683:2684  \"3\" */ 0x03, /** @src 45:569:4035  \"contract CallAnything {...\" */ mload(expr_mpos_6)))\n                        {\n                            mstore(_4, shl(224, 0x4e487b71))\n                            mstore(_3, 0x32)\n                            revert(_4, /** @src 45:2478:2550  \"abi.encodeWithSignature(\\\"transfer(address,uint256)\\\", address(this), 123)\" */ 36)\n                        }\n                        /// @src 45:569:4035  \"contract CallAnything {...\"\n                        let cleaned_6 := and(mload(add(expr_mpos_6, 35)), _13)\n                        let outPtr := mload(_2)\n                        mstore(add(outPtr, /** @src 45:2478:2550  \"abi.encodeWithSignature(\\\"transfer(address,uint256)\\\", address(this), 123)\" */ 0x20), /** @src 45:569:4035  \"contract CallAnything {...\" */ cleaned_3)\n                        mstore(add(outPtr, 33), cleaned_4)\n                        mstore(add(outPtr, 34), cleaned_5)\n                        mstore(add(outPtr, 35), cleaned_6)\n                        mstore(outPtr, _3)\n                        finalize_allocation_4185(outPtr)\n                        /// @src 45:2560:2687  \"selector =...\"\n                        let var_selector := /** @src 45:2583:2687  \"bytes4(bytes.concat(functionCallData[0], functionCallData[1], functionCallData[2], functionCallData[3]))\" */ convert_bytes_to_fixedbytes_from_bytes_to_bytes4(/** @src 45:2590:2686  \"bytes.concat(functionCallData[0], functionCallData[1], functionCallData[2], functionCallData[3])\" */ outPtr)\n                        /// @src 45:569:4035  \"contract CallAnything {...\"\n                        let memPos_10 := mload(_2)\n                        mstore(memPos_10, and(var_selector, shl(224, 0xffffffff)))\n                        return(memPos_10, /** @src 45:2478:2550  \"abi.encodeWithSignature(\\\"transfer(address,uint256)\\\", address(this), 123)\" */ 0x20)\n                    }\n                }\n                /// @src 45:569:4035  \"contract CallAnything {...\"\n                revert(0, 0)\n            }\n            function abi_encode_bytes(value, pos) -> end\n            {\n                let length := mload(value)\n                mstore(pos, length)\n                let i := 0\n                for { } lt(i, length) { i := add(i, 0x20) }\n                {\n                    let _1 := 0x20\n                    mstore(add(add(pos, i), _1), mload(add(add(value, i), _1)))\n                }\n                mstore(add(add(pos, length), 0x20), 0)\n                end := add(add(pos, and(add(length, 31), /** @src 45:1410:1471  \"abi.encodeWithSelector(getSelectorOne(), someAddress, amount)\" */ not(31))), /** @src 45:569:4035  \"contract CallAnything {...\" */ 0x20)\n            }\n            function abi_decode_addresst_uint256(dataEnd) -> value0, value1\n            {\n                if slt(add(dataEnd, not(3)), 64) { revert(0, 0) }\n                let value := calldataload(4)\n                if iszero(eq(value, and(value, sub(shl(160, 1), 1))))\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 45:569:4035  \"contract CallAnything {...\"\n                value0 := value\n                value1 := calldataload(36)\n            }\n            function abi_encode_bytes4_bool(headStart, value0, value1) -> tail\n            {\n                tail := add(headStart, 64)\n                mstore(headStart, and(value0, shl(224, 0xffffffff)))\n                mstore(add(headStart, 32), iszero(iszero(value1)))\n            }\n            function finalize_allocation_4183(memPtr)\n            {\n                let newFreePtr := add(memPtr, 128)\n                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr))\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x41)\n                    revert(0, 0x24)\n                }\n                mstore(64, newFreePtr)\n            }\n            function finalize_allocation_4185(memPtr)\n            {\n                let newFreePtr := add(memPtr, 64)\n                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr))\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x41)\n                    revert(0, /** @src 45:2478:2550  \"abi.encodeWithSignature(\\\"transfer(address,uint256)\\\", address(this), 123)\" */ 36)\n                }\n                /// @src 45:569:4035  \"contract CallAnything {...\"\n                mstore(64, newFreePtr)\n            }\n            function finalize_allocation(memPtr, size)\n            {\n                let newFreePtr := add(memPtr, and(add(size, 31), /** @src 45:1410:1471  \"abi.encodeWithSelector(getSelectorOne(), someAddress, amount)\" */ not(31)))\n                /// @src 45:569:4035  \"contract CallAnything {...\"\n                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr))\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x41)\n                    revert(0, 0x24)\n                }\n                mstore(64, newFreePtr)\n            }\n            function copy_literal_to_memory_a9059cbb2ab09eb219583f4a59a5d0623ade346d962bcd4e46b11da047c9049b() -> memPtr\n            {\n                let memPtr_1 := mload(64)\n                finalize_allocation_4185(memPtr_1)\n                mstore(memPtr_1, 25)\n                memPtr := memPtr_1\n                mstore(add(memPtr_1, 32), \"transfer(address,uint256)\")\n            }\n            function abi_encode_address_uint256(headStart, value0, value1) -> tail\n            {\n                tail := add(headStart, 64)\n                mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n                mstore(add(headStart, 32), value1)\n            }\n            function extract_returndata() -> data\n            {\n                switch returndatasize()\n                case 0 { data := 96 }\n                default {\n                    let _1 := returndatasize()\n                    if gt(_1, 0xffffffffffffffff)\n                    {\n                        mstore(/** @src -1:-1:-1 */ 0, /** @src 45:569:4035  \"contract CallAnything {...\" */ shl(224, 0x4e487b71))\n                        mstore(4, 0x41)\n                        revert(/** @src -1:-1:-1 */ 0, /** @src 45:569:4035  \"contract CallAnything {...\" */ 0x24)\n                    }\n                    let memPtr := mload(64)\n                    finalize_allocation(memPtr, add(and(add(_1, 31), /** @src 45:1410:1471  \"abi.encodeWithSelector(getSelectorOne(), someAddress, amount)\" */ not(31)), /** @src 45:569:4035  \"contract CallAnything {...\" */ 0x20))\n                    mstore(memPtr, _1)\n                    data := memPtr\n                    returndatacopy(add(memPtr, 0x20), /** @src -1:-1:-1 */ 0, /** @src 45:569:4035  \"contract CallAnything {...\" */ returndatasize())\n                }\n            }\n            function convert_bytes_to_fixedbytes_from_bytes_to_bytes4(array) -> value\n            {\n                let length := mload(array)\n                let _1 := mload(add(array, 0x20))\n                let _2 := shl(224, 0xffffffff)\n                value := and(_1, _2)\n                if lt(length, 4)\n                {\n                    value := and(and(_1, shl(shl(3, sub(4, length)), _2)), _2)\n                }\n            }\n        }\n        data \".metadata\" hex\"a164736f6c6343000814000a\"\n    }\n}\n","hash":"010000b1d3b3e248f0264d7807f352d9bea72ab4e464c67f1b3259c90b9ad42c","factoryDependencies":{},"id":45}