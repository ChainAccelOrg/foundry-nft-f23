{"abi":null,"bytecode":{"object":"00020000000000020002000000000002000000000301001900000060033002700000005503300197000100000031035500000001022001900000005e0000c13d0000008002000039000000400020043f000000040230008c000000c30000413d000000000201043b000000e0022002700000005a0420009c0000008e0000213d0000005d0420009c000000ab0000613d0000005e0220009c000000c30000c13d0000000002000416000000240430008c000000c30000413d000000000202004b000000c30000c13d0000000402100370000000000502043b000000620250009c000000c30000213d0000002302500039000000000232004b000000c30000813d0000000402500039000000000421034f000000000404043b000000620640009c000000c30000213d00000000054500190000002405500039000000000335004b000000c30000213d000000000500041a0000006303000041000000a00030043f0000002003000039000000a40030043f0000002002200039000000000121034f0000001f0340018f0000005702500197000000c40040043f00000005054002720000003e0000613d00000000060000190000000507600210000000000871034f000000000808043b000000e40770003900000000008704350000000106600039000000000756004b000000360000413d000000000603004b0000004d0000613d0000000505500210000000000151034f0000000303300210000000e405500039000000000605043300000000063601cf000000000636022f000000000101043b0000010003300089000000000131022f00000000013101cf000000000161019f0000000000150435000000e40140003900000000000104350000001f01400039000000200300008a000000000131016f0000008304100039000000000334016f0000004401100039000000800010043f000000640430009c000000ea0000413d000000660100004100000000001004350000004101000039000000040010043f00000067010000410000014f000104300000000002000416000000000202004b000000c30000c13d0000001f0230003900000056022001970000008002200039000000400020043f0000001f0230018f0000000504300272000000710000613d00000000050000190000000506500210000000000761034f000000000707043b000000800660003900000000007604350000000105500039000000000645004b000000690000413d000000000502004b000000800000613d0000000504400210000000000141034f00000003022002100000008004400039000000000504043300000000052501cf000000000525022f000000000101043b0000010002200089000000000121022f00000000012101cf000000000151019f0000000000140435000000200130008c000000c30000413d000000800100043d000000570210009c000000c30000213d000000000200041a0000005802200197000000000112019f000000000010041b00000020010000390000010000100443000001200000044300000059010000410000014e0001042e0000005b0420009c000000bb0000613d0000005c0220009c000000c30000c13d0000000002000416000000440330008c000000c30000413d000000000202004b000000c30000c13d0000000402100370000000000202043b000000570320009c000000c30000213d000000000300041a0000005f04000041000000a00040043f000000a40020043f0000002401100370000000000101043b000000c40010043f0000004401000039000000800010043f0000010001000039000000400010043f00000000010004140000005702300197000000040320008c000000cc0000c13d000000b90000013d0000000001000416000000000101004b000000c30000c13d000000000200041a0000006801000041000000a00010043f0000000401000039000000800010043f000000c001000039000000400010043f00000000010004140000005702200197000000040320008c000000c50000c13d0000000101000039000000d70000013d0000000001000416000000000101004b000000c30000c13d000000000100041a0000005701100197000000800010043f00000061010000410000014e0001042e00000000010000190000014f000104300000005503000041000000550410009c0000000001038019000000c00110021000000069011001c7014d01480000040f000000d20000013d0000005503000041000000550410009c0000000001038019000000c00110021000000060011001c7014d01430000040f00000000030100190000006003300270000000550030019d0001000000010355000000010120018f000200000001001d014d01020000040f014d01390000040f0000000002010019000000400100043d000100000001001d0000000203000029014d00f90000040f000000010400002900000000014100490000005502000041000000550310009c0000000001028019000000550340009c000000000402801900000040024002100000006001100210000000000121019f0000014e0001042e0000008003300039000000400030043f0000000003000414000000040420008c000000aa0000613d0000005504000041000000550530009c0000000003048019000000550510009c00000000010480190000006001100210000000c003300210000000000113019f00000065011001c7000000d10000013d000000000303004b0000000003000019000000010300c039000000200410003900000000003404350000006a0220019700000000002104350000004001100039000000000001042d0000000004000032000001310000613d0000001f01400039000000200200008a000000000121016f0000003f01100039000000000221016f000000400100043d0000000002210019000000000312004b00000000030000190000000103004039000000620520009c000001330000213d0000000103300190000001330000c13d000000400020043f0000001f0240018f000000000341043600000001050003670000000504400272000001210000613d000000000600001900000005076002100000000008730019000000000775034f000000000707043b00000000007804350000000106600039000000000746004b000001190000413d000000000602004b000001320000613d0000000504400210000000000545034f00000000034300190000000302200210000000000403043300000000042401cf000000000424022f000000000505043b0000010002200089000000000525022f00000000022501cf000000000242019f0000000000230435000000000001042d0000006001000039000000000001042d000000660100004100000000001004350000004101000039000000040010043f00000067010000410000014f000104300000000021010434000000030310021000000020033000890000006a0400004100000000033401cf000000040110008c00000000030480190000000001020433000000000131016f000000000001042d00000146002104210000000102000039000000000001042d0000000002000019000000000001042d0000014b002104230000000102000039000000000001042d0000000002000019000000000001042d0000014d000004320000014e0001042e0000014f00010430000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000ffffffff00000000000000000000000000000000000000000000000000000001ffffffe0000000000000000000000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff000000000000000000000000000000000000000000000002000000000000000000000000000000400000010000000000000000000000000000000000000000000000000000000000000000000000000078d331d50000000000000000000000000000000000000000000000000000000078d331d600000000000000000000000000000000000000000000000000000000e4ca8507000000000000000000000000000000000000000000000000000000001ce431b9000000000000000000000000000000000000000000000000000000007690a4a2a9059cbb000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000044000000a000000000000000000000000000000000000000000000000000000020000000800000000000000000000000000000000000000000000000000000000000000000ffffffffffffffffce6eb7ff00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000ffffffffffffff800000000000000000000000000000000000000000000000a000000000000000004e487b710000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000240000000000000000000000009a41d3ad000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004000000a00000000000000000ffffffff00000000000000000000000000000000000000000000000000000000"},"assembly":"\t.text\n\t.file\t\"CallAnything.sol:CallFunctionWithoutContract\"\n\t.globl\t__entry\n__entry:\n.func_begin0:\n\tnop\tstack+=[2]\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tptr.add\tr1, r3, stack[@ptr_return_data]\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB0_18\n\tadd\t128, r0, r2\n\tst.1\t64, r2\n\tsub.s!\t4, r3, r2\n\tjump.lt\t@.BB0_40\n\tld\tr1, r2\n\tshr.s\t224, r2, r2\n\tsub.s!\t@CPI0_5[0], r2, r4\n\tjump.gt\t@.BB0_27\n\tsub.s!\t@CPI0_8[0], r2, r4\n\tjump.eq\t@.BB0_35\n\tsub.s!\t@CPI0_9[0], r2, r2\n\tjump.ne\t@.BB0_40\n\tcontext.get_context_u128\tr2\n\tsub.s!\t36, r3, r4\n\tjump.lt\t@.BB0_40\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_40\n\tptr.add.s\t4, r1, r2\n\tld\tr2, r5\n\tsub.s!\t@CPI0_13[0], r5, r2\n\tjump.gt\t@.BB0_40\n\tadd\t35, r5, r2\n\tsub!\tr2, r3, r2\n\tjump.ge\t@.BB0_40\n\tadd\t4, r5, r2\n\tptr.add\tr1, r2, r4\n\tld\tr4, r4\n\tsub.s!\t@CPI0_13[0], r4, r6\n\tjump.gt\t@.BB0_40\n\tadd\tr5, r4, r5\n\tadd\t36, r5, r5\n\tsub!\tr5, r3, r3\n\tjump.gt\t@.BB0_40\n\tsload\tr0, r5\n\tadd\t@CPI0_14[0], r0, r3\n\tst.1\t160, r3\n\tadd\t32, r0, r3\n\tst.1\t164, r3\n\tadd\t32, r2, r2\n\tptr.add\tr1, r2, r1\n\tand\t31, r4, r3\n\tand\t@CPI0_2[0], r5, r2\n\tst.1\t196, r4\n\tshr.s!\t5, r4, r5\n\tjump.eq\t@.BB0_14\n\tadd\tr0, r0, r6\n.BB0_13:\n\tshl.s\t5, r6, r7\n\tptr.add\tr1, r7, r8\n\tld\tr8, r8\n\tadd\t228, r7, r7\n\tst.1\tr7, r8\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_13\n.BB0_14:\n\tsub!\tr3, r0, r6\n\tjump.eq\t@.BB0_16\n\tshl.s\t5, r5, r5\n\tptr.add\tr1, r5, r1\n\tshl.s\t3, r3, r3\n\tadd\t228, r5, r5\n\tld.1\tr5, r6\n\tshl\tr6, r3, r6\n\tshr\tr6, r3, r6\n\tld\tr1, r1\n\tsub\t256, r3, r3\n\tshr\tr1, r3, r1\n\tshl\tr1, r3, r1\n\tor\tr1, r6, r1\n\tst.1\tr5, r1\n.BB0_16:\n\tadd\t228, r4, r1\n\tst.1\tr1, r0\n\tadd\t31, r4, r1\n\tsub.s\t32, r0, r3\n\tand\tr1, r3, r1\n\tadd\t131, r1, r4\n\tand\tr4, r3, r3\n\tadd\t68, r1, r1\n\tst.1\t128, r1\n\tsub.s!\t@CPI0_15[0], r3, r4\n\tjump.lt\t@.BB0_47\n\tadd\t@CPI0_17[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI0_18[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_18:\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_40\n\tadd\t31, r3, r2\n\tand\t@CPI0_1[0], r2, r2\n\tadd\t128, r2, r2\n\tst.1\t64, r2\n\tand\t31, r3, r2\n\tshr.s!\t5, r3, r4\n\tjump.eq\t@.BB0_22\n\tadd\tr0, r0, r5\n.BB0_21:\n\tshl.s\t5, r5, r6\n\tptr.add\tr1, r6, r7\n\tld\tr7, r7\n\tadd\t128, r6, r6\n\tst.1\tr6, r7\n\tadd\t1, r5, r5\n\tsub!\tr5, r4, r6\n\tjump.lt\t@.BB0_21\n.BB0_22:\n\tsub!\tr2, r0, r5\n\tjump.eq\t@.BB0_24\n\tshl.s\t5, r4, r4\n\tptr.add\tr1, r4, r1\n\tshl.s\t3, r2, r2\n\tadd\t128, r4, r4\n\tld.1\tr4, r5\n\tshl\tr5, r2, r5\n\tshr\tr5, r2, r5\n\tld\tr1, r1\n\tsub\t256, r2, r2\n\tshr\tr1, r2, r1\n\tshl\tr1, r2, r1\n\tor\tr1, r5, r1\n\tst.1\tr4, r1\n.BB0_24:\n\tsub.s!\t32, r3, r1\n\tjump.lt\t@.BB0_40\n\tld.1\t128, r1\n\tsub.s!\t@CPI0_2[0], r1, r2\n\tjump.gt\t@.BB0_40\n\tsload\tr0, r2\n\tand\t@CPI0_3[0], r2, r2\n\tor\tr2, r1, r1\n\tsstore\tr0, r1\n\tadd\t32, r0, r1\n\tst.2\t256, r1\n\tst.2\t288, r0\n\tadd\t@CPI0_4[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_27:\n\tsub.s!\t@CPI0_6[0], r2, r4\n\tjump.eq\t@.BB0_38\n\tsub.s!\t@CPI0_7[0], r2, r2\n\tjump.ne\t@.BB0_40\n\tcontext.get_context_u128\tr2\n\tsub.s!\t68, r3, r3\n\tjump.lt\t@.BB0_40\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_40\n\tptr.add.s\t4, r1, r2\n\tld\tr2, r2\n\tsub.s!\t@CPI0_2[0], r2, r3\n\tjump.gt\t@.BB0_40\n\tsload\tr0, r3\n\tadd\t@CPI0_10[0], r0, r4\n\tst.1\t160, r4\n\tst.1\t164, r2\n\tptr.add.s\t36, r1, r1\n\tld\tr1, r1\n\tst.1\t196, r1\n\tadd\t68, r0, r1\n\tst.1\t128, r1\n\tadd\t256, r0, r1\n\tst.1\t64, r1\n\tcontext.gas_left\tr1\n\tand\t@CPI0_2[0], r3, r2\n\tsub.s!\t4, r2, r3\n\tjump.ne\t@.BB0_42\n.BB0_34:\n\tjump\t@.BB0_37\n.BB0_35:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_40\n\tsload\tr0, r2\n\tadd\t@CPI0_19[0], r0, r1\n\tst.1\t160, r1\n\tadd\t4, r0, r1\n\tst.1\t128, r1\n\tadd\t192, r0, r1\n\tst.1\t64, r1\n\tcontext.gas_left\tr1\n\tand\t@CPI0_2[0], r2, r2\n\tsub.s!\t4, r2, r3\n\tjump.ne\t@.BB0_41\n.BB0_37:\n\tadd\t1, r0, r1\n\tjump\t@.BB0_45\n.BB0_38:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_40\n\tsload\tr0, r1\n\tand\t@CPI0_2[0], r1, r1\n\tst.1\t128, r1\n\tadd\t@CPI0_12[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_40:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_41:\n\tadd\t@CPI0_0[0], r0, r3\n\tsub.s!\t@CPI0_0[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_20[0], r1, r1\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tjump\t@.BB0_44\n.BB0_42:\n\tadd\t@CPI0_0[0], r0, r3\n\tsub.s!\t@CPI0_0[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_11[0], r1, r1\n.BB0_43:\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n.BB0_44:\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, stack[@returndatasize]\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tand\t1, r2, r1\n.BB0_45:\n\tadd\tr1, r0, stack-[2]\n\tnear_call\tr0, @extract_returndata, @DEFAULT_UNWIND\n\tnear_call\tr0, @convert_bytes_to_fixedbytes_from_bytes_to_bytes4, @DEFAULT_UNWIND\n\tadd\tr1, r0, r2\n\tld.1\t64, r1\n\tadd\tr1, r0, stack-[1]\n\tadd\tstack-[2], r0, r3\n\tnear_call\tr0, @abi_encode_bytes4_bool, @DEFAULT_UNWIND\n\tadd\tstack-[1], r0, r4\n\tsub\tr1, r4, r1\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd.ge\tr2, r0, r4\n\tshl.s\t64, r4, r2\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_47:\n\tadd\t128, r3, r3\n\tst.1\t64, r3\n\tcontext.gas_left\tr3\n\tsub.s!\t4, r2, r4\n\tjump.eq\t@.BB0_34\n\tadd\t@CPI0_0[0], r0, r4\n\tsub.s!\t@CPI0_0[0], r3, r5\n\tadd.ge\tr4, r0, r3\n\tsub.s!\t@CPI0_0[0], r1, r5\n\tadd.ge\tr4, r0, r1\n\tshl.s\t96, r1, r1\n\tshl.s\t192, r3, r3\n\tor\tr3, r1, r1\n\tor\t@CPI0_16[0], r1, r1\n\tjump\t@.BB0_43\n.func_end0:\n\nabi_encode_bytes4_bool:\n.func_begin1:\n\tsub!\tr3, r0, r3\n\tadd\t0, r0, r3\n\tadd.ne\t1, r0, r3\n\tadd\t32, r1, r4\n\tst.1\tr4, r3\n\tand\t@CPI1_0[0], r2, r2\n\tst.1\tr1, r2\n\tadd\t64, r1, r1\n\tret\n.func_end1:\n\nextract_returndata:\n.func_begin2:\n\tadd!\tstack[@returndatasize], r0, r4\n\tjump.eq\t@.BB2_8\n\tadd\t31, r4, r1\n\tsub.s\t32, r0, r2\n\tand\tr1, r2, r1\n\tadd\t63, r1, r1\n\tand\tr1, r2, r2\n\tld.1\t64, r1\n\tadd\tr1, r2, r2\n\tsub!\tr2, r1, r3\n\tadd\t0, r0, r3\n\tadd.lt\t1, r0, r3\n\tsub.s!\t@CPI2_0[0], r2, r5\n\tjump.gt\t@.BB2_10\n\tand!\t1, r3, r3\n\tjump.ne\t@.BB2_10\n\tst.1\t64, r2\n\tand\t31, r4, r2\n\tst.1.inc\tr1, r4, r3\n\tptr.add\tstack[@ptr_return_data], r0, r5\n\tshr.s!\t5, r4, r4\n\tjump.eq\t@.BB2_6\n\tadd\tr0, r0, r6\n.BB2_5:\n\tshl.s\t5, r6, r7\n\tadd\tr3, r7, r8\n\tptr.add\tr5, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r4, r7\n\tjump.lt\t@.BB2_5\n.BB2_6:\n\tsub!\tr2, r0, r6\n\tjump.eq\t@.BB2_9\n\tshl.s\t5, r4, r4\n\tptr.add\tr5, r4, r5\n\tadd\tr3, r4, r3\n\tshl.s\t3, r2, r2\n\tld.1\tr3, r4\n\tshl\tr4, r2, r4\n\tshr\tr4, r2, r4\n\tld\tr5, r5\n\tsub\t256, r2, r2\n\tshr\tr5, r2, r5\n\tshl\tr5, r2, r2\n\tor\tr2, r4, r2\n\tst.1\tr3, r2\n\tret\n.BB2_8:\n\tadd\t96, r0, r1\n.BB2_9:\n\tret\n.BB2_10:\n\tadd\t@CPI2_1[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI2_2[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end2:\n\nconvert_bytes_to_fixedbytes_from_bytes_to_bytes4:\n.func_begin3:\n\tld.1.inc\tr1, r1, r2\n\tshl.s\t3, r1, r3\n\tsub\t32, r3, r3\n\tadd\t@CPI3_0[0], r0, r4\n\tshl\tr4, r3, r3\n\tsub.s!\t4, r1, r1\n\tadd.ge\tr4, r0, r3\n\tld.1\tr2, r1\n\tand\tr1, r3, r1\n\tret\n.func_end3:\n\n__farcall:\n.func_begin4:\n.tmp0:\n\tfar_call\tr1, r2, @.BB4_2\n.tmp1:\n\tadd\t1, r0, r2\n\tret\n.BB4_2:\n.tmp2:\n\tadd\tr0, r0, r2\n\tret\n.func_end4:\n\n__staticcall:\n.func_begin5:\n.tmp3:\n\tfar_call.static\tr1, r2, @.BB5_2\n.tmp4:\n\tadd\t1, r0, r2\n\tret\n.BB5_2:\n.tmp5:\n\tadd\tr0, r0, r2\n\tret\n.func_end5:\n\n\t.data\n\t.p2align\t5, 0x0\nreturndatasize:\n\t.cell 0\n\n\t.p2align\t5, 0x0\nptr_return_data:\n.cell\t0\n\n\t.note.GNU-stack\n\t.rodata\nCPI0_0:\n\t.cell 4294967295\nCPI0_1:\n\t.cell 8589934560\nCPI0_2:\n\t.cell 1461501637330902918203684832716283019655932542975\nCPI0_3:\n\t.cell -1461501637330902918203684832716283019655932542976\nCPI0_4:\n\t.cell 53919893334301279589334030174039261352344891250716429051063678533632\nCPI0_5:\n\t.cell 2027106773\nCPI0_6:\n\t.cell 2027106774\nCPI0_7:\n\t.cell 3838477575\nCPI0_8:\n\t.cell 484716985\nCPI0_9:\n\t.cell 1989190818\nCPI0_10:\n\t.cell -39341301877480157781710804024396230103289065588583741745104145964028735258624\nCPI0_11:\n\t.cell 5387515053921454008154516881408\nCPI0_12:\n\t.cell 2535301202817642044428229017600\nCPI0_13:\nCPI2_0:\n\t.cell 18446744073709551615\nCPI0_14:\n\t.cell -22420019357669834345825797084015992080187150320937869649977605271049776136192\nCPI0_15:\n\t.cell 18446744073709551488\nCPI0_16:\n\t.cell 2951479051793528258560\nCPI0_17:\nCPI2_1:\n\t.cell 35408467139433450592217433187231851964531694900788300625387963629091585785856\nCPI0_18:\nCPI2_2:\n\t.cell 2852213850513516153367582212096\nCPI0_19:\n\t.cell -46019604563732630406636316790970248074991899338700133951111298201533072539648\nCPI0_20:\n\t.cell 316912653008536402167704059904\nCPI1_0:\nCPI3_0:\n\t.cell -26959946667150639794667015087019630673637144422540572481103610249216\n","methodIdentifiers":{"callFunctionDirectly(bytes)":"7690a4a2","callTransferFunctionDirectlyThree(address,uint256)":"e4ca8507","s_selectorsAndSignaturesAddress()":"78d331d6","staticCallFunctionDirectly()":"1ce431b9"},"metadata":{"optimizer_settings":{"is_debug_logging_enabled":false,"is_fallback_to_size_enabled":false,"is_system_request_memoization_disabled":false,"is_verify_each_enabled":false,"jump_table_density_threshold":null,"level_back_end":"Aggressive","level_middle_end":"Aggressive","level_middle_end_size":"Zero"},"solc_metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"selectorsAndSignaturesAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"}],\"name\":\"callFunctionDirectly\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"},{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"someAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"callTransferFunctionDirectlyThree\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"},{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"s_selectorsAndSignaturesAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"staticCallFunctionDirectly\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"},{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/sublesson/CallAnything.sol\":\"CallFunctionWithoutContract\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul:fDnTOc\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":ds-test/=lib/openzeppelin-contracts/lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":foundry-devops/=lib/foundry-devops/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\"]},\"sources\":{\"src/sublesson/CallAnything.sol\":{\"keccak256\":\"0x438766d6c024ae6109d3e70683d35928f92b254cecad9a032cc44ab8376477e6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5718e69c1687bd32401407ffa2986d40efd3f577e758ef543525da06961eaa88\",\"dweb:/ipfs/QmaX1h3EMVaEt1EF4SJ7U6Wjf6aq8rrYTGs2KKWGh1xg9D\"]}},\"version\":1}","solc_version":"0.8.20","solc_zkvm_edition":null,"zk_version":"1.4.1"},"storageLayout":{"storage":[],"types":{}},"userdoc":{},"devdoc":{},"irOptimized":"/// @use-src 45:\"src/sublesson/CallAnything.sol\"\nobject \"CallFunctionWithoutContract_51300\" {\n    code {\n        {\n            /// @src 45:4037:5468  \"contract CallFunctionWithoutContract {...\"\n            let _1 := memoryguard(0x80)\n            if callvalue() { revert(0, 0) }\n            let programSize := datasize(\"CallFunctionWithoutContract_51300\")\n            let argSize := sub(codesize(), programSize)\n            let newFreePtr := add(_1, and(add(argSize, 31), not(31)))\n            if or(gt(newFreePtr, sub(shl(64, 1), 1)), lt(newFreePtr, _1))\n            {\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 45:4037:5468  \"contract CallFunctionWithoutContract {...\" */ shl(224, 0x4e487b71))\n                mstore(4, 0x41)\n                revert(/** @src -1:-1:-1 */ 0, /** @src 45:4037:5468  \"contract CallFunctionWithoutContract {...\" */ 0x24)\n            }\n            mstore(64, newFreePtr)\n            codecopy(_1, programSize, argSize)\n            if slt(sub(add(_1, argSize), _1), 32)\n            {\n                revert(/** @src -1:-1:-1 */ 0, 0)\n            }\n            /// @src 45:4037:5468  \"contract CallFunctionWithoutContract {...\"\n            let value := mload(_1)\n            let _2 := and(value, sub(shl(160, 1), 1))\n            if iszero(eq(value, _2))\n            {\n                revert(/** @src -1:-1:-1 */ 0, 0)\n            }\n            /// @src 45:4037:5468  \"contract CallFunctionWithoutContract {...\"\n            sstore(/** @src -1:-1:-1 */ 0, /** @src 45:4037:5468  \"contract CallFunctionWithoutContract {...\" */ or(and(sload(/** @src -1:-1:-1 */ 0), /** @src 45:4037:5468  \"contract CallFunctionWithoutContract {...\" */ not(sub(shl(160, 1), 1))), _2))\n            let _3 := mload(64)\n            let _4 := datasize(\"CallFunctionWithoutContract_51300_deployed\")\n            codecopy(_3, dataoffset(\"CallFunctionWithoutContract_51300_deployed\"), _4)\n            return(_3, _4)\n        }\n    }\n    /// @use-src 45:\"src/sublesson/CallAnything.sol\"\n    object \"CallFunctionWithoutContract_51300_deployed\" {\n        code {\n            {\n                /// @src 45:4037:5468  \"contract CallFunctionWithoutContract {...\"\n                let _1 := memoryguard(0x80)\n                let _2 := 64\n                mstore(_2, _1)\n                let _3 := 4\n                if iszero(lt(calldatasize(), _3))\n                {\n                    let _4 := 0\n                    switch shr(224, calldataload(_4))\n                    case 0x1ce431b9 {\n                        if callvalue() { revert(_4, _4) }\n                        if slt(add(calldatasize(), not(3)), _4) { revert(_4, _4) }\n                        let value := and(sload(_4), sub(shl(160, 1), 1))\n                        /// @src 45:5015:5058  \"abi.encodeWithSignature(\\\"getSelectorOne()\\\")\"\n                        let _5 := add(_1, 0x20)\n                        mstore(_5, shl(224, 0x9a41d3ad))\n                        mstore(_1, /** @src 45:4037:5468  \"contract CallFunctionWithoutContract {...\" */ _3)\n                        let newFreePtr := add(_1, _2)\n                        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, _1))\n                        {\n                            mstore(_4, shl(224, 0x4e487b71))\n                            mstore(_3, 0x41)\n                            revert(_4, /** @src 45:5015:5058  \"abi.encodeWithSignature(\\\"getSelectorOne()\\\")\" */ 36)\n                        }\n                        /// @src 45:4037:5468  \"contract CallFunctionWithoutContract {...\"\n                        mstore(_2, newFreePtr)\n                        /// @src 45:4972:5059  \"s_selectorsAndSignaturesAddress.staticcall(abi.encodeWithSignature(\\\"getSelectorOne()\\\"))\"\n                        let expr_component := staticcall(gas(), value, _5, mload(_1), /** @src 45:4037:5468  \"contract CallFunctionWithoutContract {...\" */ _4, _4)\n                        /// @src 45:5069:5105  \"return (bytes4(returnData), success)\"\n                        let var := /** @src 45:5077:5095  \"bytes4(returnData)\" */ convert_bytes_to_fixedbytes_from_bytes_to_bytes4(/** @src 45:4972:5059  \"s_selectorsAndSignaturesAddress.staticcall(abi.encodeWithSignature(\\\"getSelectorOne()\\\"))\" */ extract_returndata())\n                        /// @src 45:4037:5468  \"contract CallFunctionWithoutContract {...\"\n                        let memPos := mload(_2)\n                        return(memPos, sub(abi_encode_bytes4_bool(memPos, var, expr_component), memPos))\n                    }\n                    case 0x7690a4a2 {\n                        if callvalue() { revert(_4, _4) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(_4, _4) }\n                        let offset := calldataload(_3)\n                        let _6 := 0xffffffffffffffff\n                        if gt(offset, _6) { revert(_4, _4) }\n                        if iszero(slt(add(offset, 35), calldatasize())) { revert(_4, _4) }\n                        let length := calldataload(add(_3, offset))\n                        if gt(length, _6) { revert(_4, _4) }\n                        if gt(add(add(offset, length), 36), calldatasize()) { revert(_4, _4) }\n                        let value_1 := and(sload(_4), sub(shl(160, 1), 1))\n                        /// @src 45:4652:4712  \"abi.encodeWithSignature(\\\"getSelectorThree(bytes)\\\", callData)\"\n                        let expr_mpos := /** @src 45:4037:5468  \"contract CallFunctionWithoutContract {...\" */ mload(_2)\n                        /// @src 45:4652:4712  \"abi.encodeWithSignature(\\\"getSelectorThree(bytes)\\\", callData)\"\n                        let _7 := add(expr_mpos, /** @src 45:4037:5468  \"contract CallFunctionWithoutContract {...\" */ 32)\n                        /// @src 45:4652:4712  \"abi.encodeWithSignature(\\\"getSelectorThree(bytes)\\\", callData)\"\n                        mstore(_7, shl(224, 0xce6eb7ff))\n                        /// @src 45:4037:5468  \"contract CallFunctionWithoutContract {...\"\n                        mstore(/** @src 45:4652:4712  \"abi.encodeWithSignature(\\\"getSelectorThree(bytes)\\\", callData)\" */ add(expr_mpos, /** @src 45:4037:5468  \"contract CallFunctionWithoutContract {...\" */ 36), 32)\n                        mstore(add(/** @src 45:4652:4712  \"abi.encodeWithSignature(\\\"getSelectorThree(bytes)\\\", callData)\" */ expr_mpos, /** @src 45:4037:5468  \"contract CallFunctionWithoutContract {...\" */ 68), length)\n                        calldatacopy(add(/** @src 45:4652:4712  \"abi.encodeWithSignature(\\\"getSelectorThree(bytes)\\\", callData)\" */ expr_mpos, /** @src 45:4037:5468  \"contract CallFunctionWithoutContract {...\" */ 100), add(offset, 36), length)\n                        mstore(add(add(/** @src 45:4652:4712  \"abi.encodeWithSignature(\\\"getSelectorThree(bytes)\\\", callData)\" */ expr_mpos, /** @src 45:4037:5468  \"contract CallFunctionWithoutContract {...\" */ length), 100), _4)\n                        /// @src 45:4652:4712  \"abi.encodeWithSignature(\\\"getSelectorThree(bytes)\\\", callData)\"\n                        let _8 := sub(/** @src 45:4037:5468  \"contract CallFunctionWithoutContract {...\" */ add(/** @src 45:4652:4712  \"abi.encodeWithSignature(\\\"getSelectorThree(bytes)\\\", callData)\" */ expr_mpos, /** @src 45:4037:5468  \"contract CallFunctionWithoutContract {...\" */ and(add(length, 0x1f), not(31))), /** @src 45:4652:4712  \"abi.encodeWithSignature(\\\"getSelectorThree(bytes)\\\", callData)\" */ expr_mpos)\n                        mstore(expr_mpos, add(_8, /** @src 45:4037:5468  \"contract CallFunctionWithoutContract {...\" */ 68))\n                        /// @src 45:4652:4712  \"abi.encodeWithSignature(\\\"getSelectorThree(bytes)\\\", callData)\"\n                        finalize_allocation(expr_mpos, add(_8, /** @src 45:4037:5468  \"contract CallFunctionWithoutContract {...\" */ 100))\n                        /// @src 45:4615:4713  \"s_selectorsAndSignaturesAddress.call(abi.encodeWithSignature(\\\"getSelectorThree(bytes)\\\", callData))\"\n                        let expr_component_1 := call(gas(), value_1, /** @src 45:4037:5468  \"contract CallFunctionWithoutContract {...\" */ _4, /** @src 45:4615:4713  \"s_selectorsAndSignaturesAddress.call(abi.encodeWithSignature(\\\"getSelectorThree(bytes)\\\", callData))\" */ _7, mload(expr_mpos), /** @src 45:4037:5468  \"contract CallFunctionWithoutContract {...\" */ _4, _4)\n                        /// @src 45:4723:4759  \"return (bytes4(returnData), success)\"\n                        let var_1 := /** @src 45:4731:4749  \"bytes4(returnData)\" */ convert_bytes_to_fixedbytes_from_bytes_to_bytes4(/** @src 45:4615:4713  \"s_selectorsAndSignaturesAddress.call(abi.encodeWithSignature(\\\"getSelectorThree(bytes)\\\", callData))\" */ extract_returndata())\n                        /// @src 45:4037:5468  \"contract CallFunctionWithoutContract {...\"\n                        let memPos_1 := mload(_2)\n                        return(memPos_1, sub(abi_encode_bytes4_bool(memPos_1, var_1, expr_component_1), memPos_1))\n                    }\n                    case 0x78d331d6 {\n                        if callvalue() { revert(_4, _4) }\n                        if slt(add(calldatasize(), not(3)), _4) { revert(_4, _4) }\n                        let value_2 := and(sload(_4), sub(shl(160, 1), 1))\n                        let memPos_2 := mload(_2)\n                        mstore(memPos_2, value_2)\n                        return(memPos_2, 32)\n                    }\n                    case 0xe4ca8507 {\n                        if callvalue() { revert(_4, _4) }\n                        if slt(add(calldatasize(), not(3)), _2) { revert(_4, _4) }\n                        let value_3 := calldataload(_3)\n                        let _9 := sub(shl(160, 1), 1)\n                        let _10 := and(value_3, _9)\n                        if iszero(eq(value_3, _10)) { revert(_4, _4) }\n                        let value_4 := and(sload(_4), _9)\n                        /// @src 45:5330:5403  \"abi.encodeWithSignature(\\\"transfer(address,uint256)\\\", someAddress, amount)\"\n                        let expr_mpos_1 := /** @src 45:4037:5468  \"contract CallFunctionWithoutContract {...\" */ mload(_2)\n                        /// @src 45:5330:5403  \"abi.encodeWithSignature(\\\"transfer(address,uint256)\\\", someAddress, amount)\"\n                        let _11 := add(expr_mpos_1, /** @src 45:4037:5468  \"contract CallFunctionWithoutContract {...\" */ 32)\n                        /// @src 45:5330:5403  \"abi.encodeWithSignature(\\\"transfer(address,uint256)\\\", someAddress, amount)\"\n                        mstore(_11, shl(224, 0xa9059cbb))\n                        /// @src 45:4037:5468  \"contract CallFunctionWithoutContract {...\"\n                        mstore(/** @src 45:5330:5403  \"abi.encodeWithSignature(\\\"transfer(address,uint256)\\\", someAddress, amount)\" */ add(expr_mpos_1, /** @src 45:4037:5468  \"contract CallFunctionWithoutContract {...\" */ 36), _10)\n                        mstore(add(/** @src 45:5330:5403  \"abi.encodeWithSignature(\\\"transfer(address,uint256)\\\", someAddress, amount)\" */ expr_mpos_1, /** @src 45:4037:5468  \"contract CallFunctionWithoutContract {...\" */ 68), calldataload(36))\n                        /// @src 45:5330:5403  \"abi.encodeWithSignature(\\\"transfer(address,uint256)\\\", someAddress, amount)\"\n                        mstore(expr_mpos_1, /** @src 45:4037:5468  \"contract CallFunctionWithoutContract {...\" */ 68)\n                        let newFreePtr_1 := add(expr_mpos_1, 128)\n                        if or(gt(newFreePtr_1, 0xffffffffffffffff), lt(newFreePtr_1, expr_mpos_1))\n                        {\n                            mstore(_4, shl(224, 0x4e487b71))\n                            mstore(_3, 0x41)\n                            revert(_4, 36)\n                        }\n                        mstore(_2, newFreePtr_1)\n                        /// @src 45:5280:5413  \"s_selectorsAndSignaturesAddress.call(...\"\n                        let expr_component_2 := call(gas(), value_4, /** @src 45:4037:5468  \"contract CallFunctionWithoutContract {...\" */ _4, /** @src 45:5280:5413  \"s_selectorsAndSignaturesAddress.call(...\" */ _11, mload(expr_mpos_1), /** @src 45:4037:5468  \"contract CallFunctionWithoutContract {...\" */ _4, _4)\n                        /// @src 45:5423:5459  \"return (bytes4(returnData), success)\"\n                        let var_2 := /** @src 45:5431:5449  \"bytes4(returnData)\" */ convert_bytes_to_fixedbytes_from_bytes_to_bytes4(/** @src 45:5280:5413  \"s_selectorsAndSignaturesAddress.call(...\" */ extract_returndata())\n                        /// @src 45:4037:5468  \"contract CallFunctionWithoutContract {...\"\n                        let memPos_3 := mload(_2)\n                        return(memPos_3, sub(abi_encode_bytes4_bool(memPos_3, var_2, expr_component_2), memPos_3))\n                    }\n                }\n                revert(0, 0)\n            }\n            function abi_encode_bytes4_bool(headStart, value0, value1) -> tail\n            {\n                tail := add(headStart, 64)\n                mstore(headStart, and(value0, shl(224, 0xffffffff)))\n                mstore(add(headStart, 32), iszero(iszero(value1)))\n            }\n            function finalize_allocation(memPtr, size)\n            {\n                let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr))\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x41)\n                    revert(0, 0x24)\n                }\n                mstore(64, newFreePtr)\n            }\n            function extract_returndata() -> data\n            {\n                switch returndatasize()\n                case 0 { data := 96 }\n                default {\n                    let _1 := returndatasize()\n                    if gt(_1, 0xffffffffffffffff)\n                    {\n                        mstore(/** @src -1:-1:-1 */ 0, /** @src 45:4037:5468  \"contract CallFunctionWithoutContract {...\" */ shl(224, 0x4e487b71))\n                        mstore(4, 0x41)\n                        revert(/** @src -1:-1:-1 */ 0, /** @src 45:4037:5468  \"contract CallFunctionWithoutContract {...\" */ 0x24)\n                    }\n                    let memPtr := mload(64)\n                    finalize_allocation(memPtr, add(and(add(_1, 31), not(31)), 0x20))\n                    mstore(memPtr, _1)\n                    data := memPtr\n                    returndatacopy(add(memPtr, 0x20), /** @src -1:-1:-1 */ 0, /** @src 45:4037:5468  \"contract CallFunctionWithoutContract {...\" */ returndatasize())\n                }\n            }\n            function convert_bytes_to_fixedbytes_from_bytes_to_bytes4(array) -> value\n            {\n                let length := mload(array)\n                let _1 := mload(add(array, 0x20))\n                let _2 := shl(224, 0xffffffff)\n                value := and(_1, _2)\n                if lt(length, 4)\n                {\n                    value := and(and(_1, shl(shl(3, sub(4, length)), _2)), _2)\n                }\n            }\n        }\n        data \".metadata\" hex\"a164736f6c6343000814000a\"\n    }\n}\n","hash":"0100006ba1108347ed0dd67e4fbf1e05268530f30e8679f6431f4d494e5d2e59","factoryDependencies":{},"id":45}